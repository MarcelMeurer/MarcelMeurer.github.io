
var documents = [{
    "id": 0,
    "url": "/404.html",
    "title": "404",
    "body": "404 Page does not exist!Please use the search bar at the top or visit our homepage! "
    }, {
    "id": 1,
    "url": "/about",
    "title": "About me and about the synonym ITProCloud.de",
    "body": "What is the purpose of this page?: ITProCloud. de is my private blog site. I use this site to store and publish my blog post. In the professional context, I also publish blogs on the homepage of my employer sepago GmbH in Germany (https://www. sepago. de/blog/author/marcel-meurer/). Therefore, a blog post can be found on both sides. What is ITProCloud. de?: ITProCloud. de is the DNS name I use for tests, demos and (of course) my web site. My Biography: Today I'm responsible for the professional IT services business unit at sepago GmbH in Cologne. In this role, I lead a team of consultants who provide their expertise in Microsoft and Citrix Technologies for customers and partners. My technical focuses are Microsoft Azure platform services and I'm a Microsoft Azure MVP since 2016. I started my IT career in the early 1990s with first contacts to personal computers (and before that with the Commodore 64). Assembler and hardware-related programming were in my focus – the IoT of the 90s. In the year 1995, I started studying electrical engineering. During my studies, machine learning and neural networks were one of my favorite topics. In addition to my studies, I worked for a small computer company in Aachen, where I provided operating systems and applications with automated methods on many computers. I graduated as an engineer in electrical engineering from the University of Applied Science Aachen. My last and next sessions: Speaking at your conference: If you are hosting events realted to the Azure Cloud, IoT, Development, Azure Monitor, etc. I would be happy to support this event with content. Feel free to contact me. Get in touch with me: I’d like you to get in touch with me.       												             												      			  												            												      			        												      "
    }, {
    "id": 2,
    "url": "/categories",
    "title": "Categories",
    "body": ""
    }, {
    "id": 3,
    "url": "/Impressum",
    "title": "Impressum / Imprint",
    "body": "Marcel MeurerEichholzer Weg 3551519 OdenthalDeutschland / Germany Telefon/Telephone: +49 173 7331284E-Mail/Email: marcel. meurer@itprocloud. de "
    }, {
    "id": 4,
    "url": "/",
    "title": "Home",
    "body": "      Featured:         &lt;!-- begin post --&gt;                                                      &lt;img class=&quot;featured-box-img-cover&quot; src=&quot;/assets/images/WVDAdmin-01. png&quot;&gt;                      &lt;/a&gt;        &lt;/div&gt;      &lt;/div&gt;    &lt;/div&gt;    &lt;div class=&quot;col-12 col-md-12 col-lg-7&quot;&gt;      &lt;div class=&quot;h-100 card-group&quot;&gt;        &lt;div class=&quot;card&quot;&gt;          &lt;div class=&quot;card-body&quot;&gt;            &lt;h2 class=&quot;card-title&quot;&gt;              &lt;a class=&quot;text-dark&quot; href=&quot;/Windows-Virtual-Desktop-Admin/&quot;&gt;WVD Admin - A native administration Gui for Windows Virtual Desktop&lt;/a&gt;                          &lt;/h2&gt;            &lt;h4 class=&quot;card-text&quot;&gt;Windows Virtual Desktop administration with WVDAdmin:                                                     &lt;span class=&quot;meta-footer-thumb&quot;&gt;                            &lt;img class=&quot;author-thumb&quot; src=&quot;/assets/images/avatar-mm. png&quot; alt=&quot;Marcel&quot;&gt;                            &lt;/span&gt;              &lt;span class=&quot;author-meta&quot;&gt;              &lt;span class=&quot;post-name&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://blog. itprocloud. de&quot;&gt;Marcel&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;                            &lt;span class=&quot;post-date&quot;&gt;09 Dec 2020&lt;/span&gt;              &lt;/span&gt;              &lt;span class=&quot;post-read-more&quot;&gt;&lt;a href=&quot;//Windows-Virtual-Desktop-Admin/&quot; title=&quot;Read Story&quot;&gt;&lt;svg class=&quot;svgIcon-use&quot; width=&quot;25&quot; height=&quot;25&quot; viewbox=&quot;0 0 25 25&quot;&gt;&lt;path d=&quot;M19 6c0-1. 1-. 9-2-2-2H8c-1. 1 0-2 . 9-2 2v14. 66h. 012c. 01. 103. 045. 204. 12. 285a. 5. 5 0 0 0 . 706. 03L12. 5 16. 85l5. 662 4. 126a. 508. 508 0 0 0 . 708-. 03. 5. 5 0 0 0 . 118-. 285H19V6zm-6. 838 9. 97L7 19. 636V6c0-. 55. 45-1 1-1h9c. 55 0 1 . 45 1 1v13. 637l-5. 162-3. 668a. 49. 49 0 0 0-. 676 0z&quot; fill-rule=&quot;evenodd&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/span&gt;              &lt;div class=&quot;clearfix&quot;&gt;&lt;/div&gt;            &lt;/div&gt;          &lt;/div&gt;        &lt;/div&gt;      &lt;/div&gt;    &lt;/div&gt;  &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&quot;section-title&quot;&gt;  &lt;h2&gt;&lt;span&gt;All Posts&lt;/span&gt;&lt;/h2&gt;&lt;/div&gt;&lt;div class=&quot;row listrecent&quot;&gt;    &lt;!-- begin post --&gt;                      &lt;img class=&quot;img-fluid&quot; src=&quot;/assets/images/WVDAdmin-01. png&quot; alt=&quot;WVD Admin - A native administration Gui for Windows Virtual Desktop&quot;&gt;                   &lt;/a&gt;  &lt;/div&gt;  &lt;div class=&quot;card-body&quot;&gt;    &lt;h2 class=&quot;card-title&quot;&gt;      &lt;a class=&quot;text-dark&quot; href=&quot;/Windows-Virtual-Desktop-Admin/&quot;&gt;WVD Admin - A native administration Gui for Windows Virtual Desktop&lt;/a&gt;          &lt;/h2&gt;    &lt;h4 class=&quot;card-text&quot;&gt;Windows Virtual Desktop administration with WVDAdmin:                     &lt;span class=&quot;meta-footer-thumb&quot;&gt;            &lt;img class=&quot;author-thumb&quot; src=&quot;/assets/images/avatar-mm. png&quot; alt=&quot;Marcel&quot;&gt;            &lt;/span&gt;      &lt;span class=&quot;author-meta&quot;&gt;      &lt;span class=&quot;post-name&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://blog. itprocloud. de&quot;&gt;Marcel&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;            &lt;span class=&quot;post-date&quot;&gt;09 Dec 2020&lt;/span&gt;      &lt;/span&gt;      &lt;span class=&quot;post-read-more&quot;&gt;&lt;a href=&quot;/Windows-Virtual-Desktop-Admin/&quot; title=&quot;Read Story&quot;&gt;&lt;svg class=&quot;svgIcon-use&quot; width=&quot;25&quot; height=&quot;25&quot; viewbox=&quot;0 0 25 25&quot;&gt;&lt;path d=&quot;M19 6c0-1. 1-. 9-2-2-2H8c-1. 1 0-2 . 9-2 2v14. 66h. 012c. 01. 103. 045. 204. 12. 285a. 5. 5 0 0 0 . 706. 03L12. 5 16. 85l5. 662 4. 126a. 508. 508 0 0 0 . 708-. 03. 5. 5 0 0 0 . 118-. 285H19V6zm-6. 838 9. 97L7 19. 636V6c0-. 55. 45-1 1-1h9c. 55 0 1 . 45 1 1v13. 637l-5. 162-3. 668a. 49. 49 0 0 0-. 676 0z&quot; fill-rule=&quot;evenodd&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/span&gt;      &lt;div class=&quot;clearfix&quot;&gt;&lt;/div&gt;    &lt;/div&gt;  &lt;/div&gt;&lt;/div&gt;  &lt;!-- begin post --&gt;                      &lt;img class=&quot;img-fluid&quot; src=&quot;/assets/images/WVDAdmin/WVDAdmin-CustomScripts-ShortPath-03. png&quot; alt=&quot;WVD Admin - Custom Scripts to run administrative tasks&quot;&gt;                   &lt;/a&gt;  &lt;/div&gt;  &lt;div class=&quot;card-body&quot;&gt;    &lt;h2 class=&quot;card-title&quot;&gt;      &lt;a class=&quot;text-dark&quot; href=&quot;/Windows-Virtual-Desktop-Admin-CustomScripts/&quot;&gt;WVD Admin - Custom Scripts to run administrative tasks&lt;/a&gt;          &lt;/h2&gt;    &lt;h4 class=&quot;card-text&quot;&gt;Custom Scripts with WVDAdmin:                     &lt;span class=&quot;meta-footer-thumb&quot;&gt;            &lt;img class=&quot;author-thumb&quot; src=&quot;/assets/images/avatar-mm. png&quot; alt=&quot;Marcel&quot;&gt;            &lt;/span&gt;      &lt;span class=&quot;author-meta&quot;&gt;      &lt;span class=&quot;post-name&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://blog. itprocloud. de&quot;&gt;Marcel&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;            &lt;span class=&quot;post-date&quot;&gt;18 Nov 2020&lt;/span&gt;      &lt;/span&gt;      &lt;span class=&quot;post-read-more&quot;&gt;&lt;a href=&quot;/Windows-Virtual-Desktop-Admin-CustomScripts/&quot; title=&quot;Read Story&quot;&gt;&lt;svg class=&quot;svgIcon-use&quot; width=&quot;25&quot; height=&quot;25&quot; viewbox=&quot;0 0 25 25&quot;&gt;&lt;path d=&quot;M19 6c0-1. 1-. 9-2-2-2H8c-1. 1 0-2 . 9-2 2v14. 66h. 012c. 01. 103. 045. 204. 12. 285a. 5. 5 0 0 0 . 706. 03L12. 5 16. 85l5. 662 4. 126a. 508. 508 0 0 0 . 708-. 03. 5. 5 0 0 0 . 118-. 285H19V6zm-6. 838 9. 97L7 19. 636V6c0-. 55. 45-1 1-1h9c. 55 0 1 . 45 1 1v13. 637l-5. 162-3. 668a. 49. 49 0 0 0-. 676 0z&quot; fill-rule=&quot;evenodd&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/span&gt;      &lt;div class=&quot;clearfix&quot;&gt;&lt;/div&gt;    &lt;/div&gt;  &lt;/div&gt;&lt;/div&gt;  &lt;!-- begin post --&gt;                      &lt;img class=&quot;img-fluid&quot; src=&quot;/assets/images/LogicApp-AAD-AzureMonitor-008. png&quot; alt=&quot;Push Azure AD User properties into Azure Monitor Log Analytics to build Windows Virtual Desktop (WVD) performance data based on these&quot;&gt;                   &lt;/a&gt;  &lt;/div&gt;  &lt;div class=&quot;card-body&quot;&gt;    &lt;h2 class=&quot;card-title&quot;&gt;      &lt;a class=&quot;text-dark&quot; href=&quot;/Push-Azure-AD-User-data-into-Azure-Monitor-Log-Analytics-to-query-WVD-data/&quot;&gt;Push Azure AD User properties into Azure Monitor Log Analytics to build Windows Virtual Desktop (WVD) performance data based on these&lt;/a&gt;          &lt;/h2&gt;    &lt;h4 class=&quot;card-text&quot;&gt;Azure Monitor / Log Analytics is my first choice to store log and usage data. Even for Windows Virtual Desktop (WVD), it is crucial to have an eye on the. . . &lt;/h4&gt;  &lt;/div&gt;  &lt;div class=&quot;card-footer bg-white&quot;&gt;    &lt;div class=&quot;wrapfooter&quot;&gt;            &lt;span class=&quot;meta-footer-thumb&quot;&gt;            &lt;img class=&quot;author-thumb&quot; src=&quot;/assets/images/avatar-mm. png&quot; alt=&quot;Marcel&quot;&gt;            &lt;/span&gt;      &lt;span class=&quot;author-meta&quot;&gt;      &lt;span class=&quot;post-name&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://blog. itprocloud. de&quot;&gt;Marcel&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;            &lt;span class=&quot;post-date&quot;&gt;01 Oct 2020&lt;/span&gt;      &lt;/span&gt;      &lt;span class=&quot;post-read-more&quot;&gt;&lt;a href=&quot;/Push-Azure-AD-User-data-into-Azure-Monitor-Log-Analytics-to-query-WVD-data/&quot; title=&quot;Read Story&quot;&gt;&lt;svg class=&quot;svgIcon-use&quot; width=&quot;25&quot; height=&quot;25&quot; viewbox=&quot;0 0 25 25&quot;&gt;&lt;path d=&quot;M19 6c0-1. 1-. 9-2-2-2H8c-1. 1 0-2 . 9-2 2v14. 66h. 012c. 01. 103. 045. 204. 12. 285a. 5. 5 0 0 0 . 706. 03L12. 5 16. 85l5. 662 4. 126a. 508. 508 0 0 0 . 708-. 03. 5. 5 0 0 0 . 118-. 285H19V6zm-6. 838 9. 97L7 19. 636V6c0-. 55. 45-1 1-1h9c. 55 0 1 . 45 1 1v13. 637l-5. 162-3. 668a. 49. 49 0 0 0-. 676 0z&quot; fill-rule=&quot;evenodd&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/span&gt;      &lt;div class=&quot;clearfix&quot;&gt;&lt;/div&gt;    &lt;/div&gt;  &lt;/div&gt;&lt;/div&gt;  &lt;!-- begin post --&gt;                      &lt;img class=&quot;img-fluid&quot; src=&quot;/assets/images/WVD-CustomRoles. png&quot; alt=&quot;Least privileges with custom roles for Windows Virtual Desktop (WVD)&quot;&gt;                   &lt;/a&gt;  &lt;/div&gt;  &lt;div class=&quot;card-body&quot;&gt;    &lt;h2 class=&quot;card-title&quot;&gt;      &lt;a class=&quot;text-dark&quot; href=&quot;/Least-privileges-with-custom-roles-for-Windows-Virtual-Desktop-(WVD)/&quot;&gt;Least privileges with custom roles for Windows Virtual Desktop (WVD)&lt;/a&gt;          &lt;/h2&gt;    &lt;h4 class=&quot;card-text&quot;&gt;Administration, deployment, user support of Windows Virtual Desktop (WVD) needs permission in Azure. But these permissions are depending on the task a group of users/administrators have to do. For example,. . . &lt;/h4&gt;  &lt;/div&gt;  &lt;div class=&quot;card-footer bg-white&quot;&gt;    &lt;div class=&quot;wrapfooter&quot;&gt;            &lt;span class=&quot;meta-footer-thumb&quot;&gt;            &lt;img class=&quot;author-thumb&quot; src=&quot;/assets/images/avatar-mm. png&quot; alt=&quot;Marcel&quot;&gt;            &lt;/span&gt;      &lt;span class=&quot;author-meta&quot;&gt;      &lt;span class=&quot;post-name&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://blog. itprocloud. de&quot;&gt;Marcel&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;            &lt;span class=&quot;post-date&quot;&gt;10 Sep 2020&lt;/span&gt;      &lt;/span&gt;      &lt;span class=&quot;post-read-more&quot;&gt;&lt;a href=&quot;/Least-privileges-with-custom-roles-for-Windows-Virtual-Desktop-(WVD)/&quot; title=&quot;Read Story&quot;&gt;&lt;svg class=&quot;svgIcon-use&quot; width=&quot;25&quot; height=&quot;25&quot; viewbox=&quot;0 0 25 25&quot;&gt;&lt;path d=&quot;M19 6c0-1. 1-. 9-2-2-2H8c-1. 1 0-2 . 9-2 2v14. 66h. 012c. 01. 103. 045. 204. 12. 285a. 5. 5 0 0 0 . 706. 03L12. 5 16. 85l5. 662 4. 126a. 508. 508 0 0 0 . 708-. 03. 5. 5 0 0 0 . 118-. 285H19V6zm-6. 838 9. 97L7 19. 636V6c0-. 55. 45-1 1-1h9c. 55 0 1 . 45 1 1v13. 637l-5. 162-3. 668a. 49. 49 0 0 0-. 676 0z&quot; fill-rule=&quot;evenodd&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/span&gt;      &lt;div class=&quot;clearfix&quot;&gt;&lt;/div&gt;    &lt;/div&gt;  &lt;/div&gt;&lt;/div&gt;  &lt;!-- begin post --&gt;                      &lt;img class=&quot;img-fluid&quot; src=&quot;/assets/images/WVD request shadowing. png&quot; alt=&quot;Shadow a WVD user with least privileges&quot;&gt;                   &lt;/a&gt;  &lt;/div&gt;  &lt;div class=&quot;card-body&quot;&gt;    &lt;h2 class=&quot;card-title&quot;&gt;      &lt;a class=&quot;text-dark&quot; href=&quot;/Shadow-a-WVD-user-with-least-privileges/&quot;&gt;Shadow a WVD user with least privileges&lt;/a&gt;          &lt;/h2&gt;    &lt;h4 class=&quot;card-text&quot;&gt;WVD allows local administrators to shadow user sessions. You can do this easily with WVDAdmin or using the command-line like this::                     &lt;span class=&quot;meta-footer-thumb&quot;&gt;            &lt;img class=&quot;author-thumb&quot; src=&quot;/assets/images/avatar-mm. png&quot; alt=&quot;Marcel&quot;&gt;            &lt;/span&gt;      &lt;span class=&quot;author-meta&quot;&gt;      &lt;span class=&quot;post-name&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://blog. itprocloud. de&quot;&gt;Marcel&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;            &lt;span class=&quot;post-date&quot;&gt;24 Aug 2020&lt;/span&gt;      &lt;/span&gt;      &lt;span class=&quot;post-read-more&quot;&gt;&lt;a href=&quot;/Shadow-a-WVD-user-with-least-privileges/&quot; title=&quot;Read Story&quot;&gt;&lt;svg class=&quot;svgIcon-use&quot; width=&quot;25&quot; height=&quot;25&quot; viewbox=&quot;0 0 25 25&quot;&gt;&lt;path d=&quot;M19 6c0-1. 1-. 9-2-2-2H8c-1. 1 0-2 . 9-2 2v14. 66h. 012c. 01. 103. 045. 204. 12. 285a. 5. 5 0 0 0 . 706. 03L12. 5 16. 85l5. 662 4. 126a. 508. 508 0 0 0 . 708-. 03. 5. 5 0 0 0 . 118-. 285H19V6zm-6. 838 9. 97L7 19. 636V6c0-. 55. 45-1 1-1h9c. 55 0 1 . 45 1 1v13. 637l-5. 162-3. 668a. 49. 49 0 0 0-. 676 0z&quot; fill-rule=&quot;evenodd&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/span&gt;      &lt;div class=&quot;clearfix&quot;&gt;&lt;/div&gt;    &lt;/div&gt;  &lt;/div&gt;&lt;/div&gt;  &lt;!-- begin post --&gt;                      &lt;img class=&quot;img-fluid&quot; src=&quot;/assets/images/Sysprep-01. png&quot; alt=&quot;What's wrong with Windows 10 and UWP and Sysprep?&quot;&gt;                   &lt;/a&gt;  &lt;/div&gt;  &lt;div class=&quot;card-body&quot;&gt;    &lt;h2 class=&quot;card-title&quot;&gt;      &lt;a class=&quot;text-dark&quot; href=&quot;/Sysprep-and-WVD-and-UWP/&quot;&gt;What's wrong with Windows 10 and UWP and Sysprep?&lt;/a&gt;          &lt;/h2&gt;    &lt;h4 class=&quot;card-text&quot;&gt;I’m working in the WVD area and often create golden images to deploy session hosts for WVD - mainly based on Windows 10 Enterprise multi-session. To do that, I create. . . &lt;/h4&gt;  &lt;/div&gt;  &lt;div class=&quot;card-footer bg-white&quot;&gt;    &lt;div class=&quot;wrapfooter&quot;&gt;            &lt;span class=&quot;meta-footer-thumb&quot;&gt;            &lt;img class=&quot;author-thumb&quot; src=&quot;/assets/images/avatar-mm. png&quot; alt=&quot;Marcel&quot;&gt;            &lt;/span&gt;      &lt;span class=&quot;author-meta&quot;&gt;      &lt;span class=&quot;post-name&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://blog. itprocloud. de&quot;&gt;Marcel&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;            &lt;span class=&quot;post-date&quot;&gt;28 Jul 2020&lt;/span&gt;      &lt;/span&gt;      &lt;span class=&quot;post-read-more&quot;&gt;&lt;a href=&quot;/Sysprep-and-WVD-and-UWP/&quot; title=&quot;Read Story&quot;&gt;&lt;svg class=&quot;svgIcon-use&quot; width=&quot;25&quot; height=&quot;25&quot; viewbox=&quot;0 0 25 25&quot;&gt;&lt;path d=&quot;M19 6c0-1. 1-. 9-2-2-2H8c-1. 1 0-2 . 9-2 2v14. 66h. 012c. 01. 103. 045. 204. 12. 285a. 5. 5 0 0 0 . 706. 03L12. 5 16. 85l5. 662 4. 126a. 508. 508 0 0 0 . 708-. 03. 5. 5 0 0 0 . 118-. 285H19V6zm-6. 838 9. 97L7 19. 636V6c0-. 55. 45-1 1-1h9c. 55 0 1 . 45 1 1v13. 637l-5. 162-3. 668a. 49. 49 0 0 0-. 676 0z&quot; fill-rule=&quot;evenodd&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/span&gt;      &lt;div class=&quot;clearfix&quot;&gt;&lt;/div&gt;    &lt;/div&gt;  &lt;/div&gt;&lt;/div&gt;  &lt;!-- begin post --&gt;                      &lt;img class=&quot;img-fluid&quot; src=&quot;/assets/images/Azure Monitor for WVD/Blog-01-02. png&quot; alt=&quot;Windows Virtual Desktop - Monitoring the Spring Backend - WVD&quot;&gt;                   &lt;/a&gt;  &lt;/div&gt;  &lt;div class=&quot;card-body&quot;&gt;    &lt;h2 class=&quot;card-title&quot;&gt;      &lt;a class=&quot;text-dark&quot; href=&quot;/Windows-Virtual-Desktop-Monitoring-the-Spring-backend/&quot;&gt;Windows Virtual Desktop - Monitoring the Spring Backend - WVD&lt;/a&gt;          &lt;/h2&gt;    &lt;h4 class=&quot;card-text&quot;&gt;The long await update from WVD is public. It comes with a full ARM integration and is natively useable in the Azure Portal. Some things changed from the Fall to. . . &lt;/h4&gt;  &lt;/div&gt;  &lt;div class=&quot;card-footer bg-white&quot;&gt;    &lt;div class=&quot;wrapfooter&quot;&gt;            &lt;span class=&quot;meta-footer-thumb&quot;&gt;            &lt;img class=&quot;author-thumb&quot; src=&quot;/assets/images/avatar-mm. png&quot; alt=&quot;Marcel&quot;&gt;            &lt;/span&gt;      &lt;span class=&quot;author-meta&quot;&gt;      &lt;span class=&quot;post-name&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://blog. itprocloud. de&quot;&gt;Marcel&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;            &lt;span class=&quot;post-date&quot;&gt;05 May 2020&lt;/span&gt;      &lt;/span&gt;      &lt;span class=&quot;post-read-more&quot;&gt;&lt;a href=&quot;/Windows-Virtual-Desktop-Monitoring-the-Spring-backend/&quot; title=&quot;Read Story&quot;&gt;&lt;svg class=&quot;svgIcon-use&quot; width=&quot;25&quot; height=&quot;25&quot; viewbox=&quot;0 0 25 25&quot;&gt;&lt;path d=&quot;M19 6c0-1. 1-. 9-2-2-2H8c-1. 1 0-2 . 9-2 2v14. 66h. 012c. 01. 103. 045. 204. 12. 285a. 5. 5 0 0 0 . 706. 03L12. 5 16. 85l5. 662 4. 126a. 508. 508 0 0 0 . 708-. 03. 5. 5 0 0 0 . 118-. 285H19V6zm-6. 838 9. 97L7 19. 636V6c0-. 55. 45-1 1-1h9c. 55 0 1 . 45 1 1v13. 637l-5. 162-3. 668a. 49. 49 0 0 0-. 676 0z&quot; fill-rule=&quot;evenodd&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/span&gt;      &lt;div class=&quot;clearfix&quot;&gt;&lt;/div&gt;    &lt;/div&gt;  &lt;/div&gt;&lt;/div&gt;  &lt;!-- begin post --&gt;                      &lt;img class=&quot;img-fluid&quot; src=&quot;/assets/images/WVDAdmin/Migrate-01. png&quot; alt=&quot;Migrate Windows Virtual Desktop Host Pools from Fall to Spring Release - WVD&quot;&gt;                   &lt;/a&gt;  &lt;/div&gt;  &lt;div class=&quot;card-body&quot;&gt;    &lt;h2 class=&quot;card-title&quot;&gt;      &lt;a class=&quot;text-dark&quot; href=&quot;/Windows-Virtual-Desktop-Migrate-from-Fall-to-Spring/&quot;&gt;Migrate Windows Virtual Desktop Host Pools from Fall to Spring Release - WVD&lt;/a&gt;          &lt;/h2&gt;    &lt;h4 class=&quot;card-text&quot;&gt;The long await update from WVD is public. It comes with a full ARM integration and is natively useable in the Azure Portal. The change from Fall to Spring (the. . . &lt;/h4&gt;  &lt;/div&gt;  &lt;div class=&quot;card-footer bg-white&quot;&gt;    &lt;div class=&quot;wrapfooter&quot;&gt;            &lt;span class=&quot;meta-footer-thumb&quot;&gt;            &lt;img class=&quot;author-thumb&quot; src=&quot;/assets/images/avatar-mm. png&quot; alt=&quot;Marcel&quot;&gt;            &lt;/span&gt;      &lt;span class=&quot;author-meta&quot;&gt;      &lt;span class=&quot;post-name&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://blog. itprocloud. de&quot;&gt;Marcel&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;            &lt;span class=&quot;post-date&quot;&gt;04 May 2020&lt;/span&gt;      &lt;/span&gt;      &lt;span class=&quot;post-read-more&quot;&gt;&lt;a href=&quot;/Windows-Virtual-Desktop-Migrate-from-Fall-to-Spring/&quot; title=&quot;Read Story&quot;&gt;&lt;svg class=&quot;svgIcon-use&quot; width=&quot;25&quot; height=&quot;25&quot; viewbox=&quot;0 0 25 25&quot;&gt;&lt;path d=&quot;M19 6c0-1. 1-. 9-2-2-2H8c-1. 1 0-2 . 9-2 2v14. 66h. 012c. 01. 103. 045. 204. 12. 285a. 5. 5 0 0 0 . 706. 03L12. 5 16. 85l5. 662 4. 126a. 508. 508 0 0 0 . 708-. 03. 5. 5 0 0 0 . 118-. 285H19V6zm-6. 838 9. 97L7 19. 636V6c0-. 55. 45-1 1-1h9c. 55 0 1 . 45 1 1v13. 637l-5. 162-3. 668a. 49. 49 0 0 0-. 676 0z&quot; fill-rule=&quot;evenodd&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/span&gt;      &lt;div class=&quot;clearfix&quot;&gt;&lt;/div&gt;    &lt;/div&gt;  &lt;/div&gt;&lt;/div&gt;  &lt;!-- begin post --&gt;                      &lt;img class=&quot;img-fluid&quot; src=&quot;/assets/images/WVDAdmin/WVDAdminSpringRelease. png&quot; alt=&quot;Windows Virtual Desktop - Spring Release / Spring Update with WVDAdmin&quot;&gt;                   &lt;/a&gt;  &lt;/div&gt;  &lt;div class=&quot;card-body&quot;&gt;    &lt;h2 class=&quot;card-title&quot;&gt;      &lt;a class=&quot;text-dark&quot; href=&quot;/Windows-Virtual-Desktop-Spring-Update,-Spring-Release/&quot;&gt;Windows Virtual Desktop - Spring Release / Spring Update with WVDAdmin&lt;/a&gt;          &lt;/h2&gt;    &lt;h4 class=&quot;card-text&quot;&gt;Windows Virtual Desktop - Spring Release / Spring Update goes public today. I’m tremendously happy about that while this is the next big step that we have eagerly awaited. :                     &lt;span class=&quot;meta-footer-thumb&quot;&gt;            &lt;img class=&quot;author-thumb&quot; src=&quot;/assets/images/avatar-mm. png&quot; alt=&quot;Marcel&quot;&gt;            &lt;/span&gt;      &lt;span class=&quot;author-meta&quot;&gt;      &lt;span class=&quot;post-name&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://blog. itprocloud. de&quot;&gt;Marcel&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;            &lt;span class=&quot;post-date&quot;&gt;30 Apr 2020&lt;/span&gt;      &lt;/span&gt;      &lt;span class=&quot;post-read-more&quot;&gt;&lt;a href=&quot;/Windows-Virtual-Desktop-Spring-Update,-Spring-Release/&quot; title=&quot;Read Story&quot;&gt;&lt;svg class=&quot;svgIcon-use&quot; width=&quot;25&quot; height=&quot;25&quot; viewbox=&quot;0 0 25 25&quot;&gt;&lt;path d=&quot;M19 6c0-1. 1-. 9-2-2-2H8c-1. 1 0-2 . 9-2 2v14. 66h. 012c. 01. 103. 045. 204. 12. 285a. 5. 5 0 0 0 . 706. 03L12. 5 16. 85l5. 662 4. 126a. 508. 508 0 0 0 . 708-. 03. 5. 5 0 0 0 . 118-. 285H19V6zm-6. 838 9. 97L7 19. 636V6c0-. 55. 45-1 1-1h9c. 55 0 1 . 45 1 1v13. 637l-5. 162-3. 668a. 49. 49 0 0 0-. 676 0z&quot; fill-rule=&quot;evenodd&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/span&gt;      &lt;div class=&quot;clearfix&quot;&gt;&lt;/div&gt;    &lt;/div&gt;  &lt;/div&gt;&lt;/div&gt;  &lt;!-- begin post --&gt;                      &lt;img class=&quot;img-fluid&quot; src=&quot;/assets/images/WVDAdmin/AadBrowser-01. png&quot; alt=&quot;Using Azure AD groups to assign users to Windows Virtual Desktop (WVD)&quot;&gt;                   &lt;/a&gt;  &lt;/div&gt;  &lt;div class=&quot;card-body&quot;&gt;    &lt;h2 class=&quot;card-title&quot;&gt;      &lt;a class=&quot;text-dark&quot; href=&quot;/Windows-Virtual-Desktop-Add-Users-and-Groups-to-WVD/&quot;&gt;Using Azure AD groups to assign users to Windows Virtual Desktop (WVD)&lt;/a&gt;          &lt;/h2&gt;    &lt;h4 class=&quot;card-text&quot;&gt;Today (early April), it’s not possible to join groups to application groups or desktop in Windows Virtual Desktop. Users have to be assigned directly with their user principal name (UPN). . . . &lt;/h4&gt;  &lt;/div&gt;  &lt;div class=&quot;card-footer bg-white&quot;&gt;    &lt;div class=&quot;wrapfooter&quot;&gt;            &lt;span class=&quot;meta-footer-thumb&quot;&gt;            &lt;img class=&quot;author-thumb&quot; src=&quot;/assets/images/avatar-mm. png&quot; alt=&quot;Marcel&quot;&gt;            &lt;/span&gt;      &lt;span class=&quot;author-meta&quot;&gt;      &lt;span class=&quot;post-name&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://blog. itprocloud. de&quot;&gt;Marcel&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;            &lt;span class=&quot;post-date&quot;&gt;07 Apr 2020&lt;/span&gt;      &lt;/span&gt;      &lt;span class=&quot;post-read-more&quot;&gt;&lt;a href=&quot;/Windows-Virtual-Desktop-Add-Users-and-Groups-to-WVD/&quot; title=&quot;Read Story&quot;&gt;&lt;svg class=&quot;svgIcon-use&quot; width=&quot;25&quot; height=&quot;25&quot; viewbox=&quot;0 0 25 25&quot;&gt;&lt;path d=&quot;M19 6c0-1. 1-. 9-2-2-2H8c-1. 1 0-2 . 9-2 2v14. 66h. 012c. 01. 103. 045. 204. 12. 285a. 5. 5 0 0 0 . 706. 03L12. 5 16. 85l5. 662 4. 126a. 508. 508 0 0 0 . 708-. 03. 5. 5 0 0 0 . 118-. 285H19V6zm-6. 838 9. 97L7 19. 636V6c0-. 55. 45-1 1-1h9c. 55 0 1 . 45 1 1v13. 637l-5. 162-3. 668a. 49. 49 0 0 0-. 676 0z&quot; fill-rule=&quot;evenodd&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/span&gt;      &lt;div class=&quot;clearfix&quot;&gt;&lt;/div&gt;    &lt;/div&gt;  &lt;/div&gt;&lt;/div&gt;  &lt;!-- begin post --&gt;                      &lt;img class=&quot;img-fluid&quot; src=&quot;/assets/images/WVD. LanguagePack. RDMonitoringAgent. 02. png&quot; alt=&quot;Windows Virtual Desktop and Language Packs - Detecting Host Pool and Tenant Name issue&quot;&gt;                   &lt;/a&gt;  &lt;/div&gt;  &lt;div class=&quot;card-body&quot;&gt;    &lt;h2 class=&quot;card-title&quot;&gt;      &lt;a class=&quot;text-dark&quot; href=&quot;/Windows-Virtual-Desktop-Language-Packs-Detecting-Host-Pool-and-Tenant-Name/&quot;&gt;Windows Virtual Desktop and Language Packs - Detecting Host Pool and Tenant Name issue&lt;/a&gt;          &lt;/h2&gt;    &lt;h4 class=&quot;card-text&quot;&gt;Language packs on Windows sometimes cause some issues or strange behaviors to some applications. One problem I can reproduce is the impact of the RDAgent from Microsoft - the agent. . . &lt;/h4&gt;  &lt;/div&gt;  &lt;div class=&quot;card-footer bg-white&quot;&gt;    &lt;div class=&quot;wrapfooter&quot;&gt;            &lt;span class=&quot;meta-footer-thumb&quot;&gt;            &lt;img class=&quot;author-thumb&quot; src=&quot;/assets/images/avatar-mm. png&quot; alt=&quot;Marcel&quot;&gt;            &lt;/span&gt;      &lt;span class=&quot;author-meta&quot;&gt;      &lt;span class=&quot;post-name&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://blog. itprocloud. de&quot;&gt;Marcel&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;            &lt;span class=&quot;post-date&quot;&gt;23 Feb 2020&lt;/span&gt;      &lt;/span&gt;      &lt;span class=&quot;post-read-more&quot;&gt;&lt;a href=&quot;/Windows-Virtual-Desktop-Language-Packs-Detecting-Host-Pool-and-Tenant-Name/&quot; title=&quot;Read Story&quot;&gt;&lt;svg class=&quot;svgIcon-use&quot; width=&quot;25&quot; height=&quot;25&quot; viewbox=&quot;0 0 25 25&quot;&gt;&lt;path d=&quot;M19 6c0-1. 1-. 9-2-2-2H8c-1. 1 0-2 . 9-2 2v14. 66h. 012c. 01. 103. 045. 204. 12. 285a. 5. 5 0 0 0 . 706. 03L12. 5 16. 85l5. 662 4. 126a. 508. 508 0 0 0 . 708-. 03. 5. 5 0 0 0 . 118-. 285H19V6zm-6. 838 9. 97L7 19. 636V6c0-. 55. 45-1 1-1h9c. 55 0 1 . 45 1 1v13. 637l-5. 162-3. 668a. 49. 49 0 0 0-. 676 0z&quot; fill-rule=&quot;evenodd&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/span&gt;      &lt;div class=&quot;clearfix&quot;&gt;&lt;/div&gt;    &lt;/div&gt;  &lt;/div&gt;&lt;/div&gt;  &lt;!-- begin post --&gt;                      &lt;img class=&quot;img-fluid&quot; src=&quot;/assets/images/WVDStarter. png&quot; alt=&quot;Windows Virtual Desktop - Azure Starter for WVD&quot;&gt;                   &lt;/a&gt;  &lt;/div&gt;  &lt;div class=&quot;card-body&quot;&gt;    &lt;h2 class=&quot;card-title&quot;&gt;      &lt;a class=&quot;text-dark&quot; href=&quot;/Windows-Virtual-Desktop-Azure-Starter-for-WVD/&quot;&gt;Windows Virtual Desktop - Azure Starter for WVD&lt;/a&gt;          &lt;/h2&gt;    &lt;h4 class=&quot;card-text&quot;&gt;This month I started to build my fourth tool around Microsoft Windows Virtual Desktop. This new one, called “Azure Starter for WVD” is a self-service portal for users using WVD. . . . &lt;/h4&gt;  &lt;/div&gt;  &lt;div class=&quot;card-footer bg-white&quot;&gt;    &lt;div class=&quot;wrapfooter&quot;&gt;            &lt;span class=&quot;meta-footer-thumb&quot;&gt;            &lt;img class=&quot;author-thumb&quot; src=&quot;/assets/images/avatar-mm. png&quot; alt=&quot;Marcel&quot;&gt;            &lt;/span&gt;      &lt;span class=&quot;author-meta&quot;&gt;      &lt;span class=&quot;post-name&quot;&gt;&lt;a target=&quot;_blank&quot; href=&quot;https://blog. itprocloud. de&quot;&gt;Marcel&lt;/a&gt;&lt;/span&gt;&lt;br/&gt;            &lt;span class=&quot;post-date&quot;&gt;09 Feb 2020&lt;/span&gt;      &lt;/span&gt;      &lt;span class=&quot;post-read-more&quot;&gt;&lt;a href=&quot;/Windows-Virtual-Desktop-Azure-Starter-for-WVD/&quot; title=&quot;Read Story&quot;&gt;&lt;svg class=&quot;svgIcon-use&quot; width=&quot;25&quot; height=&quot;25&quot; viewbox=&quot;0 0 25 25&quot;&gt;&lt;path d=&quot;M19 6c0-1. 1-. 9-2-2-2H8c-1. 1 0-2 . 9-2 2v14. 66h. 012c. 01. 103. 045. 204. 12. 285a. 5. 5 0 0 0 . 706. 03L12. 5 16. 85l5. 662 4. 126a. 508. 508 0 0 0 . 708-. 03. 5. 5 0 0 0 . 118-. 285H19V6zm-6. 838 9. 97L7 19. 636V6c0-. 55. 45-1 1-1h9c. 55 0 1 . 45 1 1v13. 637l-5. 162-3. 668a. 49. 49 0 0 0-. 676 0z&quot; fill-rule=&quot;evenodd&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;/span&gt;      &lt;div class=&quot;clearfix&quot;&gt;&lt;/div&gt;    &lt;/div&gt;  &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;span&gt;&amp;laquo; Prev&lt;/span&gt; &lt;span class=&quot;ml-1 mr-1&quot;&gt;1&lt;/span&gt; &lt;a class=&quot;ml-1 mr-1&quot; href=&quot;/page2/&quot;&gt;2&lt;/a&gt; &lt;a class=&quot;ml-1 mr-1&quot; href=&quot;/page3/&quot;&gt;3&lt;/a&gt;&lt;a class=&quot;ml-1 mr-1&quot; href=&quot;/page2/&quot;&gt;Next &amp;raquo;&lt;/a&gt;"
    }, {
    "id": 5,
    "url": "/privacyDe",
    "title": "Datenschutz",
    "body": "[English version]({% link _pages/privacy-en. md %}) Datenschutzerklärung: Personenbezogene Daten (nachfolgend zumeist nur „Daten“ genannt) werden von uns nur im Rahmen der Erforderlichkeit sowie zum Zwecke der Bereitstellung eines funktionsfähigen und nutzerfreundlichen Internetauftritts, inklusive seiner Inhalte und der dort angebotenen Leistungen, verarbeitet. Gemäß Art. 4 Ziffer 1. der Verordnung (EU) 2016/679, also der Datenschutz-Grundverordnung (nachfolgend nur „DSGVO“ genannt), gilt als „Verarbeitung“ jeder mit oder ohne Hilfe automatisierter Verfahren ausgeführter Vorgang oder jede solche Vorgangsreihe im Zusammenhang mit personenbezogenen Daten, wie das Erheben, das Erfassen, die Organisation, das Ordnen, die Speicherung, die Anpassung oder Veränderung, das Auslesen, das Abfragen, die Verwendung, die Offenlegung durch Übermittlung, Verbreitung oder eine andere Form der Bereitstellung, den Abgleich oder die Verknüpfung, die Einschränkung, das Löschen oder die Vernichtung. Mit der nachfolgenden Datenschutzerklärung informieren wir Sie insbesondere über Art, Umfang, Zweck, Dauer und Rechtsgrundlage der Verarbeitung personenbezogener Daten, soweit wir entweder allein oder gemeinsam mit anderen über die Zwecke und Mittel der Verarbeitung entscheiden. Zudem informieren wir Sie nachfolgend über die von uns zu Optimierungszwecken sowie zur Steigerung der Nutzungsqualität eingesetzten Fremdkomponenten, soweit hierdurch Dritte Daten in wiederum eigener Verantwortung verarbeiten. Unsere Datenschutzerklärung ist wie folgt gegliedert: I. Informationen über uns als VerantwortlicheII. Rechte der Nutzer und BetroffenenIII. Informationen zur Datenverarbeitung I. Informationen über uns als Verantwortliche: Verantwortlicher Anbieter dieses Internetauftritts im datenschutzrechtlichen Sinne ist: Marcel MeurerEichholzer Weg 3551519 OdenthalDeutschland Telefon: +49 173 7331284E-Mail: marcel. meurer@itprocloud. de II. Rechte der Nutzer und Betroffenen: Mit Blick auf die nachfolgend noch näher beschriebene Datenverarbeitung haben die Nutzer und Betroffenen das Recht auf Bestätigung, ob sie betreffende Daten verarbeitet werden, auf Auskunft über die verarbeiteten Daten, auf weitere Informationen über die Datenverarbeitung sowie auf Kopien der Daten (vgl. auch Art. 15 DSGVO);auf Berichtigung oder Vervollständigung unrichtiger bzw. unvollständiger Daten (vgl. auch Art. 16 DSGVO);auf unverzügliche Löschung der sie betreffenden Daten (vgl. auch Art. 17 DSGVO), oder, alternativ, soweit eine weitere Verarbeitung gemäß Art. 17 Abs. 3 DSGVO erforderlich ist, auf Einschränkung der Verarbeitung nach Maßgabe von Art. 18 DSGVO;auf Erhalt der sie betreffenden und von ihnen bereitgestellten Daten und auf Übermittlung dieser Daten an andere Anbieter/Verantwortliche (vgl. auch Art. 20 DSGVO);auf Beschwerde gegenüber der Aufsichtsbehörde, sofern sie der Ansicht sind, dass die sie betreffenden Daten durch den Anbieter unter Verstoß gegen datenschutzrechtliche Bestimmungen verarbeitet werden (vgl. auch Art. 77 DSGVO). Darüber hinaus ist der Anbieter dazu verpflichtet, alle Empfänger, denen gegenüber Daten durch den Anbieter offengelegt worden sind, über jedwede Berichtigung oder Löschung von Daten oder die Einschränkung der Verarbeitung, die aufgrund der Artikel 16, 17 Abs. 1, 18 DSGVO erfolgt, zu unterrichten. Diese Verpflichtung besteht jedoch nicht, soweit diese Mitteilung unmöglich oder mit einem unverhältnismäßigen Aufwand verbunden ist. Unbeschadet dessen hat der Nutzer ein Recht auf Auskunft über diese Empfänger. Ebenfalls haben die Nutzer und Betroffenen nach Art. 21 DSGVO das Recht auf Widerspruch gegen die künftige Verarbeitung der sie betreffenden Daten, sofern die Daten durch den Anbieter nach Maßgabe von Art. 6 Abs. 1 lit. f) DSGVO verarbeitet werden. Insbesondere ist ein Widerspruch gegen die Datenverarbeitung zum Zwecke der Direktwerbung statthaft. III. Informationen zur Datenverarbeitung: Ihre bei Nutzung unseres Internetauftritts verarbeiteten Daten werden gelöscht oder gesperrt, sobald der Zweck der Speicherung entfällt, der Löschung der Daten keine gesetzlichen Aufbewahrungspflichten entgegenstehen und nachfolgend keine anderslautenden Angaben zu einzelnen Verarbeitungsverfahren gemacht werden. Cookies: a) Sitzungs-Cookies/Session-CookiesWir verwenden mit unserem Internetauftritt sog. Cookies. Cookies sind kleine Textdateien oder andere Speichertechnologien, die durch den von Ihnen eingesetzten Internet-Browser auf Ihrem Endgerät ablegt und gespeichert werden. Durch diese Cookies werden im individuellen Umfang bestimmte Informationen von Ihnen, wie beispielsweise Ihre Browser- oder Standortdaten oder Ihre IP-Adresse, verarbeitet.   Durch diese Verarbeitung wird unser Internetauftritt benutzerfreundlicher, effektiver und sicherer, da die Verarbeitung bspw. die Wiedergabe unseres Internetauftritts in unterschiedlichen Sprachen oder das Angebot einer Warenkorbfunktion ermöglicht. Rechtsgrundlage dieser Verarbeitung ist Art. 6 Abs. 1 lit b. ) DSGVO, sofern diese Cookies Daten zur Vertragsanbahnung oder Vertragsabwicklung verarbeitet werden. Falls die Verarbeitung nicht der Vertragsanbahnung oder Vertragsabwicklung dient, liegt unser berechtigtes Interesse in der Verbesserung der Funktionalität unseres Internetauftritts. Rechtsgrundlage ist in dann Art. 6 Abs. 1 lit. f) DSGVO. Mit Schließen Ihres Internet-Browsers werden diese Session-Cookies gelöscht. b) Drittanbieter-CookiesGegebenenfalls werden mit unserem Internetauftritt auch Cookies von Partnerunternehmen, mit denen wir zum Zwecke der Werbung, der Analyse oder der Funktionalitäten unseres Internetauftritts zusammenarbeiten, verwendet. Die Einzelheiten hierzu, insbesondere zu den Zwecken und den Rechtsgrundlagen der Verarbeitung solcher Drittanbieter-Cookies, entnehmen Sie bitte den nachfolgenden Informationen. c) BeseitigungsmöglichkeitSie können die Installation der Cookies durch eine Einstellung Ihres Internet-Browsers verhindern oder einschränken. Ebenfalls können Sie bereits gespeicherte Cookies jederzeit löschen. Die hierfür erforderlichen Schritte und Maßnahmen hängen jedoch von Ihrem konkret genutzten Internet-Browser ab. Bei Fragen benutzen Sie daher bitte die Hilfefunktion oder Dokumentation Ihres Internet-Browsers oder wenden sich an dessen Hersteller bzw. Support. Bei sog. Flash-Cookies kann die Verarbeitung allerdings nicht über die Einstellungen des Browsers unterbunden werden. Stattdessen müssen Sie insoweit die Einstellung Ihres Flash-Players ändern. Auch die hierfür erforderlichen Schritte und Maßnahmen hängen von Ihrem konkret genutzten Flash-Player ab. Bei Fragen benutzen Sie daher bitte ebenso die Hilfefunktion oder Dokumentation Ihres Flash-Players oder wenden sich an den Hersteller bzw. Benutzer-Support. Sollten Sie die Installation der Cookies verhindern oder einschränken, kann dies allerdings dazu führen, dass nicht sämtliche Funktionen unseres Internetauftritts vollumfänglich nutzbar sind. Kontaktanfragen / Kontaktmöglichkeit: Sofern Sie per Kontaktformular oder E-Mail mit uns in Kontakt treten, werden die dabei von Ihnen angegebenen Daten zur Bearbeitung Ihrer Anfrage genutzt. Die Angabe der Daten ist zur Bearbeitung und Beantwortung Ihre Anfrage erforderlich - ohne deren Bereitstellung können wir Ihre Anfrage nicht oder allenfalls eingeschränkt beantworten. Rechtsgrundlage für diese Verarbeitung ist Art. 6 Abs. 1 lit. b) DSGVO. Ihre Daten werden gelöscht, sofern Ihre Anfrage abschließend beantwortet worden ist und der Löschung keine gesetzlichen Aufbewahrungspflichten entgegenstehen, wie bspw. bei einer sich etwaig anschließenden Vertragsabwicklung. Nutzerbeiträge, Kommentare und Bewertungen: Wir bieten Ihnen an, auf unseren Internetseiten Fragen, Antworten, Meinungen oder Bewertungen, nachfolgend nur „Beiträge genannt, zu veröffentlichen. Sofern Sie dieses Angebot in Anspruch nehmen, verarbeiten und veröffentlichen wir Ihren Beitrag, Datum und Uhrzeit der Einreichung sowie das von Ihnen ggf. genutzte Pseudonym. Rechtsgrundlage hierbei ist Art. 6 Abs. 1 lit. a) DSGVO. Die Einwilligung können Sie gemäß Art. 7 Abs. 3 DSGVO jederzeit mit Wirkung für die Zukunft widerrufen. Hierzu müssen Sie uns lediglich über Ihren Widerruf in Kenntnis setzen. Darüber hinaus verarbeiten wir auch Ihre IP- und E-Mail-Adresse. Die IP-Adresse wird verarbeitet, weil wir ein berechtigtes Interesse daran haben, weitere Schritte einzuleiten oder zu unterstützen, sofern Ihr Beitrag in Rechte Dritter eingreift und/oder er sonst wie rechtswidrig erfolgt. Rechtsgrundlage ist in diesem Fall Art. 6 Abs. 1 lit. f) DSGVO. Unser berechtigtes Interesse liegt in der ggf. notwendigen Rechtsverteidigung. Abonnement von Beiträgen: Sofern Sie Beiträge auf unseren Internetseiten veröffentlichen, bieten wir Ihnen zusätzlich an, etwaige Folgebeiträge Dritter zu abonnieren. Um Sie über diese Folgebeiträge per E-Mail informieren zu können, verarbeiten wir Ihre E-Mail-Adresse. Rechtsgrundlage hierbei ist Art. 6 Abs. 1 lit. a) DSGVO. Die Einwilligung in dieses Abonnement können Sie gemäß Art. 7 Abs. 3 DSGVO jederzeit mit Wirkung für die Zukunft widerrufen. Hierzu müssen Sie uns lediglich über Ihren Widerruf in Kenntnis setzen oder den in der jeweiligen E-Mail enthaltenen Abmeldelink betätigen. Twitter: Wir unterhalten bei Twitter eine Onlinepräsenz um unser Unternehmen sowie unsere Leistungen zu präsentieren und mit Kunden/Interessenten zu kommunizieren. Twitter ist ein Service der Twitter Inc. , 1355 Market Street, Suite 900, San Francisco, CA 94103, USA. Insofern weisen wir darauf hin, dass die Möglichkeit besteht, dass Daten der Nutzer außerhalb der Europäischen Union, insbesondere in den USA, verarbeitet werden. Hierdurch können gesteigerte Risiken für die Nutzer insofern bestehen, als dass z. B. der spätere Zugriff auf die Nutzerdaten erschwert werden kann. Auch haben wir keinen Zugriff auf diese Nutzerdaten. Die Zugriffsmöglichkeit liegt ausschließlich bei Twitter. Die Twitter Inc. ist unter dem Privacy Shield zertifiziert und hat sich damit verpflichtet, die europäischen Datenschutzstandards einzuhalten https://www. privacyshield. gov/participant?id=a2zt0000000TORzAAO&amp;status=Active Die Datenschutzhinweise von Twitter finden Sie unter https://twitter. com/de/privacy YouTube: Wir unterhalten bei YouTube eine Onlinepräsenz um unser Unternehmen sowie unsere Leistungen zu präsentieren und mit Kunden/Interessenten zu kommunizieren. YouTube ist ein Service der Google Ireland Limited, Gordon House, Barrow Street, Dublin 4, Irland, ein Tochterunternehmen der Google LLC, 1600 Amphitheatre Parkway, Mountain View, CA 94043 USA. Insofern weisen wir darauf hin, dass die Möglichkeit besteht, dass Daten der Nutzer außerhalb der Europäischen Union, insbesondere in den USA, verarbeitet werden. Hierdurch können gesteigerte Risiken für die Nutzer insofern bestehen, als dass z. B. der spätere Zugriff auf die Nutzerdaten erschwert werden kann. Auch haben wir keinen Zugriff auf diese Nutzerdaten. Die Zugriffsmöglichkeit liegt ausschließlich bei YouTube. Die Google LLC ist unter dem Privacy Shield zertifiziert und hat sich damit verpflichtet, die europäischen Datenschutzstandards einzuhalten https://www. privacyshield. gov/participant?id=a2zt000000001L5AAI&amp;status=Active Die Datenschutzhinweise von YouTube finden Sie unter https://policies. google. com/privacy LinkedIn: Wir unterhalten bei LinkedIn eine Onlinepräsenz um unser Unternehmen sowie unsere Leistungen zu präsentieren und mit Kunden/Interessenten zu kommunizieren. LinkedIn ist ein Service der LinkedIn Ireland Unlimited Company, Wilton Plaza, Wilton Place, Dublin 2, Irland, ein Tochterunternehmen der LinkedIn Corporation, 1000 W. Maude Avenue, Sunnyvale, CA 94085, USA. Insofern weisen wir darauf hin, dass die Möglichkeit besteht, dass Daten der Nutzer außerhalb der Europäischen Union, insbesondere in den USA, verarbeitet werden. Hierdurch können gesteigerte Risiken für die Nutzer insofern bestehen, als dass z. B. der spätere Zugriff auf die Nutzerdaten erschwert werden kann. Auch haben wir keinen Zugriff auf diese Nutzerdaten. Die Zugriffsmöglichkeit liegt ausschließlich bei LinkedIn. Die LinkedIn Corporation ist unter dem Privacy Shield zertifiziert und hat sich damit verpflichtet, die europäischen Datenschutzstandards einzuhalten https://www. privacyshield. gov/participant?id=a2zt0000000L0UZAA0&amp;status=Active Die Datenschutzhinweise von LinkedIn finden Sie unter https://www. linkedin. com/legal/privacy-policy Verlinkung Social-Media über Grafik oder Textlink: Wir bewerben auf unserer Webseite auch Präsenzen auf den nachstehend aufgeführten sozialen Netzwerken. Die Einbindung erfolgt dabei über eine verlinkte Grafik des jeweiligen Netzwerks. Durch den Einsatz dieser verlinkten Grafik wird verhindert, dass es bei dem Aufruf einer Website, die über eine Social-Media-Bewerbung verfügt, automatisch zu einem Verbindungsaufbau zum jeweiligen Server des sozialen Netzwerks kommt, um eine Grafik des jeweiligen Netzwerkes selbst darzustellen. Erst durch einen Klick auf die entsprechende Grafik wird der Nutzer zu dem Dienst des jeweiligen sozialen Netzwerks weitergeleitet. Nach der Weiterleitung des Nutzers werden durch das jeweilige Netzwerk Informationen über den Nutzer erfasst. Es kann hierbei nicht ausgeschlossen werden, dass eine Verarbeitung der so erhobenen  Daten in den USA stattfindet. Dies sind zunächst Daten wie IP-Adresse, Datum, Uhrzeit und besuchte Seite. Ist der Nutzer währenddessen in seinem Benutzerkonto des jeweiligen Netzwerks eingeloggt, kann der Netzwerk-Betreiber ggf. die gesammelten Informationen des konkreten Besuchs des Nutzers dem persönlichen Account des Nutzers zuordnen. Interagiert der Nutzer über einen „Teilen“-Button des jeweiligen Netzwerks, können diese Informationen in dem persönlichen Benutzerkonto des Nutzers gespeichert und ggf. veröffentlicht werden. Will der Nutzer verhindern, dass die gesammelten Informationen unmittelbar seinem Benutzerkonto zugeordnet werden, muss er sich vor dem Anklicken der Grafik ausloggen. Zudem besteht die Möglichkeit, das jeweilige Benutzerkonto entsprechend zu konfigurieren. Folgende soziale Netzwerke werden in unsere Seite durch Verlinkung eingebunden: twitter: Twitter Inc. , 795 Folsom St. , Suite 600, San Francisco, CA 94107, USA Datenschutzerklärung: https://twitter. com/privacy Zertifizierung EU-US-Datenschutz („EU-US Privacy Shield“) https://www. privacyshield. gov/…0000TORzAAO&amp;status=Active YouTube: Google Ireland Limited, Gordon House, Barrow Street, Dublin 4, Irland, ein Tochterunternehmen der Google LLC, 1600 Amphitheatre Parkway, Mountain View, CA 94043 USA Datenschutzerklärung: https://policies. google. com/privacy Zertifizierung EU-US-Datenschutz („EU-US Privacy Shield“) https://www. privacyshield. gov/participant?id=a2zt000000001L5AAI&amp;status=Active LinkedIn: LinkedIn Ireland Unlimited Company, Wilton Plaza, Wilton Place, Dublin 2, Irland, ein Tochterunternehmen der LinkedIn Corporation, 1000 W. Maude Avenue, Sunnyvale, CA 94085 USA. Datenschutzerklärung: https://www. linkedin. com/legal/privacy-policy Zertifizierung EU-US-Datenschutz („EU-US Privacy Shield“) https://www. privacyshield. gov/participant?id=a2zt0000000L0UZAA0&amp;status=Active „Twitter“-Social-Plug-in: In unserem Internetauftritt setzen wir das Plug-in des Social-Networks Twitter ein. Bei Twitter handelt es sich um einen Internetservice der Twitter Inc. , 795 Folsom St. , Suite 600, San Francisco, CA 94107, USA, nachfolgend nur „Twitter“ genannt. Durch die Zertifizierung nach dem EU-US-Datenschutzschild („EU-US Privacy Shield“) https://www. privacyshield. gov/participant?id=a2zt0000000TORzAAO&amp;status=Active garantiert Twitter, dass die Datenschutzvorgaben der EU auch bei der Verarbeitung von Daten in den USA eingehalten werden. Rechtsgrundlage ist Art. 6 Abs. 1 lit. f) DSGVO. Unser berechtigtes Interesse liegt in der Qualitätsverbesserung unseres Internetauftritts. Sofern das Plug-in auf einer der von Ihnen besuchten Seiten unseres Internetauftritts hinterlegt ist, lädt Ihr Internet-Browser eine Darstellung des Plug-ins von den Servern von Twitter in den USA herunter. Aus technischen Gründen ist es dabei notwendig, dass Twitter Ihre IP-Adresse verarbeitet. Daneben werden aber auch Datum und Uhrzeit des Besuchs unserer Internetseiten erfasst. Sollten Sie bei Twitter eingeloggt sein, während Sie eine unserer mit dem Plug-in versehenen Internetseite besuchen, werden die durch das Plug-in gesammelten Informationen Ihres konkreten Besuchs von Twitter erkannt. Die so gesammelten Informationen weist Twitter womöglich Ihrem dortigen persönlichen Nutzerkonto zu. Sofern Sie also bspw. den sog. „Teilen“-Button von Twitter benutzen, werden diese Informationen in Ihrem Twitter-Nutzerkonto gespeichert und ggf. über die Plattform von Twitter veröffentlicht. Wenn Sie das verhindern möchten, müssen Sie sich entweder vor dem Besuch unseres Internetauftritts bei Twitter ausloggen oder die entsprechenden Einstellungen in Ihrem Twitter-Benutzerkonto vornehmen. Weitergehende Informationen über die Erhebung und Nutzung von Daten sowie Ihre diesbezüglichen Rechte und Schutzmöglichkeiten hält Twitter in den unter https://twitter. com/privacy abrufbaren Datenschutzhinweisen bereit. Google Analytics: In unserem Internetauftritt setzen wir Google Analytics ein. Hierbei handelt es sich um einen Webanalysedienst der Google Ireland Limited, Gordon House, Barrow Street, Dublin 4, Irland, nachfolgend nur „Google“ genannt. Durch die Zertifizierung nach dem EU-US-Datenschutzschild („EU-US Privacy Shield“) https://www. privacyshield. gov/participant?id=a2zt000000001L5AAI&amp;status=Active garantiert Google, dass die Datenschutzvorgaben der EU auch bei der Verarbeitung von Daten in den USA eingehalten werden. Der Dienst Google Analytics dient zur Analyse des Nutzungsverhaltens unseres Internetauftritts. Rechtsgrundlage ist Art. 6 Abs. 1 lit. f) DSGVO. Unser berechtigtes Interesse liegt in der Analyse, Optimierung und dem wirtschaftlichen Betrieb unseres Internetauftritts. Nutzungs- und nutzerbezogene Informationen, wie bspw. IP-Adresse, Ort, Zeit oder Häufigkeit des Besuchs unseres Internetauftritts, werden dabei an einen Server von Google in den USA übertragen und dort gespeichert. Allerdings nutzen wir Google Analytics mit der sog. Anonymisierungsfunktion. Durch diese Funktion kürzt Google die IP-Adresse schon innerhalb der EU bzw. des EWR. Die so erhobenen Daten werden wiederum von Google genutzt, um uns eine Auswertung über den Besuch unseres Internetauftritts sowie über die dortigen Nutzungsaktivitäten zur Verfügung zu stellen. Auch können diese Daten genutzt werden, um weitere Dienstleistungen zu erbringen, die mit der Nutzung unseres Internetauftritts und der Nutzung des Internets zusammenhängen. Google gibt an, Ihre IP-Adresse nicht mit anderen Daten zu verbinden. Zudem hält Google unter https://www. google. com/intl/de/policies/privacy/partners weitere datenschutzrechtliche Informationen für Sie bereit, so bspw. auch zu den Möglichkeiten, die Datennutzung zu unterbinden. Zudem bietet Google unter https://tools. google. com/dlpage/gaoptout?hl=de ein sog. Deaktivierungs-Add-on nebst weiteren Informationen hierzu an. Dieses Add-on lässt sich mit den gängigen Internet-Browsern installieren und bietet Ihnen weitergehende Kontrollmöglichkeit über die Daten, die Google bei Aufruf unseres Internetauftritts erfasst. Dabei teilt das Add-on dem JavaScript (ga. js) von Google Analytics mit, dass Informationen zum Besuch unseres Internetauftritts nicht an Google Analytics übermittelt werden sollen. Dies verhindert aber nicht, dass Informationen an uns oder an andere Webanalysedienste übermittelt werden. Ob und welche weiteren Webanalysedienste von uns eingesetzt werden, erfahren Sie natürlich ebenfalls in dieser Datenschutzerklärung. YouTube: In unserem Internetauftritt setzen wir YouTube ein. Hierbei handelt es sich um ein Videoportal der YouTube LLC. , 901 Cherry Ave. , 94066 San Bruno, CA, USA, nachfolgend nur „YouTube“ genannt. YouTube ist ein Tochterunternehmen der Google Ireland Limited, Gordon House, Barrow Street, Dublin 4, Irland, nachfolgend nur „Google“ genannt. Durch die Zertifizierung nach dem EU-US-Datenschutzschild („EU-US Privacy Shield“) https://www. privacyshield. gov/participant?id=a2zt000000001L5AAI&amp;status=Active garantiert Google und damit auch das Tochterunternehmen YouTube, dass die Datenschutzvorgaben der EU auch bei der Verarbeitung von Daten in den USA eingehalten werden. Wir nutzen YouTube im Zusammenhang mit der Funktion „Erweiterter Datenschutzmodus“, um Ihnen Videos anzeigen zu können. Rechtsgrundlage ist Art. 6 Abs. 1 lit. f) DSGVO. Unser berechtigtes Interesse liegt in der Qualitätsverbesserung unseres Internetauftritts. Die Funktion „Erweiterter Datenschutzmodus“ bewirkt laut Angaben von YouTube, dass die nachfolgend noch näher bezeichneten Daten nur dann an den Server von YouTube übermittelt werden, wenn Sie ein Video auch tatsächlich starten. Ohne diesen „Erweiterten Datenschutz“ wird eine Verbindung zum Server von YouTube in den USA hergestellt, sobald Sie eine unserer Internetseiten, auf der ein YouTube-Video eingebettet ist, aufrufen. Diese Verbindung ist erforderlich, um das jeweilige Video auf unserer Internetseite über Ihren Internet-Browser darstellen zu können. Im Zuge dessen wird YouTube zumindest Ihre IP-Adresse, das Datum nebst Uhrzeit sowie die von Ihnen besuchte Internetseite erfassen und verarbeiten. Zudem wird eine Verbindung zu dem Werbenetzwerk „DoubleClick“ von Google hergestellt. Sollten Sie gleichzeitig bei YouTube eingeloggt sein, weist YouTube die Verbindungsinformationen Ihrem YouTube-Konto zu. Wenn Sie das verhindern möchten, müssen Sie sich entweder vor dem Besuch unseres Internetauftritts bei YouTube ausloggen oder die entsprechenden Einstellungen in Ihrem YouTube-Benutzerkonto vornehmen. Zum Zwecke der Funktionalität sowie zur Analyse des Nutzungsverhaltens speichert YouTube dauerhaft Cookies über Ihren Internet-Browser auf Ihrem Endgerät. Falls Sie mit dieser Verarbeitung nicht einverstanden sind, haben Sie die Möglichkeit, die Speicherung der Cookies durch eine Einstellung in Ihrem Internet-Browsers zu verhindern. Nähere Informationen hierzu finden Sie vorstehend unter „Cookies“. Weitergehende Informationen über die Erhebung und Nutzung von Daten sowie Ihre diesbezüglichen Rechte und Schutzmöglichkeiten hält Google in den unter https://policies. google. com/privacy abrufbaren Datenschutzhinweisen bereit. {% comment %} MailChimp - Newsletter: Wir bieten Ihnen die Möglichkeit an, sich bei uns über unseren Internetauftritt für unsere kostenlosen Newsletter anmelden zu können. Zum Newsletterversand setzen wir MailChimp, einen Dienst der The Rocket Science Group, LLC, 512 Means Street, Suite 404, Atlanta, GA 30318, USA, nachfolgend nur „The Rocket Science Group“ genannt, ein. Durch die Zertifizierung nach dem EU-US-Datenschutzschild („EU-US Privacy Shield“) https://www. privacyshield. gov/participant?id=a2zt0000000TO6hAAG&amp;status=Active garantiert The Rocket Science Group, dass die Datenschutzvorgaben der EU auch bei der Verarbeitung von Daten in den USA eingehalten werden. Zudem bietet The Rocket Science Group unter http://mailchimp. com/legal/privacy/ weitergehende Datenschutzinformationen an. Falls Sie sich zu unserem Newsletter-Versand anmelden, werden die während des Anmeldevorgangs abgefragten Daten, wie Ihre E-Mail-Adresse sowie, optional, Ihr Name nebst Anschrift, durch The Rocket Science Group verarbeitet. Zudem werden Ihre IP-Adresse sowie das Datum Ihrer Anmeldung nebst Uhrzeit gespeichert. Im Rahmen des weiteren Anmeldevorgangs wird Ihre Einwilligung in die Übersendung des Newsletters eingeholt, der Inhalt konkret beschreiben und auf diese Datenschutzerklärung verwiesen. Der anschließend über The Rocket Science Group versandte Newsletter enthält zudem einen sog. Zählpixel, auch Web Beacon genannt“. Mit Hilfe dieses Zählpixels können wir auswerten, ob und wann Sie unseren Newsletter gelesen haben und ob Sie den in dem Newsletter etwaig enthaltenen weiterführenden Links gefolgt sind. Neben weiteren technischen Daten, wie bspw. die Daten Ihres EDV-Systems und Ihre IP-Adresse, werden die dabei verarbeiteten Daten gespeichert, damit wir unser Newsletter-Angebot optimieren und auf die Wünsche der Leser eingehen können. Die Daten werden also zur Steigerung der Qualität und Attraktivität unseres Newsletter-Angebots zu steigern. Rechtsgrundlage für den Versand des Newsletters und die Analyse ist Art. 6 Abs. 1 lit. a. ) DSGVO. Die Einwilligung in den Newsletter-Versand können Sie gemäß Art. 7 Abs. 3 DSGVO jederzeit mit Wirkung für die Zukunft widerrufen. Hierzu müssen Sie uns lediglich über Ihren Widerruf in Kenntnis setzen oder den in jedem Newsletter enthaltenen Abmeldelink betätigen. {% endcomment %} Muster-Datenschutzerklärung der Anwaltskanzlei Weiß &amp; Partner "
    }, {
    "id": 6,
    "url": "/privacyEn",
    "title": "Data Privacy",
    "body": "[German version]({% link _pages/privacy-de. md %}) Privacy Policy: Personal data (usually referred to just as “data” below) will only be processed by us to the extent necessary and for the purpose of providing a functional and user-friendly website, including its contents, and the services offered there. Per Art. 4 No. 1 of Regulation (EU) 2016/679, i. e. the General Data Protection Regulation (hereinafter referred to as the “GDPR”), “processing” refers to any operation or set of operations such as collection, recording, organization, structuring, storage, adaptation, alteration, retrieval, consultation, use, disclosure by transmission, dissemination, or otherwise making available, alignment, or combination, restriction, erasure, or destruction performed on personal data, whether by automated means or not. The following privacy policy is intended to inform you in particular about the type, scope, purpose, duration, and legal basis for the processing of such data either under our own control or in conjunction with others. We also inform you below about the third-party components we use to optimize our website and improve the user experience which may result in said third parties also processing data they collect and control. Our privacy policy is structured as follows: I. Information about us as controllers of your dataII. The rights of users and data subjectsIII. Information about the data processing I. Information about us as controllers of your data: The party responsible for this website (the “controller”) for purposes of data protection law is: Marcel MeurerEichholzer Weg 3551519 OdenthalDeutschland Telephone: +49 173 7331284Email: marcel. meurer@itprocloud. de II. The rights of users and data subjects: With regard to the data processing to be described in more detail below, users and data subjects have the right to confirmation of whether data concerning them is being processed, information about the data being processed, further information about the nature of the data processing, and copies of the data (cf. also Art. 15 GDPR);to correct or complete incorrect or incomplete data (cf. also Art. 16 GDPR);to the immediate deletion of data concerning them (cf. also Art. 17 DSGVO), or, alternatively, if further processing is necessary as stipulated in Art. 17 Para. 3 GDPR, to restrict said processing per Art. 18 GDPR;to receive copies of the data concerning them and/or provided by them and to have the same transmitted to other providers/controllers (cf. also Art. 20 GDPR);to file complaints with the supervisory authority if they believe that data concerning them is being processed by the controller in breach of data protection provisions (see also Art. 77 GDPR). In addition, the controller is obliged to inform all recipients to whom it discloses data of any such corrections, deletions, or restrictions placed on processing the same per Art. 16, 17 Para. 1, 18 GDPR. However, this obligation does not apply if such notification is impossible or involves a disproportionate effort. Nevertheless, users have a right to information about these recipients. Likewise, under Art. 21 GDPR, users and data subjects have the right to object to the controller’s future processing of their data pursuant to Art. 6 Para. 1 lit. f) GDPR. In particular, an objection to data processing for the purpose of direct advertising is permissible. III. Information about the data processing: Your data processed when using our website will be deleted or blocked as soon as the purpose for its storage ceases to apply, provided the deletion of the same is not in breach of any statutory storage obligations or unless otherwise stipulated below. Cookies: a) Session cookiesWe use cookies on our website. Cookies are small text files or other storage technologies stored on your computer by your browser. These cookies process certain specific information about you, such as your browser, location data, or IP address.   This processing makes our website more user-friendly, efficient, and secure, allowing us, for example, to display our website in different languages or to offer a shopping cart function. The legal basis for such processing is Art. 6 Para. 1 lit. b) GDPR, insofar as these cookies are used to collect data to initiate or process contractual relationships. If the processing does not serve to initiate or process a contract, our legitimate interest lies in improving the functionality of our website. The legal basis is then Art. 6 Para. 1 lit. f) GDPR. When you close your browser, these session cookies are deleted. b) Third-party cookiesIf necessary, our website may also use cookies from companies with whom we cooperate for the purpose of advertising, analyzing, or improving the features of our website. Please refer to the following information for details, in particular for the legal basis and purpose of such third-party collection and processing of data collected through cookies. c) Disabling cookiesYou can refuse the use of cookies by changing the settings on your browser. Likewise, you can use the browser to delete cookies that have already been stored. However, the steps and measures required vary, depending on the browser you use. If you have any questions, please use the help function or consult the documentation for your browser or contact its maker for support. Browser settings cannot prevent so-called flash cookies from being set. Instead, you will need to change the setting of your Flash player. The steps and measures required for this also depend on the Flash player you are using. If you have any questions, please use the help function or consult the documentation for your Flash player or contact its maker for support. If you prevent or restrict the installation of cookies, not all of the functions on our site may be fully usable. Contact: If you contact us via email or the contact form, the data you provide will be used for the purpose of processing your request. We must have this data in order to process and answer your inquiry; otherwise we will not be able to answer it in full or at all. The legal basis for this data processing is Art. 6 Para. 1 lit. b) GDPR. Your data will be deleted once we have fully answered your inquiry and there is no further legal obligation to store your data, such as if an order or contract resulted therefrom. User posts, comments, and ratings: We offer you the opportunity to post questions, answers, opinions, and ratings on our website, hereinafter referred to jointly as “posts. ” If you make use of this opportunity, we will process and publish your post, the date and time you submitted it, and any pseudonym you may have used. The legal basis for this is Art. 6 Para. 1 lit. a) GDPR. You may revoke your prior consent under Art. 7 Para. 3 GDPR with future effect. All you have to do is inform us that you are revoking your consent. In addition, we will also process your IP address and email address. The IP address is processed because we might have a legitimate interest in taking or supporting further action if your post infringes the rights of third parties and/or is otherwise unlawful. In this case, the legal basis is Art. 6 Para. 1 lit. f) GDPR. Our legitimate interest lies in any legal defense we may have to mount. Follow-up comments: If you make posts on our website, we also offer you the opportunity to subscribe to any subsequent follow-up comments made by third parties. In order to be able to inform you about these follow-up comments, we will need to process your email address. The legal basis for this is Art. 6 Para. 1 lit. a) GDPR. You may revoke your prior consent to this subscription under Art. 7 Para. 3 GDPR with future effect. All you have to do is inform us that you are revoking your consent or click on the unsubscribe link contained in each email. Twitter: We maintain an online presence on Twitter to present our company and our services and to communicate with customers/prospects. Twitter is a service provided by Twitter Inc. , 1355 Market Street, Suite 900, San Francisco, CA 94103, USA. We would like to point out that this might cause user data to be processed outside the European Union, particularly in the United States. This may increase risks for users that, for example, may make subsequent access to the user data more difficult. We also do not have access to this user data. Access is only available to Twitter. Twitter Inc. is certified under the Privacy Shield and committed to adhering to European privacy standards. https://www. privacyshield. gov/participant?id=a2zt0000000TORzAAO&amp;status=Active The privacy policy of Twitter can be found at https://twitter. com/privacy YouTube: We maintain an online presence on YouTube to present our company and our services and to communicate with customers/prospects. YouTube is a service of Google Ireland Limited, Gordon House, Barrow Street, Dublin 4, Ireland, a subsidiary of Google LLC, 1600 Amphitheater Parkway, Mountain View, CA 94043 USA. We would like to point out that this might cause user data to be processed outside the European Union, particularly in the United States. This may increase risks for users that, for example, may make subsequent access to the user data more difficult. We also do not have access to this user data. Access is only available to YouTube. Google LLC is certified under the Privacy Shield and committed to comply with European privacy standards. https://www. privacyshield. gov/participant?id=a2zt000000001L5AAI&amp;status=Active The YouTube privacy policy can be found here: https://policies. google. com/privacy LinkedIn: We maintain an online presence on LinkedIn to present our company and our services and to communicate with customers/prospects. LinkedIn is a service of LinkedIn Ireland Unlimited Company, Wilton Plaza, Wilton Place, Dublin 2, Irland, a subsidiary of LinkedIn Corporation, 1000 W. Maude Avenue, Sunnyvale, CA 94085, USA. We would like to point out that this might cause user data to be processed outside the European Union, particularly in the United States. This may increase risks for users that, for example, may make subsequent access to the user data more difficult. We also do not have access to this user data. Access is only available to LinkedIn. LinkedIn Corporation is certified under the Privacy Shield and committed to comply with European privacy standards. https://www. privacyshield. gov/participant?id=a2zt0000000L0UZAA0&amp;status=Active The LinkedIn privacy policy can be found here: https://www. linkedin. com/legal/privacy-policy Social media links via graphics: We also integrate the following social media sites into our website. The integration takes place via a linked graphic of the respective site. The use of these graphics stored on our own servers prevents the automatic connection to the servers of these networks for their display. Only by clicking on the corresponding graphic will you be forwarded to the service of the respective social network. Once you click, that network may record information about you and your visit to our site. It cannot be ruled out that such data will be processed in the United States. Initially, this data includes such things as your IP address, the date and time of your visit, and the page visited. If you are logged into your user account on that network, however, the network operator might assign the information collected about your visit to our site to your personal account. If you interact by clicking Like, Share, etc. , this information can be stored your personal user account and possibly posted on the respective network. To prevent this, you need to log out of your social media account before clicking on the graphic. The various social media networks also offer settings that you can configure accordingly. The following social networks are integrated into our site by linked graphics: twitter: Twitter Inc. , 795 Folsom St. , Suite 600, San Francisco, CA 94107, USA Privacy Policy: https://twitter. com/privacy EU-US Privacy Shield https://www. privacyshield. gov/…0000TORzAAO&amp;status=Active YouTube: Google Ireland Limited, Gordon House, Barrow Street, Dublin 4, Irland, a subsidiary of Google LLC, 1600 Amphitheatre Parkway, Mountain View, CA 94043 USA Privacy Policy: https://policies. google. com/privacy EU-US Privacy Shield https://www. privacyshield. gov/participant?id=a2zt000000001L5AAI&amp;status=Active LinkedIn: LinkedIn Ireland Unlimited Company, Wilton Plaza, Wilton Place, Dublin 2, Irland, a subsidiary of LinkedIn Corporation, 1000 W. Maude Avenue, Sunnyvale, CA 94085 USA. Privacy Policy: https://www. linkedin. com/legal/privacy-policy EU-US Privacy Shield https://www. privacyshield. gov/participant?id=a2zt0000000L0UZAA0&amp;status=Active Twitter plug-in: Our website uses the plug-in of the Twitter social network. The Twitter service is operated by Twitter Inc. , 795 Folsom St. , Suite 600, San Francisco, CA 94107, USA (“Twitter”). Through certification according to the EU-US Privacy Shield https://www. privacyshield. gov/participant?id=a2zt0000000TORzAAO&amp;status=Active Twitter guarantees that it will follow the EU’s data protection regulations when processing data in the United States. The legal basis is Art. 6 Para. 1 lit. f) GDPR. Our legitimate interest lies in improving the quality of our website. If the plug-in is stored on one of the pages you visit on our website, your browser will download an icon for the plug-in from Twitter’s servers in the USA. For technical reasons, it is necessary for Twitter to process your IP address. In addition, the date and time of your visit to our website will also be recorded. If you are logged in to Twitter while visiting one of our plugged-in websites, the information collected by the plug-in from your specific visit will be recognized by Twitter. The information collected may then be assigned to your personal account at Twitter. If, for example, you use the Twitter Tweet button, this information will be stored in your Twitter account and may be published on the Twitter platform. To prevent this, you must either log out of Twitter before visiting our site or make the appropriate settings in your Twitter account. Further information about the collection and use of data as well as your rights and protection options in Twitter’s privacy policy found at https://twitter. com/privacy Google Analytics: We use Google Analytics on our website. This is a web analytics service provided by Google Ireland Limited, Gordon House, Barrow Street, Dublin 4, Irland (hereinafter: Google). Through certification according to the EU-US Privacy Shield https://www. privacyshield. gov/participant?id=a2zt000000001L5AAI&amp;status=Active Google guarantees that it will follow the EU’s data protection regulations when processing data in the United States. The Google Analytics service is used to analyze how our website is used. The legal basis is Art. 6 Para. 1 lit. f) GDPR. Our legitimate interest lies in the analysis, optimization, and economic operation of our site. Usage and user-related information, such as IP address, place, time, or frequency of your visits to our website will be transmitted to a Google server in the United States and stored there. However, we use Google Analytics with the so-called anonymization function, whereby Google truncates the IP address within the EU or the EEA before it is transmitted to the US. The data collected in this way is in turn used by Google to provide us with an evaluation of visits to our website and what visitors do once there. This data can also be used to provide other services related to the use of our website and of the internet in general. Google states that it will not connect your IP address to other data. In addition, Google provides further information with regard to its data protection practices at https://www. google. com/intl/de/policies/privacy/partners, including options you can exercise to prevent such use of your data. In addition, Google offers an opt-out add-on at https://tools. google. com/dlpage/gaoptout?hl=en in addition with further information. This add-on can be installed on the most popular browsers and offers you further control over the data that Google collects when you visit our website. The add-on informs Google Analytics’ JavaScript (ga. js) that no information about the website visit should be transmitted to Google Analytics. However, this does not prevent information from being transmitted to us or to other web analytics services we may use as detailed herein. YouTube: We use YouTube on our website. This is a video portal operated by YouTube LLC, 901 Cherry Ave, 94066 San Bruno, CA, USA, hereinafter referred to as “YouTube”. YouTube is a subsidiary of Google Ireland Limited, Gordon House, Barrow Street, Dublin 4, Irland, hereinafter referred to as “Google”. Through certification according to the EU-US Privacy Shield https://www. privacyshield. gov/participant?id=a2zt000000001L5AAI&amp;status=Active Google and its subsidiary YouTube guarantee that they will follow the EU’s data protection regulations when processing data in the United States. We use YouTube in its advanced privacy mode to show you videos. The legal basis is Art. 6 Para. 1 lit. f) GDPR. Our legitimate interest lies in improving the quality of our website. According to YouTube, the advanced privacy mode means that the data specified below will only be transmitted to the YouTube server if you actually start a video. Without this mode, a connection to the YouTube server in the USA will be established as soon as you access any of our webpages on which a YouTube video is embedded. This connection is required in order to be able to display the respective video on our website within your browser. YouTube will record and process at a minimum your IP address, the date and time the video was displayed, as well as the website you visited. In addition, a connection to the DoubleClick advertising network of Google is established. If you are logged in to YouTube when you access our site, YouTube will assign the connection information to your YouTube account. To prevent this, you must either log out of YouTube before visiting our site or make the appropriate settings in your YouTube account. For the purpose of functionality and analysis of usage behavior, YouTube permanently stores cookies on your device via your browser. If you do not agree to this processing, you have the option of preventing the installation of cookies by making the appropriate settings in your browser. Further details can be found in the section about cookies above. Further information about the collection and use of data as well as your rights and protection options in Google’s privacy policy found at https://policies. google. com/privacy{% comment %} MailChimp - Newsletter: We offer you the opportunity to register for our free newsletter via our website. We use MailChimp, a service of The Rocket Science Group, LLC, 512 Means Street, Suite 404, Atlanta, GA 30318, USA, hereinafter referred to as “The Rocket Science Group”. Through certification according to the EU-US Privacy Shield https://www. privacyshield. gov/participant?id=a2zt0000000TO6hAAG&amp;status=Active the Rocket Science Group guarantees that it will follow the EU’s data protection regulations when processing data in the United States. In addition, the Rocket Science Group offers further information about its data protection practices at http://mailchimp. com/legal/privacy/ If you register for our free newsletter, the data requested from you for this purpose, i. e. your email address and, optionally, your name and address, will be processed by The Rocket Science Group. In addition, your IP address and the date and time of your registration will be saved. During the registration process, your consent to receive this newsletter will be obtained together with a concrete description of the type of content it will offer and reference made to this privacy policy. The newsletter then sent out by The Rocket Science Group will also contain a tracking pixel called a web beacon. This pixel helps us evaluate whether and when you have read our newsletter and whether you have clicked any links contained therein. In addition to further technical data, such as data about your computer hardware and your IP address, the data processed will be stored so that we can optimize our newsletter and respond to the wishes of our readers. The data will therefore increase the quality and attractiveness of our newsletter. The legal basis for sending the newsletter and the analysis is Art. 6 Para. 1 lit. a) GDPR. You may revoke your prior consent to receive this newsletter under Art. 7 Para. 3 GDPR with future effect. All you have to do is inform us that you are revoking your consent or click on the unsubscribe link contained in each newsletter. {% endcomment %} Model Data Protection Statement for Anwaltskanzlei Weiß &amp; Partner "
    }, {
    "id": 7,
    "url": "/page2/",
    "title": "Home",
    "body": "{% if page. url == “/” %}       Featured:     {% for post in site. posts %}  {% if post. featured == true %}    {% include featuredbox. html %}  {% endif %}{% endfor %}&lt;/div&gt;{% endif %} &lt;div class=&quot;section-title&quot;&gt;  &lt;h2&gt;&lt;span&gt;All Posts&lt;/span&gt;&lt;/h2&gt;&lt;/div&gt;&lt;div class=&quot;row listrecent&quot;&gt;  {% for post in paginator. posts %}  {% include postbox. html %}  {% endfor %}&lt;/div&gt;  {% include pagination. html %}"
    }, {
    "id": 8,
    "url": "/page3/",
    "title": "Home",
    "body": "{% if page. url == “/” %}       Featured:     {% for post in site. posts %}  {% if post. featured == true %}    {% include featuredbox. html %}  {% endif %}{% endfor %}&lt;/div&gt;{% endif %} &lt;div class=&quot;section-title&quot;&gt;  &lt;h2&gt;&lt;span&gt;All Posts&lt;/span&gt;&lt;/h2&gt;&lt;/div&gt;&lt;div class=&quot;row listrecent&quot;&gt;  {% for post in paginator. posts %}  {% include postbox. html %}  {% endfor %}&lt;/div&gt;  {% include pagination. html %}"
    }, {
    "id": 9,
    "url": "/robots.txt",
    "title": "",
    "body": "Sitemap: {{ “sitemap. xml” | absolute_url }} "
    }, {
    "id": 10,
    "url": "/Windows-Virtual-Desktop-Admin/",
    "title": "WVD Admin - A native administration Gui for Windows Virtual Desktop",
    "body": "2020/12/09 - Windows Virtual Desktop administration with WVDAdminWindows Virtual Desktop is generally available under continuous improvement and currently available in the ARM (Spring) and in the Classic (Fall) version. The ARM version is completely into the Azure Portal.  Sometimes it helps to have a native GUI to make some configuration and - for me, most important - to have an easy image handling to deploy session hosts based on a template VM (golden image approach). Therefore I build a native Windows application to do this, and I’m happy to share it with the community.  Download the latest release from 12/09/2020 The current version supports a lot of configuration and administration capabilities, and I’m continuously improving WVDAdmin. Some features: Add, edit and delete host poolsAdd, edit and delete application groupsAdd, edit and delete application and desktop (you can add a new app with the Windows file-open-dialog)Add a list of users to applications or a desktop (separated by ;)Send messages to a single user and users on a specific session hostLogoff single users or all users of a specific session hostStart and deallocate session hosts (the Azure VM behind)Delete session hosts and the VMs in Azure, including disks and nicsRun commands and scripts on multiple session hosts (trigger Windows updates, enable RDP Shortpath, …)Create an image from a template VM without destroying the template VM (golden image approach)Rollout several new session hosts based on a template image - including domain join and WVD installation and registration (comparable to Citrix MCS)Rollout VM Scale SetsStart and deallocate Scale Set instancesRe-image Scale Set instancesAdd or remove Scale Set instancesand some more thingsInstallationRelease History: Download the latest release from 12/09/2020 I'm continuously updating WVDAdmin to make it easier to administrate and deploy WVD, users, and session hosts. Click to see the change history. ReleaseChanges &amp; Notes1. 6. 55. 0Change: Single session nodes are not listed under the session host node if more then 100 sessions exist to speed up WVDAdmin - all sessions are still in the session list1. 6. 54. 0Add: Function to delete unused disks and nics; Add: More logging for the rollout of session hosts; Add: New VM-types, like L4s_v2, …1. 6. 53. 0Add: Add session hosts automatically to Loadbalancer Backend Pools; Add: If a VM resource is unavailable, the first alternative VM size will be tried1. 6. 51. 0Add: Custom script to install Azure Monitor for WVD from sepago to existing session hosts1. 6. 50. 0Add: Support for Dhsv31. 6. 46. 0Add: You can now rollout new session hosts with accelerated network configuration, Change: NICs are now created with the name of the VM1. 6. 45. 0Add: Add session hosts automatically to ASGs1. 6. 42. 0Add: Support for Dasv4-series1. 6. 41. 0Add: Experimental feature: Add applications to session hosts from Windows Package Manager repository1. 6. 40. 0Change: Having a script-path for building images is no longer needed. If you leave the text box empty, the local script coming with WVDAdmin will be used and directly send to the VM1. 6. 35. 0Add: On a session host &gt; State &gt; Mouse over will show the health report of the host1. 6. 34. 0Fix: The drop-down list “Feature release” was not shown correctly. Feature release is the selector between the different WVD versions like Fall (WVD classic) and Spring (WVD modern on ARM)1. 6. 32. 0Add: You can run scripts on multiple classic session hosts: Win Updates: Install new available updates; Custom script: Custom script located in the program files folder of WVDAdmin1. 6. 30. 0Add: Sorting order for WVD resources1. 6. 29. 0Add: Support for Eav4 and Easv4-series1. 6. 28. 0Add: Speed up adding a lot of VMs to the treeview1. 6. 27. 0Add: Support for using availability zones. Select it from the drop-down list right to the resource group list1. 6. 26. 0Add: You can run scripts on multiple ARM session hosts: Win Updates: Install new available updates; Custom script: Custom script located in the program files folder of WVDAdmin1. 6. 24. 0Add: Multi selection and action on session hosts for ARM if you select a session host container; Fix: Scale Set instances wasn’t shown in 1. 6. 231. 6. 23. 0Fix: New image was not visualized in the tree view after creation1. 6. 22. 0Add: Support for shared image galleries: Add a shared image gallery from the Azure Portal into a resource group managed by WVDAdmin. In WVDAdmin right-click an existing image and select “copy to shared image gallery”. An image can be rolled-out right clicking the shared image1. 6. 21. 0Add: Double-click on the tag Logs, Sessions or Sessions V2 enlarge the part of the windows (double-click again to revert)1. 6. 18. 0Fix: API change from Microsoft cause that updating a host pool property fails if the location is written like “Central US” (centralus is no problem); Add: First version able to deploy session hosts from images in a image gallery1. 6. 16. 0Add: Session hosts icons are now based on the availability state; Fix: Enumerating thousands of sessions with thousands of session hosts takes longer as expected (&gt; 4 minutes)1. 6. 14. 0Add: Support US Government Cloud. Activate: Add a new string Reg_SZ “Environment” with value “US” to HKCU\SOFTWARE\ITProCloud\WVDAdmin”1. 6. 12. 0Add: Support for VM types: Dv4 and Dsv4-series, Ev4 and Esv4-series1. 6. 11. 0Fix: WVD ARM resources are deployed with the tags; Workspaces and host pools are separated by subscription name1. 6. 9. 00Fix: Generating toke for Spring host pool fails sometimes (Error: ExpirationTime value must be between one hour and 30 days from now” - An error occurred while gathering an WVD2 token from backend: Object reference not set to an instance of an object. )1. 6. 5. 00Add: Support for DD_v2 and DDS_V4 virtual machine types; Fix: Forwarding from the WVD API cause a authentication lost (error 401, 403 reading resources in the FALL update)1. 6. 4. 00Add: Support for GEN2 virtual machines1. 6. 2. 00Add: New naming feature for new session host. Default (is): Name for a session host is the highest matching name +1; new concept (must be enabled): Name for a session host is the next free name. To enable add a reg dword to HKCU\Software\ITProCloud\WVDAdmin Name:NamingMode and value to “1”1. 6. 1. 00Fix: Default session limit for V2 host pool is now 9999991. 6. 0. 00Change: The tag WVD. Path is aligned to Microsoft naming of “tenant” and “host pool” for the spring update. Tenant=resource group name and no longer subscription name1. 5. 9. 00Add: Load assigned users button to the app group tab (fall update)1. 5. 7. 00Add: You can join existing VM’ to a host pool (VMs must be domain joined and not in a host pool right now)1. 5. 6. 00Add: You can now move session host around host pools not created with WVDAdmin (it downloads the necessary files automatically); you can join existing VM’ to a host pool (VMs must be domain joined)1. 5. 5. 00Fix: Enumerating VMs was endless in some circumstance1. 5. 4. 00Add: Migration from Fall to Spring Update; moving session hosts to another host pool1. 5. 3. 00Fix: Improvement updating the treeview1. 5. 0. 00Add: Supporting the WVD Spring Release / Spring Update ; Some user operations from the session grid are now async; Fix: Spontaneous resize of the windows if data are reloaded1. 4. 9. 00Add: Filter users, session hosts and host pools in the overview of sessions1. 4. 8. 00Add: Support to add users by groups from Azure Active Directory, including an AAD browser (check my blog post and configure the service principal to use this feature)1. 4. 6. 00Add: New VM sizes; all new scale sets are deployed as really scalable version (up to 600 instances each)1. 4. 4. 00Fix: Service Principal Keys with some special characters are working now; Add: Faster loading of resources from WVD and Azure backend1. 4. 2. 00Add: Support for NVv4 VM sizes (based on AMD Radeon Instinct MI25-GPU); support to set custom Azure tags for resources while deploying resources1. 4. 0. 00Fix: From an older version, disks are deployed as standard-hdd even if premium-disk was selected; Change: Connection views are now located parallel to the logging list on the bottom (tenant-view); Add: Function to check for an updated version via https://blog. itprocloud. de/assets/files/WVDAdmin. xml1. 3. 6. 00Add: New tag for session hosts: WVD. Path - used by Azure Monitor for WVD and Azure Autoscale for WVD - aka Project MySmartScale if an installed language pack conflicts with the Microsoft RDAgent (read this post to learn more)1. 3. 5. 00Add: Allow an local admin to shadow a user session (WVDAdmin needs direct access to the session host via RDP)1. 3. 4. 00Add: Networks are now listed as VNET/SUBNET in the rollout tab1. 3. 3. 00Add: Support for a special mode if your WVD tenant and the session hosts in two different Azure Active Directory tenants1. 3. 1. 00Fix: WVDAdmin crashed if 1. 3. 0 is your first version of WVDAdmin (HKEY_CURRENT_USER\Software\ITProCloud doesn’t exist while checking for multi-tenancy mode)1. 3. 0. 00Add: AAD multi-tenancy mode (drop down list to handle different AADs) - https://blog. itprocloud. de/Windows-Virtual-Desktop-Windows-Virtual-Desktop-Administration-for-CSP-and-Consulting-Partners1. 2. 8. 00Add: If you click a tenant a tenant wide list of sessions is listed.  Logoff or send messages to multiple sessions1. 2. 7. 00Add: The main window of the application is now resizeable1. 2. 5. 00Add: Support for Scale Sets (with normal and ephemeral disks) -&gt; see below1. 2. 4. 00Add: Support for availability sets1. 2. 3. 00Add: Support for automatic and static assigned host pools1. 2. 1. 00Fix: Logging of rollout parameter by Azure custom extension is removed to avoid logging secrets1. 0. 0. 30Fix: Rollout - OU can now be empty to join the default OU1. 0. 0. 29Add: Supporting “special license mode” to save up to 50% on compute-cost (https://docs. microsoft. com/en-us/azure/virtual-desktop/apply-windows-license)1. 0. 0. 26Add: Template VM can now be a VM with a standard disk (non-managed)1. 0. 0. 25Fix: If you delete a VM the OS disk will deleted as well1. 0. 0. 23Support for ephemeral disks1. 0. 0. 22First published version - without auto-update of WVD AdminConfiguration: Service principal (functional account): To work with the GUI, you need a service principal (function account) with permission to administrate access to the WVD and Azure resources. I decide to use a service principal to avoid confusion if my Azure AD user is only a guest account in the WVD tenant I have to administrate and easily switch between different tenants. To create a service principal, go to your Azure AD -&gt; App registration -&gt; New registration and type a name for your principal like “ svc_WVDAdmin” and press “register”.  Click on “certificates &amp; secrets”. Click “new client secret”, select a validity period and a description (like “Key01”). Press “add”.  Copy the generated key directly - it will never be displayed again. Note the key for later.  To assign users to app groups, the service principal needs two API permissions to get the users and groups from Azure AD: API Permissions: Add the permission “Azure Active Directory Graph” -&gt; Application Permission -&gt; Directory. Read. All Add the permission “Microsoft Graph” -&gt; Application Permission -&gt; Directory. Read. All To consent, the permission and administrator of Azure AD have to grant this: Go to “Overview”. Note the “Application (client) ID” and the “Directory (tenant) ID” as well.  You now have all data for your service principal: Tenant idService principal id (application id)Service principal keyWVD permissions (Classic / Fall Version): This chapter is for WVD Classic / Fall. Skip this chapter if you only work with WVD ARM (Spring). To use WVDAdmin you need at least an existing WVD tenant. If you new to WVD follow this article to create a WVD tenant: [https://docs. microsoft. com/en-us/azure/virtual-desktop/virtual-desktop-fall-2019/tenant-setup-azure-active-directory) You have to use PowerShell to give the WVD the appropriated permission: Import-Module -Name Microsoft. RDInfra. RDPowerShell# log on with an administrative user account to your Add-RdsAccount -DeploymentUrl  https://rdbroker. wvd. microsoft. com  # list rds tenantsGet-RdsTenant # give your service principal the right permissionNew-RdsRoleAssignment -TenantName “Builder City” -RoleDefinitionName “RDS Owner” -ApplicationId 89050a12-xxxx-xxxx-xxxx-000000000000 WVD permissions (ARM / Spring Version): This chapter is for WVD ARM / Spring. Skip this chapter if you only work with WVD Classic (Fall). The service principal needs permission to add and modify WVD resource objects (host pools, workspaces, app groups). To assign users and groups to app groups, the service principal needs the owner role on the resource groups you want to use for your WVD environment. Add the service principal in the next step and use the owner role. Register Resource Provider (ARM / Spring Version): This chapter is for WVD ARM / Spring. Skip this chapter if you only work with WVD Classic (Fall). If you have never worked with WVD, you have to register the WVD resource provider once. To do that, go to the Azure portal -&gt; subscriptions -&gt; select your subscription -&gt; Resource providers Search for “Microsoft. DesktopVirtualization” and click on “Register”. Azure resource permissions: The service principal needs permission to subscriptions or resource groups to manage your WVD resources, imaging template VM and rollout session hosts. Open the Azure portal and go to the resource groups you want to use or to the subscriptions. In each resource group/subscription, click “Access control (IAM)” -&gt; select “Add” -&gt; Add role assignment. Select “owner” and search in “Select” for your service principal name. Click on the principal and save the settings. Note: Owner is needed to assign users to app groups. For other resources, “contributor” is fine.  The service principal must have permissions to your virtual network (vnet) to assign new VMs to the right subnet. Go to your vnet, click “Access control (IAM)” -&gt; select “Add” -&gt; Add role assignment. Select “contributor” and search in “select” for your service principal name. Click the principal and save the settings. You could skip this step if you assigned the service principal to the subscription or to the resource group containing your vnet.  Prepare your “native” Active Directory: Today each session host must be part of a “native” active directory domain (or have to use the domain services). To add new session hosts unattended, we need an administrative user account to add a computer object to the active directory domain. You can use an existing one, or you can create a new service user: Open “Active Directory Users and Computers” and create a user object with a complex password, and set a password to “never expire” (if you fine with this). I added the user srv_WVD-Join@itprocloud. de. Delegate permission for the user to an OU. I found a really good blog post from Prajwal Desai. Check out hist post on (external web site): Method 2 – Delegate rights to user/group using Active Directory Users and Computers In my case I added my function account to: “OU=WVD,OU=Azure,OU=Site,OU=Servers,OU=Sys,OU=Organisation,DC=ITProCloud,DC=test” Optional: Create a file share: In earlier versions (&lt;1. 6. 40), you had to provide the deployment script and the WVD agent binaries on a custom file share or blob storage. With WVDAdmin 1. 6. 40 or newer, this no longer mandatory. In some cases, where virtual machines don’t have access to the internet to download the WVD agent binaries, you can use a custom file share. Read more. Hint: Alternatively, you can use Azure blob storage to store the script. Make the blob storage read-only and use the URL as rollout script-path. E. g. : https://sharedservices01. blob. core. windows. net/wvd Create a file share for the configuration script (which adds new session hosts to the domain and install the WVD agent). Give everyone at least read permissions. Set the NTFS permissions to everyone and read. This is necessary while during the first startup, the VM extension tries to execute the script. In this process, the file share is accessed anonymously.  Place the following files in this share: ITPC-WVD-Image-Processing. ps1 (rename the download to . ps1)Microsoft. RDInfra. RDAgent. msi (rename the file)Microsoft. RDInfra. RDAgentBootLoader. msi (rename the file)Make sure that you rename the files to fit the list above (without version numbers).  Important: If you are using Windows Server 2019 as file share, make sure that anonymous file share access is enabled. Create a GPO for the session hosts containing the following configurations: Security Options:Accounts: Guest Account Status: EnabledNetwork access: Let Everyone permissions apply to anonymous users: EnabledNetwork access: Do not allow anonymous enumeration of SAM accounts and shares: DisabledConfigure WVDAdminPlease start WVDAdmin. Before you load WVD and Azure data, copy the Azure tenant id, service principal id, and service principal key into the welcome tab. Press save and load the data by clicking “Reload all”. You are now able to administrate WVD, create images from template VMs and rollout new session hosts. The first time you want to roll out new session hosts, you have to enter some information from your Active Directory and file share configuration from above: Local Admin and local pw. are the local administrator account credentials which you can enter at this time.  Build an imageYou can rollout VMs and VM Scale Set with images created by WVDAdmin. These images contain the logic to join the AD domain and WVD. You can simple create an image from a template VM. The template VM must part of your AD like a standard client. You have not to sysprep or to normalize this template VM. Use the same template VM for Windows and application updates. Following these steps to build your template: Install a VM in the Azure portal. Select the right OS (like Windows 10 Enterprise for Virtual Desktops)Make all Windows updatesJoin the VM to your ADInstall your applicationMake your customizing (like installing language packages)Shutdown the template VMTo create the image, open WVDAdmin and Navigate to the Azure template VM (Azure -&gt; Virtual Machines -&gt; RG -&gt; VM)Right-click -&gt; “Create a template image”Select the resource group to store the imagePress “Capture”You can and should reuse the template VM for new updates and applications. After these changes, shut down the template VM and create a new image. Tipps &amp; TricksVM Scale Sets: First node: VM Scale Sets cannot autoscale WVD session hosts. Auto-scaling only works for stateless services like a web server. But if you need hundreds of session hosts, then VM Scale Set allows you to work with these numbers efficiently. Read moreFrom version 1. 2. 5, WVDAdmin support VM Scale Sets. A Scale Set can have several instances, which are the VMs / session hosts. There are some essential things you have to know if you use VM Scale Set with WVDAdmin and WVD itself:Build a Scale Set with WVDAdmin. Select an image, right-click and select “Create session host from image”. Check “Rollout as VM Scale Set”You can use regular disks and ephemeral disks. If you use ephemeral disks, you cannot deallocate the instances of your Scale Set. You have to delete the instancesToday, you can not use ultra disksYou can add and remove instances with WVDAdmin or in the Azure Portal. New instances will join the domain and WVDA new instance can only join WVD if the session host with the new name doesn’t exist. If you delete instances, the session host entry will also be removedYou can re-image single instances or all instances of a Scale Set. After that, the instances are “clean” as at the first rolloutAdding instances or re-imaging assumes that the Scale Set configuration (which is a custom script extension) has a valid WVD token to join new instances to WVD. While WVD provides only one token per host pool and that the token can be expiring, you can update the token with a right-click on the Scale Set and select “Update WVD token”. The max. lifetime of a token is 59 daysUnfortunately, WVDAdmin cannot change the source image for a VM Scale Set. So if you want to update the image for a host pool, take these steps:Rollout a new Scale Set based on the new imageDisable new logons for the old session host from the previous Scale SetTest the host pool based on the new Scale SetIf no user logged on to the ancient Scale Set, remove all instances from the Scale Set (this deletes the session hosts in WVD as well)Remove the Scale SetEphemeral disks: Ephemeral disks are awesome. They give you a high performance free of charge. Especially in a WVD multiuser environment where no data a stored permanently on the session hosts, this kind of disk can give you some value add. Read moreEphemeral disks are running on the Azure hypervisor and not stored. This has some advantages:There are no storage costs (!)A very high data throughput because the disks exist on the hypervisorSee @MichaWets  blog post for more information: https://www. cloud-architect. be/2019/07/15/windows-virtual-desktop-running-on-ephemeral-os-disks/Please note: You can not deallocate a VM with this disk type - you have to delete the VM (and roll out a new one instead of starting a “normal” VM)Not each VM size is available, and there are limitations of the disk size (image size for rollout) based on the VM size: Max ephemeral disk size for Standard_D4s_v3 is 64 GByte while a Standard_D8s_v3 can have up to 128 GByte. See https://docs. microsoft. com/en-us/azure/virtual-machines/linux/sizes-generalIf the Azure hypervisor fails, your session host will fail as well and can not be re-deployed automatically Secret Features: WVDAdmin has some features not directly visible but configurable via registry keys. All settings in the registry are in the current user part under HKEY_CURRENT_USER\SOFTWARE\ITProCloud\WVDAdmin. Keep in mind to restart WVDAdmin after changing the registry settings. Read moreMulti-Tenant-Mode: From version 1. 3. 0 WVDAdmin will support a multi-AAD-tenancy mode allowing to switch the Azure AD tenant very easily. Follow this link Having multiple Service Principals for a single Tenant: In the Multi-Tenant-Mode, you can add one service principal per tenant. Sometimes you need more service principals for the same tenant. You can add more service principals for a tenant if you append #1 directly behind the tenant id (or #2, …). Naming of the Session Hosts: If you deploy session hosts to a host pool, WVDAdmin counts up the names from the highest available VM. E. g. , if you have a session host with the name “WVD-PROD-012” and you rollout new hosts (WVD-PROD-###), the first new hostname is “WVD-PROD-013” - even if you have gaps in the existing numeration. You can force WVDAdmin to fill this gaps (non-existing hosts in the naming schema) if you set the following registry key:Reg-DWord: NamingMode = 1 Split-Tenant: Usually, the WVD tenant and the resources (sessions hosts) are in the same AAD tenant. If you have two Azure AD tenant, you can use WVDAdmin with a second service principal for the session hosts (resource tenant). Follow this link US-Government Cloud: WVDAdmin can be used to deploy WVD in the Azure Government Cloud. You can enable WVDAdmin to work in the US Government Cloud via registry:Reg-SZ: Environment = US Run custom actions simultaneously: From version 1. 6. 15, WVDAdmin supports custom scripts to run administrative tasks simultaneously on different session hosts. And that is easy to use and to extend. Follow this link Add a session host automatically to an ASG: You can add a session host automatically to application security groups (ASG) within the rollout process. To achieve this, add one or more tags to the host pool containing your new session hosts. Name WVD. Default. ASG. X and add the azure resource id of an existing asg. X can be numbers to assign more ASGs. You can copy the id from an ASG from your browser. It looks like this: /subscriptions/&lt;subscription-id&gt;/resourcegroups/&lt;resourcegroup-name&gt;/providers/Microsoft. Network/applicationSecurityGroups/&lt;asg-name&gt; Add a session host automatically to a Loadbalancer Backend Pool: You can add a session host automatically to a loadbalancer backend pool within the rollout process. To achieve this, add one or more tags to the host pool containing your new session hosts. Name WVD. Default. LBPool. X and add the azure resource id of an existing loadbalancer backend pool. X can be numbers to assign more ASGs. You can copy the id from a pool from your browser. It looks like this: /subscriptions/&lt;subscription-id&gt;/resourcegroups/&lt;resourcegroup-name&gt;/providers/Microsoft. Network/loadBalancers/&lt;loadbalancer-name&gt;/backendAddressPools/&lt;pool-name&gt;Keep in mind to use availability sets for each rollout to use this feature. TroubleshootingCreate an Image: The image is not created. An error message occurs:Check if your template VM part of the ADIf your file server Windows Server 2019, read aboveCheck if you have set the NTFS and share permission correctlyAzure portal: Go to the temp VM (next to the template VM) and check the extension installation state. There should be an error message like script not found, access denied, etc. Have you renamed the RD agent and bootloader?Is the script saved correctly: ITPC-WVD-Image-Processing. ps1, not ITPC-WVD-Image-Processing. ps1. txtDon’t forget to delete the temp VM and temp disk to avoid costsMake sure that your template VM uses managed diskThe script generates additional log files in %WinDir%\System32\LogFilesWindows 7: Make sure to install PowerShell 5. 1 and all Windows updates (including the optional updates without the language packages) to the template VM and restart the VM to take effect: https://www. microsoft. com/en-us/download/details. aspx?id=54616 Makes sure that you use the newest script file from 09/2020: ITPC-WVD-Image-Processing. ps1NEW: An endless loop of “Waiting for the temporary vm (power off)” : Update to the newest PowerShell script for generalizing: ITPC-WVD-Image-Processing. ps1Others: You have created a host pool, an app group, and assigned a user to the app group, but the user cannot see the apps/desktop. For WVD ARM: Don’t forget to create a workspace and link the app group in the workspace. The workspace is mandatory to show the users’ resources. For the HTML5 web site: Check the correct web address:ARM/Spring: https://aka. ms/wvdarmwebClassic/Fall: http://aka. ms/wvdweb Download the latest release from 12/09/2020 "
    }, {
    "id": 11,
    "url": "/Windows-Virtual-Desktop-Admin-CustomScripts/",
    "title": "WVD Admin - Custom Scripts to run administrative tasks",
    "body": "2020/11/18 - Custom Scripts with WVDAdminFrom version 1. 6. 15, WVDAdmin supports custom scripts to run administrative tasks simultaneously on different session hosts. And that is easy to use and to extend. Let me show it with the challenge to enable RDP Shortpath on existing session hosts. In this post, Microsoft describes how to enable this preview feature for WVD to connect to a WVD session without crossing the internet. Start copying the file [C:\Program Files\ITProCloud. de\WVDAdmin\CustomScript. ps1](C:\Program Files\ITProCloud. de\WVDAdmin\CustomScript. ps1) to a new name into the same directory. For example EnableRDPShortPath. ps1 Open the file with notepad or the editor of your choice. Edit the first line to give your script a name (that is visible in the drop-down list in WVDAdmin) and a description. The description is shown in the message box where you have to consent to run on the selected session hosts. # {&quot;Name&quot;: &quot;Enable RDP Shortpath&quot;,&quot;Description&quot;:&quot;This script enables the preview function for RDP Shortpath on the selected session hosts&quot;}After that, you can copy the code between lines 22 and 23 (LogWriter(“Custom script start”) and LogWriter(“Custom script end”)). I re-used the example code from Microsoft: LogWriter(&quot;Custom script start&quot;)$WinstationsKey = 'HKLM:\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations'New-ItemProperty -Path $WinstationsKey -Name 'fUseUdpPortRedirector' -ErrorAction:SilentlyContinue -PropertyType:dword -Value 1 -ForceNew-ItemProperty -Path $WinstationsKey -Name 'UdpPortNumber' -ErrorAction:SilentlyContinue -PropertyType:dword -Value 3390 -ForceNew-NetFirewallRule -DisplayName ‘Remote Desktop - Shortpath (UDP-In)’ -Action Allow -Description ‘Inbound rule for the Remote Desktop service to allow RDP traffic. [UDP 3390]’ -Group ‘@FirewallAPI. dll,-28752’ -Name ‘RemoteDesktop-UserMode-In-Shortpath-UDP’ -PolicyStore PersistentStore -Profile Domain, Private -Service TermService -Protocol udp -LocalPort 3390 -Program ‘%SystemRoot%\system32\svchost. exe’ -Enabled:TrueLogWriter(&quot;Custom script end&quot;) The full script should look like this: # {&quot;Name&quot;: &quot;Enable RDP Shortpath&quot;,&quot;Description&quot;:&quot;This script enables the preview function for RDP Shortpath on the selected session hosts&quot;}param(  [string]$paramLogFileName=&quot;WVD. Custom. log&quot;,	[string]$paramString=&quot;&quot;);This powershell script is part of WVD Admin - see https://blog. itprocloud. de/Windows-Virtual-Desktop-Admin/ for more informationCurrent Version of this script: 1. 0 - Custom Script ExtensionWrite a return string to WVDAdmin with the example in the last lineDefine logfilen and dir$LogDir=&quot;$env:windir\system32\logfiles&quot;$LogFile=&quot;$LogDir$paramLogFileName&quot; function LogWriter($message){$message=&quot;$(Get-Date ([datetime]::UtcNow) -Format &quot;o&quot;) $message&quot;write-host($message)if ([System. IO. Directory]::Exists($LogDir)) {write-output($message) | Out-File $LogFile -Append}} LogWriter(&quot;Custom script start&quot;)$WinstationsKey = ‘HKLM:\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations’New-ItemProperty -Path $WinstationsKey -Name ‘fUseUdpPortRedirector’ -ErrorAction:SilentlyContinue -PropertyType:dword -Value 1 -ForceNew-ItemProperty -Path $WinstationsKey -Name ‘UdpPortNumber’ -ErrorAction:SilentlyContinue -PropertyType:dword -Value 3390 -Force New-NetFirewallRule -DisplayName ‘Remote Desktop - Shortpath (UDP-In)’ -Action Allow -Description ‘Inbound rule for the Remote Desktop service to allow RDP traffic. [UDP 3390]’ -Group ‘@FirewallAPI. dll,-28752’ -Name ‘RemoteDesktop-UserMode-In-Shortpath-UDP’ -PolicyStore PersistentStore -Profile Domain, Private -Service TermService -Protocol udp -LocalPort 3390 -Program ‘%SystemRoot%\system32\svchost. exe’ -Enabled:TrueLogWriter(&quot;Custom script end&quot;) Write-host(&quot;ScriptReturnMessage:{RDP Shortpath enabled - reboot the session hosts(s) to take effect}:ScriptReturnMessage&quot;) Alternatively, you can load the script from here and copy it into WVDAdmin’s program file folder. To load the scripts, restart WVDAdmin. You will see multiple “Information Adding scripts for session host management in the log windows: xxxx. ps1” messages, including your new EnableRDPShortPath. ps.  To run the script on multiple hosts, go to a host pool, expand the node and click the “Session hosts” container.  Select the hosts, select your script “Enable RDP Shortpath” and click on “Run script”. After clicking OK, the script will be run in the system context on the session hosts. This will take a few minutes.  After that - and in this case, after the next reboot - RDP Shortpath should be available for WVD users in directly connected networks. "
    }, {
    "id": 12,
    "url": "/Push-Azure-AD-User-data-into-Azure-Monitor-Log-Analytics-to-query-WVD-data-INTERNAL/",
    "title": "INTERNAL Push Azure AD User properties into Azure Monitor Log Analytics to build Windows Virtual Desktop (WVD) performance data based on these",
    "body": "2020/10/13 - Azure Monitor / Log Analytics is my first choice to store log and usage data. Even for Windows Virtual Desktop (WVD), it is crucial to have an eye on the hosts, users, and single applications’ usage and performance. I do that using Azure Monitor for WVD (https://www. sepago. de/en/azure-monitor-en/) from sepago, which is also included in Nerdio Manager for WVD (https://getnerdio. com/nerdio-manager-for-wvd/). The solution gives you insight into the performance of the apps and hosts and allows you to build a cost calculation on a per-user base. If you want to query and analyze data by other properties - like the department - you have to include these properties from Azure AD into your log analytics workspace. I found an easy solution doing that with an Azure logic app. The logic app access the Azure AD tenant and queries the users and some defined properties and send it to log analytics. A challenge was to handle the challenge that you have to query multiple times to get all users from Azure AD (a single query gives you only a specific amount of users -&gt; Paging). I solved this using an “Until-loop” to get all users. The logic app pushed the users and their properties to the defined log analytics workspace. After this, the users and properties can be used in a KUSTO query. For example: To query the over-all session runtime by the department. Installation and configuration: Deploy the prepared logic app into your subscription using the “Deploy to Azure” button.  To query the Azure AD unattended, you need a service principal (a function account) with the right permission. Create the service principal in the Azure Portal: Azure Active Directory -&gt; App registrations -&gt; New registration and give it a name (e. g. svc_AzureAdUserReader4AzureMonitor) and press registerGo to Certificates and secrets -&gt; Add new client secret and type in a name (e. g. Key1) and expiration date (make a note into your calendar) and press addCopy the generated secret for later useGo to Api permissions -&gt; Add a permission -&gt; select Microsoft Graph -&gt; Application permissions -&gt; select User. Read. All -&gt; click Add permissionsClick Grant admin consent to allow this setting (you have to be in the right role to do that)Go to overview and copy the application id and directory id for later useTo upload the data to your Azure Monitor / log analytics workspace, you need the workspace id and key. Go to your log analytics workspace -&gt; select Advanced settings -&gt; Agents management -&gt; copy the workspace id and primary key for later useGo to your deployed logic app and click edit. Expand “Until 2” Click on http. Enter the data from your service principal into the fields Tenant (Directory id), client id, and secret Click on Connections and add a new one (Add new) Give a name (e. g. ToLogAnalytics), the primary key and workspace id from log analytics and press createSave the logic app and press run to test it. If everything looks good, our logic app will write the user data to log analytics once a day.  You can query the data from log analytics with “ITPC_CTX_ADUsers_CL”. Keep in mind that it takes a while (30 minutes) to build the first upload schema.  Hint: You can modify the filter and the properties you get back, modifying the query URL. The URL can be modified in “Initialize variable” in the logic app.  The default is: https://graph. microsoft. com/v1. 0/users?$filter=accountEnabled eq true and userType eq 'Member'&amp;$select=userPrincipalName,onPremisesSamAccountName,employeeId,officeLocation,departmentA list of valid properties is here: https://docs. microsoft. com/de-de/graph/api/resources/user?view=graph-rest-1. 0 "
    }, {
    "id": 13,
    "url": "/Push-Azure-AD-User-data-into-Azure-Monitor-Log-Analytics-to-query-WVD-data/",
    "title": "Push Azure AD User properties into Azure Monitor Log Analytics to build Windows Virtual Desktop (WVD) performance data based on these",
    "body": "2020/10/01 - Azure Monitor / Log Analytics is my first choice to store log and usage data. Even for Windows Virtual Desktop (WVD), it is crucial to have an eye on the hosts, users, and single applications’ usage and performance. I do that using Azure Monitor for WVD (https://www. sepago. de/en/azure-monitor-en/) from sepago, which is also included in Nerdio Manager for WVD (https://getnerdio. com/nerdio-manager-for-wvd/). The solution gives you insight into the performance of the apps and hosts and allows you to build a cost calculation on a per-user base. If you want to query and analyze data by other properties - like the department - you have to include these properties from Azure AD into your log analytics workspace. I found an easy solution doing that with an Azure logic app. The logic app access the Azure AD tenant and queries the users and some defined properties and send it to log analytics. A challenge was to handle the challenge that you have to query multiple times to get all users from Azure AD (a single query gives you only a specific amount of users -&gt; Paging). I solved this using an “Until-loop” to get all users. The logic app pushed the users and their properties to the defined log analytics workspace. After this, the users and properties can be used in a KUSTO query. For example: To query the over-all session runtime by the department. Installation and configuration: Deploy the prepared logic app into your subscription using the “Deploy to Azure” button.  To query the Azure AD unattended, you need a service principal (a function account) with the right permission. Create the service principal in the Azure Portal: Azure Active Directory -&gt; App registrations -&gt; New registration and give it a name (e. g. svc_AzureAdUserReader4AzureMonitor) and press registerGo to Certificates and secrets -&gt; Add new client secret and type in a name (e. g. Key1) and expiration date (make a note into your calendar) and press addCopy the generated secret for later useGo to Api permissions -&gt; Add a permission -&gt; select Microsoft Graph -&gt; Application permissions -&gt; select User. Read. All -&gt; click Add permissionsClick Grant admin consent to allow this setting (you have to be in the right role to do that)Go to overview and copy the application id and directory id for later useTo upload the data to your Azure Monitor / log analytics workspace, you need the workspace id and key. Go to your log analytics workspace -&gt; select Advanced settings -&gt; Agents management -&gt; copy the workspace id and primary key for later useGo to your deployed logic app and click edit. Expand “Until 2” Click on http. Enter the data from your service principal into the fields Tenant (Directory id), client id, and secret Click on Connections and add a new one (Add new) Give a name (e. g. ToLogAnalytics), the primary key and workspace id from log analytics and press createSave the logic app and press run to test it. If everything looks good, our logic app will write the user data to log analytics once a day.  You can query the data from log analytics with “ITPC_CTX_ADUsers_CL”. Keep in mind that it takes a while (30 minutes) to build the first upload schema.  Hint: You can modify the filter and the properties you get back, modifying the query URL. The URL can be modified in “Initialize variable” in the logic app.  The default is: https://graph. microsoft. com/v1. 0/users?$filter=accountEnabled eq true and userType eq 'Member'&amp;$select=userPrincipalName,onPremisesSamAccountName,employeeId,officeLocation,departmentA list of valid properties is here: https://docs. microsoft. com/de-de/graph/api/resources/user?view=graph-rest-1. 0 "
    }, {
    "id": 14,
    "url": "/Least-privileges-with-custom-roles-for-Windows-Virtual-Desktop-(WVD)/",
    "title": "Least privileges with custom roles for Windows Virtual Desktop (WVD)",
    "body": "2020/09/10 - Administration, deployment, user support of Windows Virtual Desktop (WVD) needs permission in Azure. But these permissions are depending on the task a group of users/administrators have to do. For example, if the help desk has to log off and send messages to users, they need fewer permissions than the administrator building session hosts. In the first step, the permission for the different groups can be given using the build-in roles in Azure and assigning them to the groups and specific resources. But this doesn’t allow us to assign granular permissions to fulfill the least privileges approach. To do that, we have to go with custom roles. Custom roles allow combining specific permission for different resource types to a new role. Luckily, Windows Virtual Desktop has many additional permissions per resource type (host pool, app group, workspace, etc. ). I combined the permission from WVD and from other resource types (like Microsoft Compute) to build eight roles I often use in projects to assign the least permission as needed for the different administrator. These roles can be used to assign them to users, groups, and even service principals (important for WVDAdmin). In my opinion, the best way is to assign these roles on a resource group level and not to a subscription level. Before I describe the different new roles, I have to mention one “Specialty”: Assigning users to an app group in Windows Virtual Desktop needs that you have “Owner Permission” (or more precisely: Microsoft. Authorization/roleAssignments/write) to the app group. While Azure doesn’t have the ability to assign owner permission in a role to a specific resource type, I didn’t add this permission to the roles. So, you can easily use the new roles on a resource group level, and you can be sure that the user only has the least permission, but you have to assign appropriate admins as an owner to (only) the app groups. Owner permission on resource groups causes that the user can do and rollout anything in these groups. Note: In a real-world scenario where the least privileges approach for a specific group of admins is not necessary, owner permissions are given to the resource groups containing the WVD resources (especially the app groups). My common WVD roles:: WVD - User Session Reader: Allows to read the user session and host pool properties of Windows Virtual Desktop. WVD - User Session Contributor: Allows to work with the user session and read host pool properties of Windows Virtual Desktop host pools, including to send messages to users and logoff/disconnect user sessions WVD - Infrastructure Reader: Allows to read all properties of a WVD infrastructure: Host pools, session hosts, workspaces, app groups, and user sessions. WVD - Infrastructure Contributor: Allows to read and write all properties of a WVD infrastructure but doesn’t allow to delete resources: Host pools, session hosts, workspaces, app groups, and user sessions. WVD - Infrastructure Administrator: Allows to read and write all properties of a WVD infrastructure and allows to delete resources: Host pools, session hosts, workspaces, app groups, and user sessions. WVD - Infrastructure Administrator &amp; VM Manager: Allows to read and write all properties of a WVD infrastructure and allows to delete resources: Host pools, session hosts, workspaces, app groups, and user sessions. Additionally, the power state of all hosts and VMs can be changed. WVD - Template and Session Host Administrator: Allows to create/modify/delete Virtual Machines, images, rollout new session hosts into host pools, and attach them to a vnet. WVD - Full Administrator: Allows to create/modify/delete Virtual Machines, images, rollout new session hosts into host pools, attach them to a vnet, and all permissions from the role ‘WVD - Infrastructure Administrator &amp; VM Manager’. I’m happy about feedback and give me a ping if you want to have the ‘Microsoft. Authorization/roleAssignments/write’ inside the contributor roles (but that doesn’t prevent users from getting higher permissions on the resource group). Feel free to roll out these WVD roles into your own subscription (ignore the location, the roles are available in the subscription independent from the location - or take a look into the deployment script): "
    }, {
    "id": 15,
    "url": "/Shadow-a-WVD-user-with-least-privileges/",
    "title": "Shadow a WVD user with least privileges",
    "body": "2020/08/24 - WVD allows local administrators to shadow user sessions. You can do this easily with WVDAdmin or using the command-line like this: >mstsc /v:WVD-DESIGN-404 /control /shadow:2 /promptIn most companies, a help desk agent supports users using applications. For that, local admin privileges are not necessary and not recommended. To allow help desk agents shadowing users in WVD, you have to give these users (or better: a user group) only the needed permission. To do this, execute the following command in an administrative cmd: wmic /namespace:\\root\CIMV2\TerminalServices PATH Win32_TSPermissionsSetting WHERE (TerminalName like 'RDP-sxs%') CALL AddAccount 'ITPROCLOUD\ADM_WVD-Shadowing',2This gives the users of the group ITPROCLOUD\ADM_WVD-Shadowing the needed permission directly on the RDP-SXS stack (you need to reboot the session host). I would run this command on the template VM / golden Image to have this permission configured for each session host. Alternatively, you can run this in a computer-logon script for existing session hosts. Hint: You can reset this setting with: wmic /namespace:\\root\CIMV2\TerminalServices PATH Win32_TSPermissionsSetting WHERE (TerminalName like 'RDP-sxs%') CALL RestoreDefaultsTake a look how shadowing a user session with WVDAdmin looks like: https://twitter. com/i/status/1229472041423732736 "
    }, {
    "id": 16,
    "url": "/Sysprep-and-WVD-and-UWP/",
    "title": "What's wrong with Windows 10 and UWP and Sysprep?",
    "body": "2020/07/28 - I’m working in the WVD area and often create golden images to deploy session hosts for WVD - mainly based on Windows 10 Enterprise multi-session. To do that, I create a template VM in Azure based on Windows 10, joined it to the domain, install updates and applications, and create an image based on that VM. To make my life easier, I use WVDAdmin to generate the template and rolling it out later - but this is independent of the issue with Sysprep. One step of creating an image is to Sysprep the template image. I - or WVDAdmin is doing that - by running: sysprep. exe /generalize /oobe /shutdown /mode:vmSometimes I run into an issue, and Sysprep stops work with an error message: Digging into the log file show the issue: Error: Package XXXXXXX was installed for a user, but not provisioned for all users. The package various. Sometimes I got a part of a language pack or other internal app packages. To run into the problem with certainty, install an app from the Windows Store. Let’s find out what happens, for doing that I installed different applications from the Windows Store into the VM and tried to Sysprep the VM. The first package blocking Sysprep was in this test “5319275A. WhatsAppDesktop_2. 2027. 10. 0_x64__cv1g1gvanyjgm” To get details of the package run the following PowerShell script with administrative privileges: Get-AppxPackage -AllUsers | ? {$_. packagefullname. contains('5319275A. WhatsAppDesktop_2. 2027. 10. 0_x64__cv1g1gvanyjgm')}The returned object shows that this package is only installed for the local administrator (installing the apps from the Windows Store). The user querying this data (mm-admin) doesn’t have this package installed. Okay. Appx packages from the store are personnel and not shared with all users on a VM (to install appx packages for all users, you have to sideload the packages with DISM. exe). So I tried to remove this app from all users:_ Get-AppxPackage -AllUsers | ? {$_. packagefullname. contains('5319275A. WhatsAppDesktop_2. 2027. 10. 0_x64__cv1g1gvanyjgm')} | Remove-AppxPackage -AllUsersOk. Sysprep again. The next issue occurs: Sysprep has the same problem with NetFlix - installed only for one user of the VM. Instead of removing the packages by trial and error, I found another way: Teach Sysprep to ignore this behavior. I guess it’s not a problem having an appx package assigned to only one user - even if it and administrative user. I figured out that Sysprep uses an XML file with a set of rules preparing a VM. The rule-set for generalizing an image is stored in &quot;C:\windows\System32\sysprep\ActionFiles\Generalize. xml&quot; To ignore the installed or update AppX package remove the following lines and save Generalize. xml (you have to take ownership of the file and give yourself permission to do that): &lt;sysprepOrder order=&quot;0x1A00&quot;&gt;&lt;/sysprepOrder&gt;&lt;sysprepValidate methodName=&quot;SysprepGeneralizeValidate&quot; moduleName=&quot;$(runtime. system32)\AppxSysprep. dll&quot;&gt;&lt;/sysprepValidate&gt;&lt;sysprepModule methodName=&quot;SysprepGeneralize&quot; moduleName=&quot;$(runtime. system32)\AppxSysprep. dll&quot;&gt;&lt;/sysprepModule&gt;&lt;/imaging&gt;&lt;imaging exclude=&quot;&quot;&gt;&lt;assemblyIdentity name=&quot;Microsoft-Windows-SecureBoot-FirmwareUpdate&quot; version=&quot;10. 0. 19041. 1&quot; publicKeyToken=&quot;31bf3856ad364e35&quot; processorArchitecture=&quot;amd64&quot; versionScope=&quot;NonSxS&quot;&gt;&lt;/assemblyIdentity&gt; After that Sysprep runs without an issue. Rolling out a session host based on the new image works, and even the user could logon without a problem (and yes: they don’t have the Store apps from the local admin - as expected). Maybe there are some smarter ways to handle UWP and Sysprep (if you know one - let me know it, too). But this solves an issue creating or updating an image for WVD based on a template VM (golden image approach). "
    }, {
    "id": 17,
    "url": "/Azure-Global-Bootcamp-2020/",
    "title": "PolarConf 2019 - Building own solutions whit Azure Monitor ",
    "body": "2020/05/25 - [Azure Global Bootcamp - WVD - How to enjoy perfect published apps and desktops. pdf](. . /assets/files/WVD - How to enjoy perfect published apps and desktops. pdf) "
    }, {
    "id": 18,
    "url": "/Windows-Virtual-Desktop-Monitoring-the-Spring-backend/",
    "title": "Windows Virtual Desktop - Monitoring the Spring Backend - WVD",
    "body": "2020/05/05 - The long await update from WVD is public. It comes with a full ARM integration and is natively useable in the Azure Portal. Some things changed from the Fall to Spring update, and that’s include monitoring. In this post, I’m focused on monitoring the WVD backend and not monitoring the sessions, applications, session host performance, latency, etc. To exactly monitoring these metrics, check out the solution “Azure Monitor for WVD” which works for Fall and the Spring update - and the new version comes with great Azure workbooks to additionally visualize data by host pool. The Fall update writes logs to Azure Monitor / Log Analytics as custom logs. There is a really good blog post about this. The Spring update writes logs to Log Analytics as well, but they have a different name and schema. To enable logging the backend, you have to enable the diagnostic settings on all involved resources: WorkspaceHost PoolApp GroupMake sure that you select all logs and select your Log Analytics workspace (if you use sepago’s “Azure Monitor for WVD” use the same Log Analytics workspace for the backend logging) ![Registry with values](. . \assets\images\Azure Monitor for WVD\Blog-01-05. png) If you have done this for all resources, the WVD send logs to the selected workspace. Keep in mind that writing the first entries can take up to 20 minutes to build the data schema initially. After a while, you should have log data in your Log Analytics workspace: ![Registry with values](. . \assets\images\Azure Monitor for WVD\Blog-01-06. png) You can see the following logs (tables): WVDCheckpointsIntermediate steps while establishing and running a connectionWVDConnectionsStart/End of connectionsWVDErrorsErrors while establishing a connection, failures during the administration, failures getting feed informationsWVDHostRegistrationsAbout session host registration to host poolsWVDManagementAdministration logThe logs are internally connectable with their correlation id you have in each log. Let’s start digging some data: Open Log Analytics an go to “Logs” and run your queries based on the KUSTO query language. Count of brokered sessions by state: WVDConnections | where State =~ &quot;Started&quot; and Type =~&quot;WVDConnections&quot; | extend CState=iff(SessionHostOSVersion==&quot;&lt;&gt;&quot;,&quot;Failure&quot;,&quot;Success&quot;) | summarize Count=count() by State=CState| render piechart ![Registry with values](. . \assets\images\Azure Monitor for WVD\Blog-01-02. png) Failed connections: WVDConnections | where State =~ &quot;Started&quot; and Type =~&quot;WVDConnections&quot; | extend Multi=split(_ResourceId, &quot;/&quot;) | extend CState=iff(SessionHostOSVersion==&quot;&lt;&gt;&quot;,&quot;Failure&quot;,&quot;Success&quot;)| where CState=~&quot;Failure&quot; | project TimeStamp=TimeGenerated, UserName, ResourceGroup=Multi[4], HostPool=Multi[8],ResourceAlias, SessionHost=SessionHostName, ClientOS=ClientOS, ClientWvdVersion=ClientVersion, CorrelationId| order by TimeStamp descFailed connection with details: WVDConnections | where State =~ &quot;Started&quot; and Type =~&quot;WVDConnections&quot; | extend Multi=split(_ResourceId, &quot;/&quot;) | extend CState=iff(SessionHostOSVersion==&quot;&lt;&gt;&quot;,&quot;Failure&quot;,&quot;Success&quot;)| where CState =~&quot;Failure&quot;| order by TimeGenerated desc| where State =~ &quot;Started&quot; | extend Multi=split(_ResourceId, &quot;/&quot;) | project ResourceAlias, ResourceGroup=Multi[4], HostPool=Multi[8], SessionHostName ,UserName ,CState=iff(SessionHostOSVersion==&quot;&lt;&gt;&quot;,&quot;Failure&quot;,&quot;Success&quot;), CorrelationId, TimeGenerated| join kind= leftouter (  WVDErrors ) on CorrelationId| extend DurationFromLogon=datetime_diff(&quot;Second&quot;,TimeGenerated1,TimeGenerated)| project TimeStamp=TimeGenerated, DurationFromLogon, UserName, ResourceAlias ,SessionHost=SessionHostName ,Source ,CodeSymbolic , ErrorMessage=Message, ErrorCode=Code, ErrorSource=Source ,ServiceError, CorrelationId| order by TimeStamp descSession logon duration by host pool: WVDConnections | where Type =~&quot;WVDConnections&quot; and State =~ &quot;Started&quot; | extend Multi=split(_ResourceId, &quot;/&quot;) | project ResourceAlias, HostPool=toupper(HP=Multi[8]), SessionHostName , UserName ,CState=iff(SessionHostOSVersion==&quot;&lt;&gt;&quot;,&quot;Failure&quot;,&quot;Success&quot;), CorrelationId, TimeGenerated, ResourceGroup=Multi[4], DesktopGroup_s=toupper(strcat(RG=Multi[4],&quot;. &quot;, HP=Multi[8])) | join kind= leftouter (  WVDCheckpoints ) on CorrelationId| extend DurationFromLogon=datetime_diff(&quot;Second&quot;,TimeGenerated1,TimeGenerated)| where Name=~&quot;RdpStackLogon&quot; | project UserName, ResourceGroup, DesktopGroup_s,SessionHost=SessionHostName, TimeStamp=TimeGenerated1, DurationFromLogon| summarize DurationInSeconds=avg(DurationFromLogon) by HostPool=DesktopGroup_s | render columnchart kind=unstacked ![Registry with values](. . \assets\images\Azure Monitor for WVD\Blog-01-01. png) Session logon duration by user (desc): >WVDConnections | where Type =~&quot;WVDConnections&quot; and State =~ &quot;Started&quot; | extend Multi=split(_ResourceId, &quot;/&quot;) | project ResourceAlias, HostPool=toupper(HP=Multi[8]), SessionHostName , UserName ,CState=iff(SessionHostOSVersion==&quot;&lt;&gt;&quot;,&quot;Failure&quot;,&quot;Success&quot;), CorrelationId, TimeGenerated, ResourceGroup=Multi[4], DesktopGroup_s=toupper(strcat(RG=Multi[4],&quot;. &quot;, HP=Multi[8])) | join kind= leftouter (  WVDCheckpoints ) on CorrelationId| extend DurationFromLogon=datetime_diff(&quot;Second&quot;,TimeGenerated1,TimeGenerated)| where Name=~&quot;RdpStackLogon&quot; | project UserName, ResourceGroup, DesktopGroup_s,SessionHost=SessionHostName, TimeStamp=TimeGenerated1, DurationFromLogon| summarize DurationInSeconds=avg(DurationFromLogon) by HostPool=UserName| order by DurationInSeconds desc Administrative activities over time: WVDManagement | summarize Count=count() by bin(TimeGenerated,15)| render scatterchart ![Registry with values](. . \assets\images\Azure Monitor for WVD\Blog-01-03. png) Good to know: Sepago’s commercial “Azure Monitor for WVD” brings the ready to use Azure workbooks for the session and app monitoring and workbooks for the WVD backend: ![Registry with values](. . \assets\images\Azure Monitor for WVD\Blog-01-07. png) "
    }, {
    "id": 19,
    "url": "/Windows-Virtual-Desktop-Migrate-from-Fall-to-Spring/",
    "title": "Migrate Windows Virtual Desktop Host Pools from Fall to Spring Release - WVD",
    "body": "2020/05/04 - The long await update from WVD is public. It comes with a full ARM integration and is natively useable in the Azure Portal. The change from Fall to Spring (the name of both releases) cames without a build-in migration solution right now. You can rebuild your host pools and app groups and manually join your existing session hosts into the new once. With WVDAdmin I added two features to do that directly from the GUI: Migrate a host pool to the Spring update: Creates a new host pool with the same properties as an existing host pool in the Fall updateMove session hosts to another host pool*: Works in each direction and from host pool to host poll in the same version (you can use this additionally to remove an assigned user from a session host). Note: If you are using WVDAdmin V1. 5. 5 or lower (v1. 5. 6 and higher downloads the files from Microsoft if internet access is not blogged): You can only move session hosts from host pool to host pool if you built the session host with WVDAdmin. If not, and you want to use this function with your other deployed session create a folder “ITPC-WVD-PostCustomizing” in C:\ and copy the RDAgent files into this folder and rename the files: Microsoft. RDInfra. RDAgent. msi (rename the file)Microsoft. RDInfra. RDAgentBootLoader. msi (rename the file)Make sure that you rename the files to fit the list above (without version numbers).  But first: If you are new to WVD Spring update and have never used it before in your subscription, you have to register the service provider Microsoft. DesktopVirtualization (one-time process). You must be the owner of this subscription to do this. Go to your subscription -&gt; Resource providers -&gt; search for “Microsoft. DesktopVirtualization” and click register: The migration process: The easiest way to migrate a Host Pool from Fall to Spring is by using WVDAdmin. If you have not WVDAdmin before, check out this post . Right-click your existing host pool and click: Migrate Host Pool settings to WVD Spring UpdateSelect a target subscription and resource group (note: be sure not to mix different host pools in one resource group with app groups having the same name. If you do this, you will see that the migration process cannot migrate this app groups)Select a region: The region saved the meta-data and is independent of the region of your session hosts. There are only limited regions todayEnter a name for your new Spring host poolLogoff all usersRight-click a session host and click “Change host pool” (read my note above, if this host was not created with WVDAdmin)Select the target host pool. Spring update host pools are tagged with a ²Check “Keep user assignment” if you migrate aa assigned session hosts and want to keep the assignment. If you uncheck this, the user assignment will be repealedRepeat the step “Right-click your existing host pool and click: Migrate Host Pool settings to WVD Spring Update” to re-create the icons for your applications. This can only be done if one session host is onlineGive the right user groups permission to the app groups: Click the app group(s) and click the button “Users and groups assignments” and start typing the name of the group(s). Note: I don’t migrate the user permission from the fall update believing that you won’t to add groups instead of single usersCreate a WorkspaceCreate a Workspace right-clicking the workspace note. Create a workspace in the same region as your new host poolRight-click the workspace and add/link the app groups you have createdMove more session hosts to the new host poolRight-click the session host note and select “Change host pool”After that, you should see your resources in the native RD client and in the HTML web site which has a new URL: https://rdweb. wvd. microsoft. com/arm/webclient Debugging/notes:: If you are using WVDAdmin V1. 5. 5 or lower (v1. 5. 6 and higher downloads the files from Microsoft if internet access is not blogged): Moving session host works with host created with WVDAdmin or if you create a folder “ITPC-WVD-PostCustomizing”. Copy the files into it: Microsoft. RDInfra. RDAgent. msi (rename the file) Microsoft. RDInfra. RDAgentBootLoader. msi (rename the file) You cannot have app groups with from different host pools with the same name in one resource group Register Microsoft. DesktopVirtualization service provider The service principal of WVDAdmin needs owner permission to the resource groups containing the app groups to add/remove users The HTML5 client has a new URL: https://rdweb. wvd. microsoft. com/arm/webclient If you “lost” a session host you can add them manually to a host pool by doing: Login to the VMUninstall the RD agent and bootloaderInstall the bootloaderinstall the agent and copy the registration key for the target host pool into the installation screenI record a short video showing the migration process: More details and download: WVDAdmin And get additional information from Freek Berson Official announcement: https://www. microsoft. com/en-us/microsoft-365/blog/2020/04/30/enable-remote-work-faster-new-windows-virtual-desktop-capabilities/ "
    }, {
    "id": 20,
    "url": "/Windows-Virtual-Desktop-Spring-Update,-Spring-Release/",
    "title": "Windows Virtual Desktop - Spring Release / Spring Update with WVDAdmin",
    "body": "2020/04/30 - Windows Virtual Desktop - Spring Release / Spring Update goes public today. I’m tremendously happy about that while this is the next big step that we have eagerly awaited. The spring release gives us some feature and changes that make it even easier to deploy apps and desktops to users: Add groups instead of users to desktops and appsFull integration of the administration of WVD in the Azure PortalUsing a native ARM deployment instead of the WVD tenant APILinking app groups and desktops into workspacesand a lot of more thingsEven the administration of WVD was missing before. This was one reason to build WVDAdmin. I was often asked in the past if WVDAdmin will be unnecessary after the spring release of WVD. My answer: Sure, for the administration, WVDAdmin will not be that important anymore, but some features still add value. That’s why I decided months ago to develop WVDAdmin further and also prepare it for the “Spring Release”. So I am proud to announce that WVDAdmin is ready for the Spring Release starting with the already available version 1. 5. To enable the Spring Release feature set a registry key (the current version will have this enabled by default): HKCU\Software\ITProCloud\WVDAdmin(Reg_DWord) &quot;FeatureSet&quot; = 1 First, register the new service provide Microsoft. DesktopVirtualization on your Azure subscription (one-time process). You must be owner of this subscription to do this. Go to your subscription -&gt; Resource providers -&gt; search for “Microsoft. DesktopVirtualization” and click register: If you restart WVDAdmin you will see the new note “WVD V2” which displays your resources in the Spring Release. Please make sure that your service principal has the right permission to create and administrate your resources (the sp needs owner permission to the resource group containing your host pool, app groups, … to assign users and groups).  But what can you do with WVDAdmin compared to the portal integration? You can (e. g. ): Administrate all resources with a Windows GUICreate “golden images” from template/master VMsRollout several session hosts into differents host pools (in both WVD releases)Re-use you created WVDAdmin images without any changeHigher flexibility rolling out new session hosts in different ways (you can use different VMSizes and images in one host pool)Easy to use user administration to send messages, logoff, disconnect or shadowing users over the full environment (filterable)…From an architectural perspective, the “Spring Update” is really close to the previews release. But there are a few differences: WVD tenant and tenant groups are no longer used“Workspaces” summarize multiple apps and desktop groups. These apps and desktops are shown in the client grouped by workspacesAll resources like host pools, app groups are ARM resources in the Azure portal. App groups must be in the same region as the host poolsA Workspace can group apps and desktop groups in the same regionThe regions of the session hosts are completely independent of the regions of the host pools (which is great)Today you have only a few regions to roll out host pools and workspaces (which is not so important because you can rollout the  session hosts in any region)And you can assign groups to apps and desktops… Check out my video rolling out session hosts from an existing WVD image into the spring update (sorry for the bad sound - I will change this later): More details and download: WVDAdmin And get additional information from Freek Berson Official announcement: https://www. microsoft. com/en-us/microsoft-365/blog/2020/04/30/enable-remote-work-faster-new-windows-virtual-desktop-capabilities/ "
    }, {
    "id": 21,
    "url": "/Windows-Virtual-Desktop-Add-Users-and-Groups-to-WVD/",
    "title": "Using Azure AD groups to assign users to Windows Virtual Desktop (WVD)",
    "body": "2020/04/07 - Today (early April), it’s not possible to join groups to application groups or desktop in Windows Virtual Desktop. Users have to be assigned directly with their user principal name (UPN). With WVDAdmin, you can do this by entering or copying the UPN’s into a text field. From Version 1. 4. 7 you have another option: You can now browse the Azure AD for users AND groups to add them.  If you have added users and groups with the new function, WVDAdmin will fill out the text field with the UPN’s of the selected users and group members (only members, no external accounts).  This function doesn’t resolve the missing function in the WVD but can give you an easier way to handle this until the function is integrated into WVD itself. Requirement: The service principal needs permission to browse the Azure Active directory. To do this go to the Azure Portal -&gt; Active Directory -&gt; App Registration -&gt; Select your Service Principal -&gt; API PermissionsAdd the permission “Azure Active Directory Graph” -&gt; Application Permission -&gt; Directory. Read. All To be read for the WVD Spring Update you have to give the service principal access to the Graph API: Add the permission “Microsoft Graph” -&gt; Application Permission -&gt; Directory. Read. All To consent the permission and administrator of Azure AD have to grant this: "
    }, {
    "id": 22,
    "url": "/Windows-Virtual-Desktop-Admin-Preview/",
    "title": "WVD Admin - A native administration Gui for Windows Virtual Desktop - Preview Version",
    "body": "2020/02/26 - Feel free to use it and download the 64-bit Windows application “WVD Admin Preview” from here: WVDAdmin-Preview. msi XML Update file: WVDAdmin. xml "
    }, {
    "id": 23,
    "url": "/Windows-Virtual-Desktop-Language-Packs-Detecting-Host-Pool-and-Tenant-Name/",
    "title": "Windows Virtual Desktop and Language Packs - Detecting Host Pool and Tenant Name issue",
    "body": "2020/02/23 - Language packs on Windows sometimes cause some issues or strange behaviors to some applications. One problem I can reproduce is the impact of the RDAgent from Microsoft - the agent running on a WVD session host, which makes the connection to the WVD backend. If no language pack is installed (or not set as the system language), the RDAgent writes some information to the registry naming the Host Pool, Tenant, and more. You can find this data in HKLM:\SOFTWARE\Microsoft\RDMonitoringAgent The RDAgent writes this data at least if the session host at the start: If you have a clean Windows Virtual Machine with an installed and for the whole system activated language pack and if you then install the RDAgent, this information is never written to the registry (the WVD function itself is working as expected).  If you use this Virtual Machine - or session hosts you built based on this VM - you can no longer detect the WVD-tenant, host pool name from the registry. These also affect my tools using this information: Azure Monitor for WVDAzure Autoscale for WVD (aka “Project MySmartScale”, WorkerAgent)They reference the data to an “unknown” or “staging” host pool path (host pool path is “tenant. hostpool” name). This behavior can lead to misinterpretations. To work-around this peculiar behavior with language packs, I added a new function to both solutions. If the tenant and host pool name can not be discovered by using the registry keys, the agents read the tag “WVD. Path” to get the names. The value in WVD. Path must be in the format: TenantName\TenantGroupName\HostPoolName: The new agents are ready to download: Azure Monitor for WVDAzure Autoscale for WVD (aka “Project MySmartScale”, WorkerAgent)Additionally, WVDAdmin (from version 1. 3. 6) will tag new distributed session hosts automatically. "
    }, {
    "id": 24,
    "url": "/Windows-Virtual-Desktop-Azure-Starter-for-WVD/",
    "title": "Windows Virtual Desktop - Azure Starter for WVD",
    "body": "2020/02/09 - This month I started to build my fourth tool around Microsoft Windows Virtual Desktop. This new one, called “Azure Starter for WVD” is a self-service portal for users using WVD. In this portal, which is a web app with Azure AD authentication, users can start and stop (deallocate) their personal assigned session host - which in this case are VDIs. The user doesn’t need access nor permission to the Azure portal or the virtual machines. The authentication of the web app handles the action itself.  The newest implementation adds a new feature: You can configure that running VMs are deallocated if no user is logged in. That handles in combination with a group policy that personally assigned session hosts to go down after a specific time of idling. A session host can be assigned to a specific user using my admin GUI for WVD: WVDAdmin Go to the documentation and deploy this free solution to Azure: https://github. com/MarcelMeurer/Azure-Starter-for-WVD "
    }, {
    "id": 25,
    "url": "/Windows-Virtual-Desktop-Admin-for-2-tenant-mode/",
    "title": "Using WVDAdmin for Windows Virtual Desktop in 2-AAD-Environment (Microsoft Demo Case)",
    "body": "2020/02/07 - Using Azure Starter for Windows Virtual Desktop in 2-AAD-Environment (Microsoft Demo Case)Usually, the WVD tenant and the resources (sessions hosts) are in the same AAD tenant. If you have two Azure AD tenant, you can use WVDAdmin with a second service principal to access the session hosts. Example: Azure AD 1 - “my-msft. onMicrosoft. com”Your personal AAD where you have your users, an AD-Controller, AD-Connect (or AD domain services), and other resources. In this AAD you have deployed your WVD tenant. Azure AD 2 - “microsoft. onMicrosoft. com”You have no high-level permission to the AAD because it’s own by your company and shared with many other users/professionals. In this AAD, you have a subscription (AIR) containing your session hosts. Create the first service principal in “my-msft. onMicrosoft. com”. Configure this service principal as described in the primary guide - except permitting to the resource group containing the session hosts and the vnet (these are in the other tenant). Use the data of this service principal in the welcom dialog of WVDAdmin. Create the second service principal in “microsoft. onMicrosoft. com”. Give the service principal contributor permission to the resource group containing the session hosts and to the vnet for the session host. Open the registry and navigate to HKEY_CURRENT_USER\Software\ITProCloud\WVDAdmin. Add three string value to configure the service principal to access the resource groups AzResAlternativeTenantIdAzResAlternativeAppIdAzResAlternativeAppSecret If you use another tenant group name as “Default Tenant Group” add another string “TenantGroupName” and set your tenant group name. This solution is supported from the current version 1. 3. 3 Read more and download WVDAdmin on the main page "
    }, {
    "id": 26,
    "url": "/Windows-Virtual-Desktop-Windows-Virtual-Desktop-Administration-for-CSP-and-Consulting-Partners/",
    "title": "WVD Admin - Windows Virtual Desktop Administration for CSP and Consulting Partners",
    "body": "2020/01/28 - Windows Virtual Desktop Administration for CSP and Consulting PartnersLast year I released my windows-based GUI for administrating WVD to the community called WVDAdmin. I had a bunch of updates to share more features. This week I will release version 1. 3. 0 with will add another feature, especially for providers and consulting companies. From version 1. 3. 0 WVDAdmin will support a multi-AAD-tenancy mode allowing to switch the Azure AD tenant very easily.  To enable the multi-AAD-tenancy mode, you must set a registry key. Add the following dword32 to your registry: >HKEY_CURRENT_USER\Software\ITProCloud\WVDAdminName:	AadMultiTenantType:	DWORD32Value:	1 (or 0 to disable this mode) If you start WVDAdmin with this setting, a drop-down list will be visible at the welcome screen (see above). If you save a new service principal configuration, it happens to the drop-down list with the friendly name. All other settings for the image creation or rollout of new session hosts are saved to the context of the selected AAD tenant. The authentication settings and other settings are saved in different trees in the registry starting from HKEY_CURRENT_USER\Software\ITProCloud\WVDAdmin\AadMultiTenantIf you had already used WVDAdmin in the “normal” mode, you could copy the settings from the root of the registry path to the new path for your AAD tenant. To delete a no longer needed AAD-tenant in WVDAdmin, remove the registry key of this one.  Don’t change the AAD tenant while an operation is in progress. This could result in an error. If you change the AAD tenant, click “Reload all” to read the configuration for the new tenant. The AAD multi-tenancy mode helps a lot if you have (like me) multiple clients you are working with. Feel free to use it and download the 64-bit Windows application “WVD Admin” from here: WVDAdmin Preview Read the original blog post about WVDAdmin here: https://blog. itprocloud. de/Windows-Virtual-Desktop-Admin "
    }, {
    "id": 27,
    "url": "/Automatic-MSIX-app-attach-scripts/",
    "title": "Automatic MSIX App Attach script for Windows Virtual Desktop",
    "body": "2019/12/01 - Automatic MSIX App Attach script for WVDMicrosoft provides a preview of MSIX app attach for Windows Virtual desktop. MSIX app attach gives you the possibility to only have a few amounts of images and connect your application to them - without installing. That sounds a little bit like App-V, and from a user perspective, this is slightly comparable: You cannot see the application in the file system from outside the app. If you open the app and if you browse to the application folder, you can see this folder. The attaching and links in the start menu “feels” like the use of modern apps from the marketplace. And indeed: The application links in the start menu didn’t refer to the exe-files in the program folder. Configuration of the MSIX packages and assignments: If you are in the Windows Insider program, you can test MSIX app attach in a WVD environment. To do this go to the web site https://docs. microsoft. com/en-us/azure/virtual-desktop/app-attach which explains the process of preparing your Windows insider image and how to stage and register MSIX apps for session hosts und users. If you convert legacy apps to MSIX I recommend the YouTube video of @MSAzureAcademy: https://www. youtube. com/watch?v=6kkPLFgPaN8 Microsoft gives you example scripts to stage, un-stage, register, and un-register MSIX apps. For each app, you have to build these four scripts. While the scrips only differ in a few points, I decided to create one script which does the necessary things for all apps I want to provide. The result is one folder containing a single PowerShell script and a configuration file for my MSIX apps. The structure of the configuration is JSON: {   apps :[  { ​    vhdSrc : \\\\ads01\\Configuration\\WVD\\MSIX\\NotepadPP. vhd ,​    volumeGuid : 9c371391-0000-0000-0000-010000000000 ,​    packageName : notepadpp_7. 8. 1. 0_x64__cqx7y23m1rjgy ,​    parentFolder : MSIX-Apps ,​    sessionTarget :{ ​    hostPools :[ ​     MSIX-Builder ​   ],​    userGroups :[ ​     SW_WVD_All ,​     SW_WVD_NotePadPP ​   ]​   }  },  { ​    vhdSrc : \\\\ads01\\Configuration\\WVD\\MSIX\\FileZilla. vhd ,​    volumeGuid : 2ac99dec-0000-0000-0000-010000000000 ,​    packageName : filezilla_3. 45. 1. 0_x64__cqx7y23m1rjgy ,​    parentFolder : MSIX-Apps ,​    sessionTarget :{ ​    hostPools :[ ​     MSIX-Builder ​   ],​    userGroups :[ ​     SW_WVD_All ,​     SW_WVD_FileZilla ​   ]​   }  } ]}For each application, you have to define the following properties: PropertyNotevhdSrcPath to the expanded MSIX app (as vhd)volumeGuidGuid of the vhdpackageNameName of the MSIX app attach packageparentFolderRoot folder name in your vhdhostPoolsList of host pool names where the package should be applieduserGroupsList of AD groups: Members get the application linked in their start menuProviding the script to users and session hosts: Provide the script AppAttach with the configuration in a folder of a shared network drive. This folder must be readable for all users.  Refer this file by a group policy: Computer Configuration - Policies - Windows Settings - Scripts - Startup Name:    %windir%\System32\WindowsPowerShell\v1. 0\powershell. exe Parameter:  -ExecutionPolicy Unrestricted -File \\ads01\Configuration\WVD\MSIX\AppAttach. ps1 -ConfigFile \\ads01\Configuration\WVD\MSIX\AppAttach. json -Mode VmStart Computer Configuration - Policies - Windows Settings - Scripts - Shutdown Name:    %windir%\System32\WindowsPowerShell\v1. 0\powershell. exe Parameter:  -ExecutionPolicy Unrestricted -File \\ads01\Configuration\WVD\MSIX\AppAttach. ps1 -ConfigFile \\ads01\Configuration\WVD\MSIX\AppAttach. json -Mode VmShutdown User Configuration - Policies - Windows Settings - Scripts - Logon Name:    %windir%\System32\WindowsPowerShell\v1. 0\powershell. exe Parameter:  -ExecutionPolicy Unrestricted -File \\ads01\Configuration\WVD\MSIX\AppAttach. ps1 -ConfigFile \\ads01\Configuration\WVD\MSIX\AppAttach. json -Mode UserLogon User Configuration - Policies - Windows Settings - Scripts - Logoff Name:    %windir%\System32\WindowsPowerShell\v1. 0\powershell. exe Parameter:  -ExecutionPolicy Unrestricted -File \\ads01\Configuration\WVD\MSIX\AppAttach. ps1 -ConfigFile \\ads01\Configuration\WVD\MSIX\AppAttach. json -Mode UserLogoff Where \\ads01\Configuration\WVD\MSIX\ is the path to the script and \\ads01\Configuration\WVD\MSIX\AppAttach. json the JSON-configuration file. Make sure that the GPO is linked to the computer and enable loopback processing: Computer Configuration - Policies - Administrative Templates - System/Group Policy Configure user Group Policy loopback processing mode: Enable - Mode: merge.  Preparing the golden master for the session hosts: To work with MSIX and have the script do the work you have to prepare your golden image: Make sure that you have installed the right version from the insider build Double-check that you have NOT prepared your image with the command line commands described in https://docs. microsoft. com/en-us/azure/virtual-desktop/app-attach#prepare-the-vhd-image-for-azure (Disable Store auto-update and so on). It’s only for the VM concerning the converting process. Copy the PSTools https://docs. microsoft. com/en-us/sysinternals/downloads/psexec to %Windir%\System32 (you need psexec later) Give the service GPSVC the right privileges to mount images: Create a cmd-file with this content: >sc privs gpsvc SeManageVolumePrivilege/SeTcbPrivilege/SeTakeOwnershipPrivilege/SeIncreaseQuotaPrivilege/SeAssignPrimaryTokenPrivilege/SeSecurityPrivilege/SeChangeNotifyPrivilege/SeCreatePermanentPrivilege/SeShutdownPrivilege/SeLoadDriverPrivilege/SeRestorePrivilege/SeBackupPrivilege/SeCreatePagefilePrivilegeOpen an administrative cmd and execute: psexec /s cmd In this service cmd execute the cmd-file to give GPSVC the right permissions (This adds the SeManageVolumePrivilege which allows mounting of images) If you have this done, you can rollout several session hosts (or start with one for testing). If you now log on with different users, each user will see its assigned applications.  Note: If a user logoff the application will be de-registered except if the user an administrator (this will be skipped to avoid unmounting the app package). Download the script and rename it to AppAttach. ps1 "
    }, {
    "id": 28,
    "url": "/PolarConf-2019/",
    "title": "PolarConf 2019 - Building own solutions whit Azure Monitor ",
    "body": "2019/10/16 - In October I visited Finland the very first time to speak at PolarConf and I have to say: It was amazing. A great single track event over two days. It was the first conference where I had a speak with only one track. And I have to say: It’s a really good concept. No half-full tracks and missing the feeling you miss a parallel track (or simple: you have not to decide between two or more tracks). What to say about Finland: It an amazing country in the north of Europe with some touch from the Swedish and Russian cultures. It looks very clear, focused and with a sustainable mindset on the subject of environmental protection. And finally: I love the sauna culture. But back to the conference: I had the chance to talk about building own solutions with Azure Monitor. Finalize the session I put the presentation I held here: [PolarConf 2019 - Build your own Azure Monitor solution. pdf](. . /assets/files/PolarConf 2019 - Build your own Azure Monitor solution. pdf) Site information: One part of my presentation was to show the Tweet count with #PolarConf with Azure Monitor. Thanks to @techmike2kx ![PolarConf Tweets](. . /assets/images/PolarConf Tweets. png) https://polarconf. fi/ "
    }, {
    "id": 29,
    "url": "/Anouncing-Project-MySmartScale/",
    "title": "Announcing the community version of "Project MySmartScale"",
    "body": "2019/10/09 - Windows Virtual Desktop is released and gateways around the world are available - even in Europe which cause in a low latency - perfect. Windows Virtual Desktop supplement the current solutions on the virtualization market like Citrix Application Virtualization and VMware Horizon. It’s focused on running as-a-service in the Azure cloud and it’s very cost-efficient compared to the other vendors. Of course: The tools and the administrative capabilities for WVD differ from the others - till now. But there is still a niche that is not yet filled - until today. The VMs are running permanently even if no users using the environment which leads to avoidable costs. But there is a solution: Announcement of the community version of Project MySmartScale: “Project MySmartScale” starts and smartly deallocates session hosts for WVD. It learns about the user’s behavior and can actively logoff unused sessions at the right time to save compute power – and money. The solution is 100% based on Azure platform services and fits into the whole “as-a-service” story. But starting and stopping session hosts is not as easy as it sounds: To have the right amount of session hosts ready before users try to login in the morning you must predict the user behavior. And this is what “Project MySmartScale” does: Predict the logon count over time based on historical dataPredict the logon count over time based on the acceleration of logonsStart the sessions hosts a few minutes before they are neededStop/deallocates unused session hosts if they are not needed… Today I make this solution available via GitHub. You can easily deploy the solution into your Azure subscription and start to scale your VWD environment based on the usage. This can save up to 60-70% of the costs compared to a 24/7 pay-as-you-go model. Side-Note: It also scales a Citrix XenApp / Virtual Apps and Desktop environment in Azure without using Citrix Cloud (for IaaS). The free community version supports up to 5 VMs. Feel free to use it: https://github. com/MarcelMeurer/Project-MySmartScale "
    }, {
    "id": 30,
    "url": "/Workshop-Azure-Monitor-Examples/",
    "title": "Workshop Azure Monitor - Lessons",
    "body": "2019/09/21 - To get practice in using Azure Monitor, I have prepared some examples. These examples can be recreated with a little PowerShell. I have prepared more complex program parts. These can be found in the “Tools” folder. Finished solutions are stored in the folder “Samples”. GitHub: https://github. com/MarcelMeurer/Workshop-AzureMonitor In the Tools folder there are the following scripts:: . /Add-AzureMonitorData. ps1 -WorpspaceId &lt;WorkSpaceId&gt; -WorpspaceKey &lt;WorpspaceKey&gt; -LogTypeName &lt;LogTypeName&gt; [-TimeStampField &lt;TimeStampField&gt;] -JsonData &lt;JsonData&gt;Send jsonData to the Log Analytics workspace into the given LogTyeName. TimeStampField is not mandatory. If given, it must be the name of the field containing the timestamp of each data set. Missions: Store information about the running processes from your computer: Collect the process information from your computer each 30 seconds and send these data to your Log Analytics workspace. Use PowerShell to automate this mission. Select an app and use this app to “overload” your CPU. If data are visible in Log Analytics, build a custom dashboard by using “Log” to query the data. Find out: Count of distinct processesAverage CPU load over time (all processes). Render a time chartRender a time chart for the app you used to overload the CPUSome useful PowerShell commands: #Get cpu consumption by process(Get-Counter  \process(*)\% Processor Time ). CounterSamples#Convert objects to $json=$object | ConvertTo-Json Store temperature data for multiple cities: Collect data from OpenWeatherMap for three different cities each 30 seconds. Send the data to your Log Analytics workspace using Add-AzureMonitorData. ps1. Use PowerShell to automate this mission. If data are visible in Log Analytics, build a custom dashboard using the View Designer within Log Analytics. Build: One overview tile showing the number of the different citiesTwo dashboards showing the temperature and humidity as a chart and as a list per cityConnect PowerBi Dekstop to your data: Display Line Charts and use a selector/filter for the cities (drop down field)Hints: Collect data from OpenWeatherMap https://openweathermap. org/Create an account and api keyTest your key (it can take some minutes):https://api. openweathermap. org/data/2. 5/weather?q=Bonn&amp;APIKEY=xxxxxxxSome useful PowerShell commands: #Endless-loopdo {  } while ($true)#Sleep $n secondssleep $n #make a http requestInvoke-WebRequest -Uri $uri -Method GET -ContentType “application/json” Build your own log-writer function: Build a log-writer function for your own PowerShell scripts using Log Analytics. There are some request to your solution: Have the following columns:TimeStamp (as TimeGeneratedField)Serverity (Debug|Information|Warning|Error)Message (Text)ScriptName (Name of the script using your function)"
    }, {
    "id": 31,
    "url": "/Speaking-update/",
    "title": "On the road - My next speaking engagements",
    "body": "2019/09/07 - I’m happy to be a part of a great community.  On my journey, I have the possibility to speak at some conferences, meetups and other events. And I loved it. Especially, if I can talk about Azure, IoT, Machine Learning, AI, Azure Monitor, etc. Maybe we will meet personally at one of the next events: "
    }, {
    "id": 32,
    "url": "/CDC-Germany-RDS-&-Windows-Virtual-Desktop-Desktops-in-2019/",
    "title": "CDC Germany: RDS and Windows Virtual Desktop – Desktops in the year 2019 and beyond",
    "body": "2019/05/23 - From 21. to 22. April 2019 the annual Cloud and Datacenter Conference took place in Hanau/Frankfurt in Germany. It’s one of my favorite community events in Germany. This year I was allowed to contribute something to RDS in Windows Server 2019 and Windows Virtual Desktop – including Windows 10 Multi Session Host and FSLogix (an awesome combination). I published my slides to slideshare. net:https://de. slideshare. net/MarcelMeurer/rds-windows-virtual-desktop-desktop-in-2019 The demos are also available via Youtube:: Windows Virtual Desktop - Login to a shared Windows 10 Multi Session Host: https://youtu. be/rgsaQf3hmHw Windows Virtual Desktop - Update the template VM: https://youtu. be/YqrEm3EhbVY Windows Virtual Desktop - Build a new Image from a template VM: https://youtu. be/MOuH482A1co Windows Virtual Desktop - Deploy a VM from a template via PowerShell: https://youtu. be/U9zxyk_HuAM Windows Virtual Desktop - Deploy a Scale Set from an image, re-scale, Azure Monitor: https://youtu. be/_l5P_JeQANM Fist published on: https://www. sepago. de/blog/cdc-germany-rds-windows-virtual-desktop-desktops-in-2019/ "
    }, {
    "id": 33,
    "url": "/Publish-your-solution-to-the-Azure-Marketplace/",
    "title": "Publish your solution to the Azure Marketplace",
    "body": "2019/03/25 - Publishing own solutions to the Azure Marketplace seems to be very easy by using the documentation on https://docs. microsoft. com/en-us/azure/marketplace/marketplace-publishers-guide. To avoid any pitfalls I wrote down some insights about my first approach. In this blog, I will focus on “Azure Applications” The Cloud Partner Dashboard: Make sure that you have access to the Cloud Partner Portal at https://cloudpartner. azure. com. In my case, I use my coopered credentials to log in. Assign your Dev Center account details via Publisher Profile: Hint:I had some trouble doing this. My Dev Center account was not accepted. The reason was that my Dev Center account and my cooperated account names are/aren’t similar. A Dev Center account is always an MSA (former live id). So, I couldn’t invite this account into the Cloud Partner portal. My workaround: Create a new MSA, e. g. myname. dev@outlook. comCreate a new Dev Center account with the new MSA: https://developer. microsoft. comAdd the new MSA into the Cloud Partner PortalAssign your Dev Center accountPrepare your publishing package: Publishing (-) Azure Applications means that you provide an ARM template and other resources, like: mainTemplate. jsoncreateUiDefinition. json (https://docs. microsoft. com/en-us/azure/managed-applications/create-uidefinition-overview)nestedtemplates. …. json (for linked templates)and maybe some other foldersAll the files must be in a zip archive for (-) further upload. The folder structure is important and createUiDefinition. json and mainTemplate. json are mandatory. The ARM templates and the create UI are checked by Microsoft before your offer is available to the public. To avoid some iterations, make sure that you have observed the following things: ARM TemplatesDo not reference external sources like nested templates on GitHub – everything must be in the packagemaintemplate. json must have a “parameters” propertyParameters without defaultValue s. They must have a corresponding output in createUiDefinition. jsonA parameter named “location” must exist and it must have a defaultValue of resourceGroup(). locationUse the correct API versions#VM Image ref must not contain “-preview”Do not concat Ids like:”[Concat(’/subscriptions/’, parameters(‘subscriptionId’), ‘/resourceGroups/’, parameters(‘resourcegroup’), ‘/providers/Microsoft. OperationalInsights/workspaces/’, parameters(‘workspace’))]”use resourceId:”[resourceId(‘Microsoft. OperationalInsights/workspaces’, parameters(‘workspace’))]createUiDefinition. jsonMust have a schema propertyHandler property value should be ‘Microsoft. Compute. MultiVm’Version property value must match schema versionMust have parameters and output(-) propertiesOutput location must be present in mainTemplate parametersOutput workspace must be present in mainTemplate parametersParameters should have basics and steps propertiesLocation must be in outputs and should match [location()]Do not say that a user has to enter a unique name (e. g. for a web app) – generate a unique name with an appendix (use uniqueString()), e. g. :”[concat(parameters(‘resourcename’),’-’, uniqueString(resourceGroup(). id,subscription(). subscriptionId))]”Text boxes (for names) must have a regex constraintText boxes (for names) must have a validationMessagePublish your package for a private test: After you have zipped your package, you can create a new “Azure Application” offer in the Cloud Partner portal. Select a new offer, Azure application and fill out the fields. Publish it for your personal test (add your subscription id to make it visible).  Publish your package to the public: After you have tested your package privately, you can apply to make it public to the world. This takes some time while automatism and a (human) reviewer check your templates. If something is invalid, you get a mail with a link to a pull request where you can check what’s wrong. Fist published on: https://www. sepago. de/blog/publish-your-solution-to-the-azure-marketplace/ "
    }, {
    "id": 34,
    "url": "/Why-configuring-Azure-AD-authentication-with-an-Azure-Web-App-fails/",
    "title": "Why configuring Azure AD authentication with an Azure Web App fails",
    "body": "2019/02/09 - I spent hours today adding Azure AD authentication to an Azure MVC web application with Visual Studio. I always got the same error while adding the preconfigured AD application: “Error: Unable to query for Azure AD applications: An error occurred while processing this request. ” My account has the right permission in Azure AD – I thought. After a while I found out: Visual Studio was connected to my Azure AD with three different accounts: Normally, that’s what I want, even if I have to publish some apps in other tenants/subscriptions. But in this special case two accounts are part of the Azure tenant where my Azure applications should be deployed: Visual Studio uses the first account (marked in red), which does not have the appropriate permissions. My “fast” resolution: I gave this account the right Azure AD role (Application Administrator) for 5 minutes and tried again with success: First published on: https://www. sepago. de/blog/why-configuring-azure-ad-authentication-with-an-azure-web-app-fails/ "
    }, {
    "id": 35,
    "url": "/Deploy-an-Azure-Functional-App-as-an-interface-to-Log-Analytics-Azure-Monitor/",
    "title": "Deploy an Azure Functional App as an interface to Log Analytics / Azure Monitor",
    "body": "2019/01/13 - IntroductionMicrosoft offers with Log Analytics a cloud-based big data service. Log Analytics is used by several services (including Azure itself) to log and analyze data. It’s a core component of Azure Monitor and Application Insights. Log Analytics key facts: Cloud-basedNo data aggregationPay per upload and data retentionPowerful query language (kql: &lt;https://docs. microsoft. com/en-us/azure/kusto/&gt;)Direct support for visualization on portal. azure. comI use Log Analytics for several projects where data aggregation and analyzation are main tasks. If I write code, I push data directly to Log Analytics – including generating a SAS signature for every single upload. The mandatory SAS signature avoids a simple upload via http-post to Log Analytics. But in some cases, it could be very helpful to work with a simple http-post command. For example: If you use Azure Stream Analytics, you cannot push data directly to Log Analytics. To allow pushing data via http-post I built this project. This project deploys an Azure function to your subscription. This function offers a simple http(s) interface (webhook) you can use to post JSON data to it. This data will be processed by the Azure Function and will be posted to your Log Analytics workspace. Examples:With Postman: With PowerShell: $data='{ localTime : 2019-01-02T11:11:12. 013Z , Humi :46. 5, Temp :14. 2}'Invoke-WebRequest -Uri “https://testaf01xx8. azurewebsites. net/api/Send2LogAnalytics?code=xje5aQIMzPxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx==” -Method POST -Body $data With Stream Analytics: Query: INTO[To-Function]FROM[From-IoT-Hub] Output: Enter your Azure Function parameters Results in Log Analytics: For another data series Deploying and configurationDeploy your Azure Function using the deploy to Azure button.  Github: https://github. com/MarcelMeurer/FunctionApp-to-LogAnalytics Configuration: In the next step enter the following parameters: Resource Group:Select an existing or create a new resource group in a location of your choice (the function will be deployed in the Azure region of the resource group)Site name:A unique name of your function (unique means a worldwide unique hostname; the fqdn is: . azurewebsites. com)Workspace_Id:The workspace id of your Log Analytics workspace (Log Analytics resource -&gt; Advanced settings -&gt; Workspace id)Workspace_Key:The workspace id of your Log Analytics workspace (Log Analytics resource -&gt; Advanced settings -&gt; Primary or secondary key)LogType:Name of your type (“table” name). You will see this name with an appended _CL (custom log) later in your workspace with your dataTime Field:Optional. All data sets you send get a new field called “TimeGenerated”. TimeGenerated contains the time the data arrived at the workspace. If you set Time field to a custom field (like localTime from the example above), the time in this field is used as TimeGenerated. Hint: Workspace_Id, Workspace_Key, LogType, Time Field can be changed later in the function app: Your Function app -&gt; Platform features -&gt; Application settings Resources: After the deployment three resources are deployed and configured: ServerFarmPlan:A consumption-based pricing plan for the Azure Functional App. See https://azure. microsoft. com/en-us/pricing/details/functions/ check the estimated costs billed to your subscriptionSite name - Application Insights:Application Insights to monitor the Azure Function itselfSite name - Azure Functional App:The Azure Function containing the codeGet the resource URL of the Azure Function: Open your Azure Function and navigate to Functions -&gt; Send2LogAnalytics -&gt; &lt;/&gt; Get function URL This URL contains your private key. First published on: https://www. sepago. de/blog/deploy-an-azure-functional-app-as-an-interface-to-log-analytics-azure-monitor/ "
    }, {
    "id": 36,
    "url": "/Creating-devices-for-Azure-IoT-Hub-with-SAS-token-automatically/",
    "title": "Creating devices for Azure IoT Hub with SAS token automatically",
    "body": "2018/11/23 - A few weeks ago, I started an IoT project with a company responsible for a huge amount of different buildings around the world. We deployed several virtual and physical sensors in Azure IoT Hub. Doing this we had three challenges: Deploy new IoT devices in Azure IoT hub in a batchGenerate SAS tokens for these IoT devicesGenerate SAS tokens even if a device still exist in Azure IoT HubThe requirement of batch processing avoids the use of the Device Explorer to generate SAS token. Therefore, I wrote a short PowerShell script: function New-SASToken{PARAM([Parameter(Mandatory=$True)][string]$ResourceUri,[Parameter(Mandatory=$True)][string]$Key,[string]$KeyName=  ,[int]$TokenTimeOut=1800 # in seconds)[Reflection. Assembly]::LoadWithPartialName( System. Web )| out-null$Expires=([DateTimeOffset]::Now. ToUnixTimeSeconds())+$TokenTimeOut#Building Token$SignatureString=[System. Web. HttpUtility]::UrlEncode($ResourceUri)+  `n  + [string]$Expires$HMAC = New-Object System. Security. Cryptography. HMACSHA256$HMAC. key = [Convert]::FromBase64String($Key)$Signature = $HMAC. ComputeHash([Text. Encoding]::ASCII. GetBytes($SignatureString))$Signature = [Convert]::ToBase64String($Signature)$SASToken =  SharedAccessSignature sr=  + [System. Web. HttpUtility]::UrlEncode($ResourceUri) +  &amp;sig=  + [System. Web. HttpUtility]::UrlEncode($Signature) +  &amp;se=  + $Expiresif ($KeyName -ne  ){$SASToken=$SASToken+ &amp;skn=$KeyName }return $SASToken}function New-IoTDevice{PARAM([Parameter(Mandatory=$True)][string]$IoTHubConnectionString,[Parameter(Mandatory=$True)][string]$DeviceId)[Reflection. Assembly]::LoadWithPartialName( System. Web )| out-null$strings=$IoTHubConnectionString. split( ; )$keys =@{}for ($i=0; $i -lt $strings. count; $i++){$keys[$strings[$i]. split( = )[0]]=$strings[$i]. split( = )[1]}$keys[ SharedAccessKey ]=$keys[ SharedAccessKey ]+ = $body='{deviceId: '+$DeviceId+' }'try{$webRequest=Invoke-WebRequest -Method PUT -Uri  https://$($keys[ HostName ])/devices/$([System. Web. HttpUtility]::UrlEncode($DeviceId))?api-version=2018-06-30  -ContentType  application/json  -Header @{ Authorization = (New-SASToken -ResourceUri $keys[ HostName ] -Key $keys[ SharedAccessKey ] -KeyName $keys[ SharedAccessKeyName ])} -Body $body -UseBasicParsing} catch [System. Net. WebException]{if ($_. Exception. Response. StatusCode. value__ -eq 409){write-host  Device exists. Getting data from IoT hub $webRequest=Invoke-WebRequest -Method GET -Uri  https://$($keys[ HostName ])/devices/$([System. Web. HttpUtility]::UrlEncode($DeviceId))?api-version=2018-06-30  -ContentType  application/json  -Header @{ Authorization = (New-SASToken -ResourceUri $keys[ HostName ] -Key $keys[ SharedAccessKey ] -KeyName $keys[ SharedAccessKeyName ])} -UseBasicParsing}else{Write-Error  An exception was caught: $($_. Exception. Message) }}return ConvertFrom-Json $webRequest. Content}function Send-IoTDeviceTestString{PARAM([Parameter(Mandatory=$True)][string]$sasToken)[Reflection. Assembly]::LoadWithPartialName( System. Web )| out-null$t1=[System. Web. HttpUtility]::UrlDecode($sasToken)$t2=$t1. Split( = )$t3=$t2[1]. Split( &amp; )[0]$deviceId=$t3. Split( / )[2]$iotHubDeviceHost=$t3$iotHubRestURI = “https://$($iotHubDeviceHost)/messages/events?api-version=2018-04-01”#$iotHubRestURI$Headers = @{“Authorization” = $sasToken; “Content-Type” = “application/json”}# Message Payload$datetime = get-date$body = @{datetime = $datetimedeviceId = $deviceIdMessage = “Sending data to iot hub”}$body = $body | ConvertTo-Jsonreturn Invoke-RestMethod -Uri $iotHubRestURI -Headers $Headers -Method Post -Body $body} #$iotHubName = “Workshop-IoT” # host name of the iot hub$iotManagementConnectionString=“HostName=Workshop-IoT. azure-devices. net;SharedAccessKeyName=iothubowner;SharedAccessKey=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx” # insert the connection string of your iot hub # name of the new devices$array = @(“TestDev1”,“SEPAGO_HBS2. 0_DE_Cologne_HQ_VDEV_ISP08-IO0”,“SEPAGO_HBS2. 0_DE_Cologne_HQ_VDEV_ISP08-RTU”) foreach ($deviceId in $array){Write-Host “New device created: $($deviceId)”$device=New-IoTDevice -IoTHubConnectionString $iotManagementConnectionString -DeviceId $deviceId$sasToken=New-SASToken -ResourceUri ”$($iotHubName). azure-devices. net/devices/$([System. Web. HttpUtility]::UrlEncode($device. deviceId))” -Key $device. authentication. symmetricKey. primaryKey write-host “DeviceId:”,$device. deviceIdwrite-host “SASToken:”,$sasToken$deviceConfigSend-IoTDeviceTestString -sasToken $sasTokenwrite-host(”–––––––––––––”)} Feel free to use it in your projects. Feedback welcome First published on: https://www. sepago. de/blog/creating-devices-for-azure-iot-hub-with-sas-token-automatically/ "
    }, {
    "id": 37,
    "url": "/OneDrive-PowerShell-Module-Added-support-for-OneDrive-for-Business/",
    "title": "OneDrive PowerShell Module - Added support for OneDrive for Business",
    "body": "2018/11/05 - More than two years ago, I created my PowerShell module to access OneDrive. This module can be installed with a one-liner from https://www. powershellgallery. com/packages/OneDrive Again, I was asked to support OneDrive for Business and finally, I’m ready: From version 2. 0. 0 OneDrive for Business is supported. I provide the complete documentation on GitHub, where I will maintain it: https://github. com/MarcelMeurer/PowerShellGallery-OneDrive Here is the summary of version 2. 0. 0: -——————————————— The OneDrive PowerShell module is available via PowerShellGallery. com. If you want to support and work with me feel free to make changes cloning this repo, change and send me and a pull request. This OneDrive version (2. 0. 0 and higher in PowerShellGallery. com) supports: OneDrive personalOneDrive for BusinessInstallation: Open PowerShell and Install-Module -Name OneDrive -Scope CurrentUser -forceYou can update the module to a newer version with the same command (-force). If you don’t use PowerShellGet currently, go to the Gallery on https://www. powershellgallery. com/packages/OneDrive and click “Get Started”. Check your installation with Get-Help -Name OneDrive Authentication: Before you start using the OneDrive module you have registered your script/application. This differs depending on the OneDrive version to be used. OneDrive Personal: Read this on my blog: https://www. sepago. de/blog/onedrive-powershell-module-new-version-with-improved-authentication/ Go to: https://apps. dev. microsoft. com and login with your Microsoft Account (MSA) and “Add an app” in the category “converged applications”Enter a name and press “create”Press “Generate New Password” and save the password (app key)Also, save the “Application id”Press “Add Platforms” and select “Web”Check “Allow implicit Flow” and enter a “Redirect URL”. This is not a real URL. Choose a localhost address and note it. In my case, I chose: http://localhost/loginPress “Save”Now you have all the necessary data for your app/script:Client Id: 5dd40b03-0ead-451b-b5e3-f704550e8ccaAppKey: xqacs8K92MuCJKgciRHQ1CfRedirectURI: http://localhost/loginTo get an authentication token use:$Auth=Get-ODAuthentication -ClientID 5dd40b03-0ead-451b-b5e3-f704550e8cca -AppKey xqacs8K92MuCJKgciRHQ1Cf -RedirectURI http://localhost/login OneDrive for Business: To use OneDrive for business you have to register your script/app to in Azure Active Directory Add an application in Azure Active Directory inside the Azure portal: https://portal. azure. com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredApps Chose “New application registration” Give your application a name and a unique sign-on URL. The sign-on URL has to be a valid URL but doesn’t have to exist. E. g. : http://sepago. de/1Drive4Business (make later sure that this URL is in the reply URL list of your application) Within the “Required permissions” add “Office 365 SharePoint Online (Microsoft. Sharepoint)” Select “Read and write user files” below “delegated permissions” for the Office 365 API Generate a secret key for this application and save it for later use. Also, save the application Id You should now have the following parameter: Client Id: 2831fc52-e1b8-4493-9f3a-a3dad74b2081AppKey: TqoSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX=RedirectURI: http://sepago. de/1Drive4BusinessAdditionally you need the resource URL for OneDrive for Business. Normally: https://-my. sharepoint. com/. In our company this is the URL “ https://sepagogmbh-my. sharepoint. com/ “ (the last one / is important). Resource ID: https://sepagogmbh-my. sharepoint. com/To get an authentication token use: $Auth=Get-ODAuthentication -ClientId  2831fc52-e1b8-4493-9f3a-a3dad74b2081  -AppKey  TqoSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX= &amp;nbsp; -RedirectURI  http://sepago. de/1Drive4Business  -ResourceId  https://sepagogmbh-my. sharepoint. com/ Renew the authentication with a refresh token: An access token is 1 hour valid. You can get a new access token with the refresh token provided by the last authentication. This is necessary if you are creating a script that will work for a long time without further user input. Renew your access token automatically in the program code. $Auth=Get-ODAuthentication -ClientId 2831fc52-e1b8-4493-9f3a-a3dad74b2081 -AppKey  TqoSXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX=  -RedirectURI  http://sepago. de/1Drive4Business  -ResourceId  https://sepagogmbh-my. sharepoint. com/  -RefreshToken $LastAuth. refresh_tokenWhere $LastAuth is your last authentication result (containing the refresh token)For OneDrive personal leave the ResourceId empty (-ResourceId “”)Working with files and folders: Get an authentication code from above and store it in $Auth List files and folders: Get-ODChildItems -AccessToken $Auth. access_token -ResourceId  https://sepagogmbh-my. sharepoint. com/  -path  / List files and folders: Remove-ODItem -AccessToken $Auth. access_token -ResourceId “https://sepagogmbh-my. sharepoint. com/” -path “/Upload” Creating a folder: New-ODFolder -AccessToken $Auth. access_token -ResourceId  https://sepagogmbh-my. sharepoint. com/  -path  /  -FolderName  Upload Upload local files to OneDrive: Add-ODItem -AccessToken $Auth. access_token -ResourceId  https://sepagogmbh-my. sharepoint. com/  -LocalFile  D:\DEV\PowerShell\PowerShellGallery-OneDrive\Test\Uploads\IoT Workshop. pptx  -Path  /Upload List OneDrive drives: Get-ODDrives -AccessToken $Auth. access_token -ResourceId  https://sepagogmbh-my. sharepoint. com/ Downloading some files: Get-ODItem -AccessToken $Auth. access_token -ResourceId  https://sepagogmbh-my. sharepoint. com/  -Path  /Upload/Doings. txt  -LocalPath  D:\DEV\PowerShell\PowerShellGallery-OneDrive\Test\Downloads Get-ODItem -AccessToken $Auth. access_token -ResourceId “https://sepagogmbh-my. sharepoint. com/” -Path ”/Upload/Doings. txt” -LocalPath “D:\DEV\PowerShell\PowerShellGallery-OneDrive\Test\Downloads” -LocalFileName “Copy from OneDrive. Doings. txt” Delete a file in OneDrive: Remove-ODItem -AccessToken $Auth. access_token -ResourceId  https://sepagogmbh-my. sharepoint. com/  -Path  /Upload/Doings. txt First published on: https://www. sepago. de/blog/onedrive-powershell-module-added-support-for-onedrive-for-business/ "
    }, {
    "id": 38,
    "url": "/Working-with-the-OneDrive-PowerShell-Module/",
    "title": "Working with the OneDrive PowerShell Module",
    "body": "2018/09/29 - Recently I got some questions on how to work with my PowerShell module for OneDrive. Therefore, I put together some examples. Remember: The OneDrive module is for OneDrive personal and doesn’t work with OneDrive business / Sharepoint. First: Register an app (authentication) for OneDrive: https://www. sepago. de/blog/onedrive-powershell-module-new-version-with-improved-authentication/ Authenticate to OneDrive: $Authentication=Get-ODAuthentication -ClientID &quot;xxxxxxxxxxxxxxxxxxxxxxx&quot; -AppKey &quot;yyyyyyyyyyyyyyyy&quot; -RedirectURI &quot;http://localhost/login&quot;$at=$Authentication. access_token Show files and folders: Get-ODChildItems -AccessToken $at -path  /  Create a new folder in OneDrive New-ODFolder -AccessToken $at -FolderName  Images  Copy files from local to OneDrive Add-ODItem -AccessToken $at -LocalFile  . \LA-02. jpg  -Path  /Images  Copy file from OneDrive to local disk Get-ODItem -AccessToken $at -Path  /Images/LA-02. jpg  -LocalPath  D:\Local\downloads Get-ODItem -AccessToken $at -Path  /Images/LA-02. jpg  -LocalPath  D:\Local\downloads  -LocalFileName  Copy from OneDrive. jpg  Delete file in OneDrive Remove-ODItem -AccessToken $at -Path  /Images/LA-02. jpg  First published on: https://www. sepago. de/blog/working-with-the-onedrive-powershell-module/ "
    }, {
    "id": 39,
    "url": "/Adding-Guest-Users-to-Azure-AD-from-Excel-with-PowerShell/",
    "title": "Adding Guest Users to Azure AD from Excel with PowerShell",
    "body": "2018/07/13 - Sharing access across different tenants in one of the key benefits of Azure AD. My customers appreciate that they can provide Azure-based solution to their cooperated users and to guest users as well. Cooperated users include users from the group and subsidiaries. They all can access resources with one identity – on-premises and in the cloud (Same-sign-on, single-sign-on). Guest users can be deployed manually via the Azure portal, via PowerShell or with a connector to another system (like SAP HR). Adding users from an Excel file can be done with PowerShell. To show an example I created an Excel file with some headers: CompanySurnameNameMailJob role To add this user, we must archive these steps: Login into Azure AD with appropriate rightsEnumerate through the excel tableInviting the userAdding the right properties (company, name, surname, …) to the invited user objectTo do this I prepared this script: $invocation = (Get-Variable MyInvocation). Value$directorypath = Split-Path $invocation. MyCommand. Path$directorypath$ExcelFile=$directorypath+”\Users2Invite. xlsx” # Path to the excel file$InviteRedirectURL=“https://mycompany. com” # Redirect url after the first logon$WorkSheetNum=“Tabelle1” # Name of the table in the excel file if (!$lastLogin) {# put your Azure AD tenant id here (Azure portal / Azure Active Directory / Properties / Directory ID)$global:lastLogin=Connect-AzureAD -TenantId “xxxxxxxxxxxxx-xxxxxxxx-xxxxxxxxxxx-xxxxxxxxxxx”} $Excel = New-Object -ComObject Excel. Application $WorkBook = $Excel. Workbooks. Open($ExcelFile)$WorkSheet = $WorkBook. WorkSheets. Item($WorkSheetNum) $RowNum = 2 While ($WorkSheet. Cells. Item($RowNum, 1). Text -ne ””) {# Read the first line from sheet$Company = “Ext: “+$WorkSheet. Cells. Item($RowNum, 1). Text. trim()$Surname = $WorkSheet. Cells. Item($RowNum, 2). Text. trim()$Name = $WorkSheet. Cells. Item($RowNum, 3). Text. trim()$Mailadress = $WorkSheet. Cells. Item($RowNum, 4). Text. trim()$JobTitle = $WorkSheet. Cells. Item($RowNum, 5). Text. trim()$userFullName=$Name+”, “+$Surname Write-Output(“Adding user: “+$userFullName+” (”+$Mailadress+”)”)$invitation=New-AzureADMSInvitation -InvitedUserDisplayName $userFullName -InvitedUserEmailAddress $Mailadress -SendInvitationMessage $true -InviteRedirectURL $InviteRedirectURL$user = Get-AzureADUser -ObjectId $invitation. InvitedUser. IdSet-AzureADUser -ObjectId $invitation. InvitedUser. Id -Surname $NameSet-AzureADUser -ObjectId $invitation. InvitedUser. Id -GivenName $SurnameSet-AzureADUser -ObjectId $invitation. InvitedUser. Id -JobTitle $JobTitleSet-AzureADUser -ObjectId $invitation. InvitedUser. Id -Department $CompanySet-AzureADUser -ObjectId $invitation. InvitedUser. Id -Displayname $user. Displayname$RowNum++} If you run this script all users in the excel file will be invited to your Azure AD tenant. Remark: The company field can not be written to an Azure AD user object (read-only). So I write the company to the department field. First published on: https://www. sepago. de/blog/adding-guest-users-to-azure-ad-from-excel-with-powershell/ "
    }, {
    "id": 40,
    "url": "/Enumerating-Azure-AD-administrative-accounts-with-PowerShell/",
    "title": "Enumerating Azure AD administrative accounts with PowerShell",
    "body": "2018/06/22 - Users can have different administrative roles in Azure Ad. Azure Portal can show these roles and members. Sometimes it can be favorable to get roles and members in a PowerShell object list. To login into your Azure AD tenant use: Connect-AzureAD -TenantId xxxWhere xxx is your tenant id. The -TenantId is optional. But if your account member of different Azure ADs you can select the right one. After login in with your credential you can show the different roles with: Get-AzureADDirectoryRoleOutput: Using PSCustomObject helps to build a list/array of custom objects to save all roles and users. The full code: $roleUsers = @() $roles=Get-AzureADDirectoryRoleForEach($role in $roles) {$users=Get-AzureADDirectoryRoleMember -ObjectId $role. ObjectIdForEach($user in $users) {write-host $role. DisplayName,$user. DisplayName$obj = New-Object PSCustomObject$obj | Add-Member -type NoteProperty -name RoleName -value ””$obj | Add-Member -type NoteProperty -name UserDisplayName -value ””$obj | Add-Member -type NoteProperty -name IsAdSynced -value false$obj. RoleName=$role. DisplayName$obj. UserDisplayName=$user. DisplayName$obj. IsAdSynced=$user. DirSyncEnabled -eq $true$roleUsers+=$obj}}$roleUsers Output: Feel free to extend the custom object with other values form Azure AD user object. First published on: https://www. sepago. de/blog/enumerating-azure-ad-administrative-accounts-with-powershell-2/ "
    }, {
    "id": 41,
    "url": "/Deploying-a-custom-OMS-Log-Analytics-Workspace-via-GitHub-Avoid-problems-with-ARM-templates/",
    "title": "Deploying a custom OMS Log Analytics Workspace via GitHub – Avoid problems with ARM templates",
    "body": "2018/05/03 - Azure is “my” cloud with a lot of platform services allowing users, programmers, and DevOps building powerful and scalable solutions. One of my favorite ones is Azure OMS Log Analytics – a big data platform with a great query language and professional dashboards. In the past, I build a custom agent to collect data from Microsoft RDS and Citrix environment to provide a deep insight into the user experiences and resource usage http://loganalytics. sepago. com/. Additionally, I have built four dashboards and a lot of views to visualize the data:  To make it easier to deploy an OMS Log Analytics workspace including my tiles and views I decided to offer a “Deploy to Azure” solution via GitHub. Finally, an ARM template for an Azure deployment. One ARM template including all resources (doesn’t work well) First, I built an ARM template including the workspace definition and four definitions of the tiles (including their views). But I got some weird effects: Sometimes I got only 2 tiles with a deployment, sometimes 3 and rarely the four I expected. What happens – or what I thought what happened? The tile definition in the ARM files is independent of each other’s, so the ARM engine tried to deploy them parallel. And here is a problem: This didn’t (and don’t) work with the current API. The API didn’t wait for the full deployment and finished after the first tile is deployed. One ARM template for the deployment and one for each tile (works well) It took days to find a reliable solution. The solution I use now works differently: I have one ARM template for each tile and one ARM template for the workspace itself. The ARM template for the workspace references all the four tile ARM templates using the resource type “Microsoft. Resources/deployments”. This deployment type allows a special trick to avoid the parallel processing of all linked templates: A serial mode! The serial mode controls the ARM processing and avoids parallel processing. With this trick, the deployment works reliably. See the ARM templates at GitHub: https://github. com/MarcelMeurer/LogAnalytics-for-Citrix-and-RDS/ To help the community to find this workaround some keywords: “Azure OMS Log Analytics Deployment with ARM some tiles are missing” First published on: https://www. sepago. de/blog/deploying-a-custom-oms-log-analytics-workspace-via-github-avoid-problems-with-arm-templates/ "
    }, {
    "id": 42,
    "url": "/Monitoring-End-User-Computing-Environments-with-Azure-OMS-LogAnalytics-with-Deploy-to-Azure/",
    "title": "Monitoring End-User Computing Environments with Azure OMS LogAnalytics with Deploy to Azure",
    "body": "2018/03/31 - Several months ago, I built a solution focused on monitoring the user experiences on remote desktop environments based on Citrix XenApp, XenDesktop and Microsoft RDS. Particularly RDS/RDP was imported because there is no solution from Microsoft. End-user computing environments are complex and not easy to monitor. The most common monitoring solutions are focused on typical server parameters like CPU and memory consumption, free disk space and so on. But administrators need more insight into the parameters responsible for the user experience like bandwidth, latency, utilization of the virtual hardware by application, etc. To meet these demands, I decided to build a solution considering the following requirements: Storing the raw data without aggregation to an average value per hour. I need the data per minute – for all timesI need a “time back” mode to look back in the RDS environment to each time frame in the pastAvoidance of any Infrastructure-as-a-service like a Windows application server, SQL database or the likeIt was obvious to use an Azure service as a platform for my solution.  And so, I built my solution based on Azure OMS LogAnalytics. Azure OMS offers a “big-data style” platform to save, index, query and visualize data. The core part of this solution is my small agent: Installed on each worker (Citrix or Microsoft) it collects, combines and uploads data to your personal Azure OMS Log Analytics workspace. And of course: It offers monitoring of RDS/Citrix workers in any cloud as well as on-premises / hybrid works. Description of the full solution (incl. download): http://loganalytics. sepago. com/ After several improvements, I can now offer a quicker and saver deployment and update for a prepared OMS workspace directly into your Azure subscription. To do this: Go to https://github. com/MarcelMeurer/LogAnalytics-for-Citrix-and-RDS and deploy your workspace directly. It’s as simple as any other deployment from the Azure marketplace: Just click the right “Deploy to Azure” button and enter a few parameters. You will get a prepared Azure OMS workspace including the tiles and views for this solution. The rollout workspace is a “standalone” pricing tier with a 360 days retention. https://github. com/MarcelMeurer/LogAnalytics-for-Citrix-and-RDS https://www. youtube. com/watch?v=A5ehFVIDotU First published on: https://www. sepago. de/blog/monitoring-end-user-computing-environments-with-azure-oms-loganalytics-with-deploy-to-azure/ "
    }, {
    "id": 43,
    "url": "/Deallocate-an-Azure-VM-from-itself/",
    "title": "Deallocate an Azure VM from itself",
    "body": "2018/01/16 - These days I’m dealing with the automation of starting and stopping Azure virtual machines. I do this to avoid unnecessary costs for customers running Citrix or RDS workers on Azure. I translated a piece of my work into a PowerShell script to de-allocate the VM on which it is running. Azure Instance Metadata Service: To get information about the running VM I use Azure Instance Metadata Service (https://docs. microsoft. com/en-us/azure/virtual-machines/windows/instance-metadata-service). This information contains the public IP address, VM size, os type and a lot more. To identify this Azure VM for later deallocation later, I need some specific information: the vmId. You can get meta data using PowerShell: `$md``=``Invoke-RestMethod` `-Headers` `@{``&quot;Metadata&quot;``=``&quot;true&quot;``}` `-URI` `http://169. 254. 169. 254/metadata/instance``?``api-version=2017-08-01` $md. compute. vmId contains the unique identifier for the running VM. I will use this id later to match the correct VM for deallocating. Service Principal Account: I want to deallocate the VM automatically without logging-in myself. Therefore I have to use a service principal account. It is pretty easy to create a service principal account: Go to the Azure portal, open the Azure Active Directory of your subscription(s) and choose „App registration“ – “New application registration”: Give your app a name (e. g. : PowerShell-Services) and enter a sign-on URL. User http://localhost for this URL and click “Create”.  Select the previously created app, select “Keys” and go on: Enter a name, select an expiration time and save the configuration: Important: copy your key directly after saving it: Also, copy the application id for later use: And last: copy the tenant id from your Azure Active Directory by selecting it and click on “Properties”: You have all the data you need to logon unattended now: App-id: 21acad78-9006-4f22-9156-xxxxxxxxxxxxx App-key: sjsgUk7a5hgaTkZGuOGeLxxxxxxxxxxxxxxxJ0lXs2/o= Tenant-id: 06522f94-0d15-4fba-aac8-xxxxxxxxxxxxxxx Give the right permissions: In my case, I will use this single app/service principal to shut down and deallocate every VM in my Azure subscription (this can be different in your case and can be a security breach if another user gets the logon data from your PowerShell script). To give the app the right to work with VM I added in on subscription level: Select Subscriptions -&gt; subscription -&gt; Access Control (IAM) -&gt; Add Role: Virtual Machine Contributor* Assign to: Azure AD user, group, or application Select: You application/service principal Save * The app/service principal has the permission to start/stop/modify/… all VM’s in the subscription. If you need more granularity you can create custom roles (https://www. sepago. de/blog/2017/07/13/preventing-administrative-users-to-change-critical-network-settings-in-an-azure-hub) The script: To find from your VM the corresponding one in Azure use this PowerShell script with the service principal credentials and deallocate it: $AppId= 21acad78-9006-4f22-9156-xxxxxxxxxxxxx $AppKey= sjsgUk7a5hgaTkZGuOGeLxxxxxxxxxxxxxxxJ0lXs2/o= $TenantId= 06522f94-0d15-4fba-aac8-xxxxxxxxxxxxxxx $md=Invoke-RestMethod -Headers @{“Metadata”=“true”} -URI http://169. 254. 169. 254/metadata/instance?api-version=2017-08-01 $Cred = New-Object System. Management. Automation. PSCredential ($AppId, (ConvertTo-SecureString $AppKey -AsPlainText -Force)) Login-AzureRmAccount -Credential $cred -ServicePrincipal -TenantId $TenantId # enumerate subscriptions$subscritions=Get-AzureRmSubscriptionforeach ($subscription in $subscritions){Write-Host(“Working on subscription: $($subscription. name)”)Get-AzureRmSubscription -SubscriptionId $subscription. Id |Out-Null$vms=Get-AzureRmVMWrite-Host(“Number of VMs: $($vms. Count)”)$vm=@($vms | where vmId -EQ $md. compute. vmId)if ($vm -ne 0){Write-Host(“Deallocating $($vm. Name)”)Stop-AzureRmVM -Id $vm[0]. Id -Name $vm[0]. Name -Force} else{Write-Host(“VM not found in this subscription”)}} Hint: @skillriver wrote a blog shutting to Shutdown and Deallocate an Azure VM using Managed Service Identity. This avoids to create an Azure AD application: https://gotoguy. blog/2018/01/17/shutdown-and-deallocate-an-azure-vm-using-managed-service-identity-and-instance-metadata-service/ First published on: https://www. sepago. de/blog/deallocate-an-azure-vm-from-itself/ "
    }, {
    "id": 44,
    "url": "/How-to-use-http-delete,-put,-head,-connections,-connect-with-an-Azure-Web-App/",
    "title": "How to use http delete, put, head, connections, connect with an Azure Web App",
    "body": "2017/12/27 - I often use Azure Web Apps to deploy tools and programs running serverless. A few weeks ago, I deployed an MVC web site with a controller to handle file uploads to an Azure Storage Account. For the client-side, I used jquery-FileUpload, which also allows triggering a controller to delete a file. If a user tries to delete a file, jquery-FileUpload triggers the controller with the http-request method “DELETE”. In my local environment, this worked as expected but nothing happened in my Azure Web App deployment. If found out that an Azure Web App supports only http-get and post by default. My first attempt was to add the methods DELETE via web. config: &lt;add name=&quot;ExtensionlessUrlHandler-Integrated-4. 0&quot; path=&quot;*. &quot; verb=&quot; DELETE&quot; type=&quot;System. Web. Handlers. TransferRequestHandler&quot; preCondition=&quot;integratedMode,runtimeVersionv4. 0&quot; /&gt;But this didn’t work. The full web site was no longer accessible: The page cannot be displayed because an internal server error has occurred. The right way to add a method/verb is to remove all first and then re-add them: &lt;remove name=&quot;ExtensionlessUrlHandler-Integrated-4. 0&quot; /&gt;&lt;add name=&quot;ExtensionlessUrlHandler-Integrated-4. 0&quot; path=&quot;*. &quot; verb=&quot;GET,POST,PUT,DELETE&quot; type=&quot;System. Web. Handlers. TransferRequestHandler&quot; preCondition=&quot;integratedMode,runtimeVersionv4. 0&quot; /&gt; First published on: https://www. sepago. de/blog/how-to-use-http-delete-put-head-connections-connect-with-an-azure-web-app/ "
    }, {
    "id": 45,
    "url": "/Deploy-a-node.js-script-in-seconds-to-an-Azure-Web-App-with-git-and-run-it-server-less/",
    "title": "Deploy a node.js script in seconds to an Azure Web App with git and run it server-less",
    "body": "2017/09/04 - Deploy a node. js script in seconds to an Azure Web App with git and run it server-less In customer projects, I sometimes develop small applications to collect and process data from different data sources or to offer a web interface. In any case, I try to avoid rolling out a VM to run these apps. I strictly prefer using Platform-as-a-Service and it works nearly 100% if I use an Azure Web App or Azure Functions. The advantages are obvious: No patching of VM’sNo further infrastructure for VM’sNo monitoring of OS specific metricsNo additional monitoring solutionNot involved in release cycles for the operating systemAnd a lot moreIn this post, I will describe how easy it is to deploy a node. js application with git to an Azure Web App. To make it more comprehensible I will describe it with a node. js game called “tanks” from @darthrubens. Tanks is a multi-player game developed in node. js. Tools: Later in this post we will need a few tools to test the game locally and to upload it to an Azure Web App. Install: Node. js: https://nodejs. orgto test the node. js application locallyGit: https://git-for-windows. github. ioto manage the source code and in this case: to upload applicationsThe node. js application for this test: https://github. com/rubentd/tanksdownload the zip file and extract it to a folderCreate an Azure Web App: Create an Azure Web App in the Azure Portal with an App service plan (or use an existing one):  Use at least a standard pricing tier to enable apps to run permanently.  false Configuration of the Azure Web App (save it): Get the publishing information (username and password) by downloading the profile:  Write down the username, password and the web app url for later. Test the application locally (optional): Extract the zip file from tanks to a folder, open a command line and navigate to this folder. At the very first time, you must install the packages and dependencies for the node. js application. Type: npm install To run the node. js application type: npm start The application starts and is accessible by this url: http://localhost:8082/  Upload the node. js application to the Azure Web App: In this post, I use git to manage the source code and upload it to Azure. I recommend learning how to use git. It’s a very powerful tool. I only describe the necessary steps here. First initialize your git project by typing: git init Add the files and directories to your local repository *git add ** Then commit all to git: git commit -m “Init” Add the web app as a remote repository (use your web app url and add scm after the host name): git remote add azure http://deploy-an-app. scm. azurewebsites. net And finally push your application (you will be asked for the username and password) git push azure master Hint: Git ignores node_modules folder. The modules will be installed by the Azure Web App based on the dependencies listed in packages. json   Done: Your Azure Web App is now running your node. js application: First published on: https://www. sepago. de/blog/deploy-a-node-js-script-in-seconds-to-an-azure-web-app-with-git-and-run-it-server-less/ "
    }];

var idx = lunr(function () {
    this.ref('id')
    this.field('title')
    this.field('body')

    documents.forEach(function (doc) {
        this.add(doc)
    }, this)
});
function lunr_search(term) {
    document.getElementById('lunrsearchresults').innerHTML = '<ul></ul>';
    if(term) {
        document.getElementById('lunrsearchresults').innerHTML = "<p>Search results for '" + term + "'</p>" + document.getElementById('lunrsearchresults').innerHTML;
        //put results on the screen.
        var results = idx.search(term);
        if(results.length>0){
            //console.log(idx.search(term));
            //if results
            for (var i = 0; i < results.length; i++) {
                // more statements
                var ref = results[i]['ref'];
                var url = documents[ref]['url'];
                var title = documents[ref]['title'];
                var body = documents[ref]['body'].substring(0,160)+'...';
                document.querySelectorAll('#lunrsearchresults ul')[0].innerHTML = document.querySelectorAll('#lunrsearchresults ul')[0].innerHTML + "<li class='lunrsearchresult'><a href='" + url + "'><span class='title'>" + title + "</span><br /><span class='body'>"+ body +"</span><br /><span class='url'>"+ url +"</span></a></li>";
            }
        } else {
            document.querySelectorAll('#lunrsearchresults ul')[0].innerHTML = "<li class='lunrsearchresult'>No results found...</li>";
        }
    }
    return false;
}

function lunr_search(term) {
    $('#lunrsearchresults').show( 400 );
    $( "body" ).addClass( "modal-open" );
    
    document.getElementById('lunrsearchresults').innerHTML = '<div id="resultsmodal" class="modal fade show d-block"  tabindex="-1" role="dialog" aria-labelledby="resultsmodal"> <div class="modal-dialog shadow-lg" role="document"> <div class="modal-content"> <div class="modal-header" id="modtit"> <button type="button" class="close" id="btnx" data-dismiss="modal" aria-label="Close"> &times; </button> </div> <div class="modal-body"> <ul class="mb-0"> </ul>    </div> <div class="modal-footer"><button id="btnx" type="button" class="btn btn-danger btn-sm" data-dismiss="modal">Close</button></div></div> </div></div>';
    if(term) {
        document.getElementById('modtit').innerHTML = "<h5 class='modal-title'>Search results for '" + term + "'</h5>" + document.getElementById('modtit').innerHTML;
        //put results on the screen.
        var results = idx.search(term);
        if(results.length>0){
            //console.log(idx.search(term));
            //if results
            for (var i = 0; i < results.length; i++) {
                // more statements
                var ref = results[i]['ref'];
                var url = documents[ref]['url'];
                var title = documents[ref]['title'];
                var body = documents[ref]['body'].substring(0,160)+'...';
                document.querySelectorAll('#lunrsearchresults ul')[0].innerHTML = document.querySelectorAll('#lunrsearchresults ul')[0].innerHTML + "<li class='lunrsearchresult'><a href='" + url + "'><span class='title'>" + title + "</span><br /><small><span class='body'>"+ body +"</span><br /><span class='url'>"+ url +"</span></small></a></li>";
            }
        } else {
            document.querySelectorAll('#lunrsearchresults ul')[0].innerHTML = "<li class='lunrsearchresult'>Sorry, no results found. Close & try a different search!</li>";
        }
    }
    return false;
}
    
$(function() {
    $("#lunrsearchresults").on('click', '#btnx', function () {
        $('#lunrsearchresults').hide( 5 );
        $( "body" ).removeClass( "modal-open" );
    });
});