{
   "$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
   "contentVersion":"1.0.0.0",
   "parameters":{
   
   },
   "resources":[
      {
         "apiVersion":"2021-04-01",
         "name":"pid-03917add-bf4a-4467-bb61-c916c2d7b041",
         "type":"Microsoft.Resources/deployments",
         "subscriptionId":"[subscription().subscriptionId]",
         "resourceGroup":"[resourceGroup().name]",
         "properties":{
            "mode":"Incremental",
            "template":{
               "$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
               "contentVersion":"1.0.0.0",
               "resources":[
                  
               ]
            }
         }
      },
      {
         "name":"750ec0fd-74d1-4e80-be97-3001485303e8",
         "type":"microsoft.insights/workbooktemplates",
         "location":"[resourceGroup().location]",
         "apiVersion":"2020-11-20",
         "properties":{
            "galleries":[
               {
                  "name":"AVD Error Logs",
                  "category":"Azure Virtual Desktop",
                  "order":50,
                  "type":"workbook",
                  "resourceType":"microsoft.operationalinsights/workspaces"
               }
            ],
            "templateData":"{\n  \"version\": \"Notebook/1.0\",\n  \"items\": [\n    {\n      \"type\": 1,\n      \"content\": {\n        \"json\": \"# Azure Virtual Desktop - Errors\\r\\nThis workbook gives you an insight into the logs coming from the Azure Virtual Backplane. These data can be used to resolve issues while user connecting.\\r\\n\\r\\n[Check for an update of this Workbook](https://blog.itprocloud.de) - Current version: v1.1\\r\\n\"\n      },\n      \"customWidth\": \"70\",\n      \"name\": \"text - 0\"\n    },\n    {\n      \"type\": 1,\n      \"content\": {\n        \"json\": \"# Check-out the ITProCloud Blog\\r\\n- [blog.itprocloud.de](https://blog.itprocloud.de)\\r\\n- [WVDAdmin](https://blog.itprocloud.de/Windows-Virtual-Desktop-Admin/)\\r\\n- [Hydra](https://github.com/MarcelMeurer/WVD-Hydra)\\r\\n\",\n        \"style\": \"upsell\"\n      },\n      \"customWidth\": \"30\",\n      \"name\": \"text - 0 - Copy\"\n    },\n    {\n      \"type\": 11,\n      \"content\": {\n        \"version\": \"LinkItem/1.0\",\n        \"style\": \"tabs\",\n        \"links\": [\n          {\n            \"id\": \"61401b62-682c-4161-a0a7-a0471dae40fd\",\n            \"cellValue\": \"selectedTab\",\n            \"linkTarget\": \"parameter\",\n            \"linkLabel\": \"AVD Errors and Connections\",\n            \"subTarget\": \"Logins\",\n            \"style\": \"link\"\n          }\n        ]\n      },\n      \"name\": \"links - 3\"\n    },\n    {\n      \"type\": 9,\n      \"content\": {\n        \"version\": \"KqlParameterItem/1.0\",\n        \"parameters\": [\n          {\n            \"id\": \"88bda73f-158a-4971-9310-1e557a8f89f0\",\n            \"version\": \"KqlParameterItem/1.0\",\n            \"name\": \"TimeRange\",\n            \"label\": \"Time Range\",\n            \"type\": 4,\n            \"isRequired\": true,\n            \"value\": {\n              \"durationMs\": 259200000\n            },\n            \"typeSettings\": {\n              \"selectableValues\": [\n                {\n                  \"durationMs\": 900000\n                },\n                {\n                  \"durationMs\": 3600000\n                },\n                {\n                  \"durationMs\": 14400000\n                },\n                {\n                  \"durationMs\": 43200000\n                },\n                {\n                  \"durationMs\": 86400000\n                },\n                {\n                  \"durationMs\": 259200000\n                },\n                {\n                  \"durationMs\": 604800000\n                },\n                {\n                  \"durationMs\": 2592000000\n                },\n                {\n                  \"durationMs\": 5184000000\n                },\n                {\n                  \"durationMs\": 7776000000\n                }\n              ],\n              \"allowCustom\": true\n            }\n          },\n          {\n            \"id\": \"6e7ddca7-163c-4547-9e37-d408299ce828\",\n            \"version\": \"KqlParameterItem/1.0\",\n            \"name\": \"HostPool\",\n            \"label\": \"Host Pool\",\n            \"type\": 2,\n            \"description\": \"Select a host pool to show only data of this specific one\",\n            \"isRequired\": true,\n            \"query\": \"WVDConnections | extend HostPool=split(_ResourceId,\\\"/\\\")[8] | where TimeGenerated {TimeRange} | distinct tostring(HostPool) | order by HostPool\",\n            \"value\": \"hp-prod-1\",\n            \"typeSettings\": {\n              \"additionalResourceOptions\": []\n            },\n            \"timeContext\": {\n              \"durationMs\": 0\n            },\n            \"timeContextFromParameter\": \"TimeRange\",\n            \"queryType\": 0,\n            \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n          },\n          {\n            \"id\": \"682005d8-aaaf-495d-95b7-3b8dd7bb731c\",\n            \"version\": \"KqlParameterItem/1.0\",\n            \"name\": \"SessionHostSelector\",\n            \"label\": \"Opt: Session Host\",\n            \"type\": 2,\n            \"description\": \"Select a session host to drill down into the data. Don't select a session host to disable this filter.\",\n            \"multiSelect\": true,\n            \"quote\": \"'\",\n            \"delimiter\": \",\",\n            \"query\": \"WVDConnections | extend HostPool=split(_ResourceId,\\\"/\\\")[8] | where TimeGenerated {TimeRange} and HostPool==\\\"{HostPool}\\\" |distinct SessionHostName | order by SessionHostName\",\n            \"value\": [],\n            \"typeSettings\": {\n              \"additionalResourceOptions\": [],\n              \"showDefault\": false\n            },\n            \"timeContext\": {\n              \"durationMs\": 0\n            },\n            \"timeContextFromParameter\": \"TimeRange\",\n            \"queryType\": 0,\n            \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n          },\n          {\n            \"id\": \"fc314454-4e21-4e3e-8fdb-94f2088d70f9\",\n            \"version\": \"KqlParameterItem/1.0\",\n            \"name\": \"UserSelector\",\n            \"label\": \"Opt: User\",\n            \"type\": 2,\n            \"description\": \"Select a user to drill down into the data. Don't select a user to disable this filter.\",\n            \"multiSelect\": true,\n            \"quote\": \"'\",\n            \"delimiter\": \",\",\n            \"query\": \"WVDConnections | extend HostPool=split(_ResourceId,\\\"/\\\")[8] | where TimeGenerated {TimeRange} and HostPool==\\\"{HostPool}\\\" | distinct UserName | order by UserName\",\n            \"typeSettings\": {\n              \"additionalResourceOptions\": [],\n              \"showDefault\": false\n            },\n            \"timeContext\": {\n              \"durationMs\": 0\n            },\n            \"timeContextFromParameter\": \"TimeRange\",\n            \"queryType\": 0,\n            \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n          },\n          {\n            \"id\": \"25c6a654-a08a-4020-99ba-0563a66fd201\",\n            \"version\": \"KqlParameterItem/1.0\",\n            \"name\": \"ErrorSelector\",\n            \"label\": \"Error Selector\",\n            \"type\": 2,\n            \"description\": \"Select an error to drill down into the data. Don't select an item to disable this filter.\",\n            \"multiSelect\": true,\n            \"quote\": \"'\",\n            \"delimiter\": \",\",\n            \"query\": \"WVDErrors | extend HostPool=split(_ResourceId,\\\"/\\\")[8] | where TimeGenerated {TimeRange} and HostPool==\\\"{HostPool}\\\" \\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"Unspecified error\\\",\\\"Unspecified error\\\",CodeSymbolic)\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"The system cannot open the file.\\\",\\\"The system cannot open the file.\\\",CodeSymbolic)\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"The RPC server is unavailable.\\\",\\\"The RPC server is unavailable.\\\",CodeSymbolic)\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"No such interface supported\\\",\\\"No such interface supported\\\",CodeSymbolic)\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"No process is on the other end of the pipe.\\\",\\\"No process is on the other end of the pipe.\\\",CodeSymbolic)\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"Operation aborted\\\",\\\"\\tOperation aborted\\\",CodeSymbolic)\\r\\n| distinct tostring(CodeSymbolic) | order by CodeSymbolic\",\n            \"value\": [\n              \"Unspecified error\",\n              \"TransportClosedUnexpectedly\",\n              \"The system cannot open the file.\",\n              \"The RPC server is unavailable.\",\n              \"SocketConnectionTimedOut\",\n              \"SSL_ERR_ACCESS_DENIED\",\n              \"ReverseConnectResponseTimeout\",\n              \"ReverseConnectDnsLookupFailed\",\n              \"PasswordExpired\",\n              \"PROXY_ERR_TRANSPORTCLOSEDUNEXPECTEDLY\",\n              \"PROXY_ERR_ORCHESTRATION_GENERICFAILURE\",\n              \"PROXY_ERR_ORCHESTRATIONHTTP_RESPONSE_SERVER_ERROR\",\n              \"OrchestrationNoGatewayResponse\",\n              \"OrchestrationFailed\",\n              \"NotAuthorizedForLogon\",\n              \"NL_DISCONNECT_ERROR\",\n              \"InternalDisconnect\",\n              \"ERROR_PATH_NOT_FOUND\",\n              \"ERROR_DISK_FULL\",\n              \"ConnectionInitiationSequenceTimeout\",\n              \"ConnectionFailedUserHasValidSessionButRdshIsUnhealthy\",\n              \"ConnectionFailedServerDisconnect\",\n              \"ConnectionFailedReverseUngracefulClose\",\n              \"ConnectionFailedReverseConnectStackTimeoutWaitingForReply\",\n              \"ConnectionFailedReverseConnectStackDNSFailure\",\n              \"ConnectionFailedClientConnectedTooLateReverseConnectionAlreadyClosed\",\n              \"ConnectionBroken\",\n              \"ClientNetworkUnavailable\",\n              \"CM_ERR_MISSED_HEARTBEAT_THRESHOLD_EXCEEDED\",\n              \"ActivityTimeout\",\n              \"<>\",\n              \"ERROR_BAD_NETPATH\",\n              \"ConnectionFailedSessionHostFailedToBeStarted\",\n              \"ConnectionFailedNoHealthyRdshAvailable\",\n              \"SessionHostResourceNotAvailable\"\n            ],\n            \"typeSettings\": {\n              \"additionalResourceOptions\": [],\n              \"showDefault\": false\n            },\n            \"timeContext\": {\n              \"durationMs\": 2592000000\n            },\n            \"queryType\": 0,\n            \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n          }\n        ],\n        \"style\": \"pills\",\n        \"doNotRunWhenHidden\": true,\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\"\n      },\n      \"name\": \"parameters - 2\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"WVDConnections | summarize arg_max(TimeGenerated, *) by CorrelationId\\r\\n| summarize arg_max(TimeGenerated, *) by CorrelationId  // workaround to filter \\\"double-entries\\\"\\r\\n| join kind=leftouter (\\r\\n    WVDErrors | summarize arg_max(TimeGenerated, *) by CorrelationId\\r\\n) on CorrelationId\\r\\n| extend HostPool=split(_ResourceId,\\\"/\\\")[8] \\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"Unspecified error\\\",\\\"Unspecified error\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"The system cannot open the file.\\\",\\\"The system cannot open the file.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"The RPC server is unavailable.\\\",\\\"The RPC server is unavailable.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"No such interface supported\\\",\\\"No such interface supported\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"No process is on the other end of the pipe.\\\",\\\"No process is on the other end of the pipe.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"Operation aborted\\\",\\\"\\tOperation aborted\\\",CodeSymbolic) // workaround\\r\\n| where  TimeGenerated {TimeRange} and HostPool==\\\"{HostPool}\\\" and UserName !=\\\"\\\" and (\\\"{UserSelector}\\\"==\\\"\\\" or UserName in ('' {UserSelector})) and (column_ifexists(\\\"SessionHostName\\\",\\\"*\\\")==\\\"*\\\" or \\\"{SessionHostSelector}\\\"==\\\"\\\" or column_ifexists(\\\"SessionHostName\\\",\\\"\\\") in ('' {SessionHostSelector})) and (column_ifexists(\\\"CodeSymbolic\\\",\\\"*\\\")==\\\"*\\\" or \\\"{ErrorSelector}\\\"==\\\"\\\" or column_ifexists(\\\"CodeSymbolic\\\",\\\"\\\") in ('' {ErrorSelector}) or CodeSymbolic==\\\"\\\")\\r\\n| summarize Success=countif(CodeSymbolic==\\\"\\\"), Errors=countif(CodeSymbolic!=\\\"\\\") \\r\\n| extend Temp = pack(\\\"Success\\\",Success,\\\"Errors\\\",Errors )\\r\\n| mv-expand kind=array Temp\\r\\n| project Action=tostring(Temp[0]), Count=toint(Temp[1])\",\n        \"size\": 0,\n        \"title\": \"Brokered sessions\",\n        \"timeContext\": {\n          \"durationMs\": 259200000\n        },\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"showExportToExcel\": true,\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"visualization\": \"piechart\",\n        \"gridSettings\": {\n          \"rowLimit\": 1000,\n          \"filter\": true\n        },\n        \"tileSettings\": {\n          \"titleContent\": {\n            \"columnMatch\": \"HostPool\",\n            \"formatter\": 1\n          },\n          \"leftContent\": {\n            \"columnMatch\": \"Failed\",\n            \"formatter\": 12,\n            \"formatOptions\": {\n              \"palette\": \"auto\"\n            },\n            \"numberFormat\": {\n              \"unit\": 17,\n              \"options\": {\n                \"style\": \"decimal\",\n                \"maximumFractionDigits\": 2,\n                \"maximumSignificantDigits\": 3\n              }\n            }\n          },\n          \"rightContent\": {\n            \"columnMatch\": \"Failed\"\n          },\n          \"showBorder\": true\n        },\n        \"graphSettings\": {\n          \"type\": 0\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"Logins\"\n      },\n      \"customWidth\": \"50\",\n      \"showPin\": true,\n      \"name\": \"query - 20\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"// Duration for the login process from the WVD ARM backend. This includes all steps between clicking the application icon to get notified by the RD agent that the session is established (not for reconnected sessions). \\r\\n// This includes entering the credentials for the session hosts (if not saved). Note: This inculdes re-connected sessions and no failed connections\\r\\nWVDConnections \\r\\n| extend HostPool=split(_ResourceId,\\\"/\\\")[8] \\r\\n| join kind=leftouter (WVDErrors) on CorrelationId\\r\\n| where  TimeGenerated {TimeRange} and HostPool==\\\"{HostPool}\\\" and UserName !=\\\"\\\" and (\\\"{UserSelector}\\\"==\\\"\\\" or UserName in ('' {UserSelector})) and (column_ifexists(\\\"SessionHostName\\\",\\\"*\\\")==\\\"*\\\" or \\\"{SessionHostSelector}\\\"==\\\"\\\" or column_ifexists(\\\"SessionHostName\\\",\\\"\\\") in ('' {SessionHostSelector})) and (column_ifexists(\\\"CodeSymbolic\\\",\\\"*\\\")==\\\"*\\\" or \\\"{ErrorSelector}\\\"==\\\"\\\" or column_ifexists(\\\"CodeSymbolic\\\",\\\"\\\") in ('' {ErrorSelector})) and (State ==\\\"Connected\\\" or State == \\\"Started\\\")\\r\\n| extend Multi=split(_ResourceId, \\\"/\\\")\\r\\n| project ResourceAlias, HostPool=toupper(HP=Multi[8]), SessionHost=SessionHostName , UserName , CorrelationId, TimeGenerated, ResourceGroup=Multi[4], DesktopGroup_s=toupper(strcat(RG=Multi[4],\\\".\\\", HP=Multi[8])) \\r\\n| order by TimeGenerated desc \\r\\n| summarize StartTime=min(TimeGenerated), max(TimeGenerated) by CorrelationId, User=UserName, HostPool, SessionHost\\r\\n| extend Duration=max_TimeGenerated-StartTime | where Duration !=0 \\r\\n| project StartTime, User, HostPool, SessionHost, Duration, CorrelationId\\r\\n| summarize [\\\"Duration in seconds\\\"]=avg(Duration/1s) by HostPool\",\n        \"size\": 0,\n        \"title\": \"Session login time (s)\",\n        \"timeContext\": {\n          \"durationMs\": 259200000\n        },\n        \"timeContextFromParameter\": \"TimeRange\",\n        \"showExportToExcel\": true,\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"visualization\": \"barchart\",\n        \"gridSettings\": {\n          \"filter\": true\n        },\n        \"chartSettings\": {\n          \"showLegend\": true,\n          \"ySettings\": {\n            \"numberFormatSettings\": {\n              \"unit\": 24,\n              \"options\": {\n                \"style\": \"decimal\",\n                \"useGrouping\": false\n              }\n            }\n          }\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"Logins\"\n      },\n      \"customWidth\": \"50\",\n      \"showPin\": true,\n      \"name\": \"query - 20 - Copy\"\n    },\n    {\n      \"type\": 1,\n      \"content\": {\n        \"json\": \"This chart shows the number of successful and un-successful brokered sessions by host pools.\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"Logins\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"text - 20\"\n    },\n    {\n      \"type\": 1,\n      \"content\": {\n        \"json\": \"This chart shows the average login time for users to the host pools. The duration covers all steps between clicking the application icon up to notification of the RD agent that the session is ready. This includes all successful logins and reconnections to sessions.\"\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"Logins\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"text - 20 - Copy\"\n    },\n    {\n      \"type\": 1,\n      \"content\": {\n        \"json\": \"----------\\r\\n\"\n      },\n      \"name\": \"text - 25\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"WVDErrors \\r\\n| summarize arg_max(TimeGenerated, *) by CorrelationId  // workaround to filter \\\"double-entries\\\"\\r\\n| join kind=leftouter (\\r\\n    WVDConnections | summarize arg_max(TimeGenerated, *) by CorrelationId\\r\\n) on CorrelationId  // join the latest WVDConnection\\r\\n| extend HostPool=split(_ResourceId,\\\"/\\\")[8]\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"Unspecified error\\\",\\\"Unspecified error\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"The system cannot open the file.\\\",\\\"The system cannot open the file.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"The RPC server is unavailable.\\\",\\\"The RPC server is unavailable.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"No such interface supported\\\",\\\"No such interface supported\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"No process is on the other end of the pipe.\\\",\\\"No process is on the other end of the pipe.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"Operation aborted\\\",\\\"\\tOperation aborted\\\",CodeSymbolic) // workaround\\r\\n| where  TimeGenerated {TimeRange} and HostPool==\\\"{HostPool}\\\" and UserName !=\\\"\\\" and (\\\"{UserSelector}\\\"==\\\"\\\" or UserName in ('' {UserSelector})) and (column_ifexists(\\\"SessionHostName\\\",\\\"*\\\")==\\\"*\\\" or \\\"{SessionHostSelector}\\\"==\\\"\\\" or column_ifexists(\\\"SessionHostName\\\",\\\"\\\") in ('' {SessionHostSelector})) and (column_ifexists(\\\"CodeSymbolic\\\",\\\"*\\\")==\\\"*\\\" or \\\"{ErrorSelector}\\\"==\\\"\\\" or column_ifexists(\\\"CodeSymbolic\\\",\\\"\\\") in ('' {ErrorSelector}))\\r\\n| extend IPSegmentC=strcat(split(ClientSideIPAddress,\\\".\\\")[0],\\\".\\\",split(ClientSideIPAddress,\\\".\\\")[1],\\\".\\\",split(ClientSideIPAddress,\\\".\\\")[2])\\r\\n| summarize Count=count() by CodeSymbolic\",\n        \"size\": 1,\n        \"title\": \"Errors by reason\",\n        \"timeContext\": {\n          \"durationMs\": 2592000000\n        },\n        \"exportFieldName\": \"series\",\n        \"exportParameterName\": \"Select_ErrorSourceSignature\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"visualization\": \"piechart\",\n        \"gridSettings\": {\n          \"filter\": true\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"Logins\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - 12\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"WVDErrors \\r\\n| summarize arg_max(TimeGenerated, *) by CorrelationId  // workaround to filter \\\"double-entries\\\"\\r\\n| join kind=leftouter (\\r\\n    WVDConnections | summarize arg_max(TimeGenerated, *) by CorrelationId\\r\\n) on CorrelationId  // join the latest WVDConnection\\r\\n| extend HostPool=split(_ResourceId,\\\"/\\\")[8]\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"Unspecified error\\\",\\\"Unspecified error\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"The system cannot open the file.\\\",\\\"The system cannot open the file.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"The RPC server is unavailable.\\\",\\\"The RPC server is unavailable.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"No such interface supported\\\",\\\"No such interface supported\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"No process is on the other end of the pipe.\\\",\\\"No process is on the other end of the pipe.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"Operation aborted\\\",\\\"\\tOperation aborted\\\",CodeSymbolic) // workaround\\r\\n| where  TimeGenerated {TimeRange} and HostPool==\\\"{HostPool}\\\" and UserName !=\\\"\\\" and (\\\"{UserSelector}\\\"==\\\"\\\" or UserName in ('' {UserSelector})) and (column_ifexists(\\\"SessionHostName\\\",\\\"*\\\")==\\\"*\\\" or \\\"{SessionHostSelector}\\\"==\\\"\\\" or column_ifexists(\\\"SessionHostName\\\",\\\"\\\") in ('' {SessionHostSelector})) and (column_ifexists(\\\"CodeSymbolic\\\",\\\"*\\\")==\\\"*\\\" or \\\"{ErrorSelector}\\\"==\\\"\\\" or column_ifexists(\\\"CodeSymbolic\\\",\\\"\\\") in ('' {ErrorSelector}))\\r\\n| extend IPSegmentC=strcat(split(ClientSideIPAddress,\\\".\\\")[0],\\\".\\\",split(ClientSideIPAddress,\\\".\\\")[1],\\\".\\\",split(ClientSideIPAddress,\\\".\\\")[2])\\r\\n| summarize Count=count() by Source\",\n        \"size\": 1,\n        \"title\": \"Errors by source\",\n        \"timeContext\": {\n          \"durationMs\": 2592000000\n        },\n        \"exportFieldName\": \"series\",\n        \"exportParameterName\": \"Select_ErrorSourceSignature\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"visualization\": \"piechart\",\n        \"gridSettings\": {\n          \"filter\": true\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"Logins\"\n      },\n      \"customWidth\": \"50\",\n      \"name\": \"query - 13\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"WVDErrors | summarize arg_max(TimeGenerated, *) by CorrelationId\\r\\n| extend HostPool=split(_ResourceId,\\\"/\\\")[8]\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"Unspecified error\\\",\\\"Unspecified error\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"The system cannot open the file.\\\",\\\"The system cannot open the file.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"The RPC server is unavailable.\\\",\\\"The RPC server is unavailable.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"No such interface supported\\\",\\\"No such interface supported\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"No process is on the other end of the pipe.\\\",\\\"No process is on the other end of the pipe.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"Operation aborted\\\",\\\"\\tOperation aborted\\\",CodeSymbolic) // workaround\\r\\n| where  TimeGenerated {TimeRange} and HostPool==\\\"{HostPool}\\\" and UserName !=\\\"\\\" and (\\\"{UserSelector}\\\"==\\\"\\\" or UserName in ('' {UserSelector})) and (column_ifexists(\\\"SessionHostName\\\",\\\"*\\\")==\\\"*\\\" or \\\"{SessionHostSelector}\\\"==\\\"\\\" or column_ifexists(\\\"SessionHostName\\\",\\\"\\\") in ('' {SessionHostSelector})) and (column_ifexists(\\\"CodeSymbolic\\\",\\\"*\\\")==\\\"*\\\" or \\\"{ErrorSelector}\\\"==\\\"\\\" or column_ifexists(\\\"CodeSymbolic\\\",\\\"\\\") in ('' {ErrorSelector}) or CodeSymbolic==\\\"\\\")\\r\\n| where Source==\\\"{Select_ErrorSourceSignature}\\\" or CodeSymbolic==\\\"{Select_ErrorSourceSignature}\\\"\\r\\n| summarize Errors=count() by CodeSymbolic\\r\\n| order by Errors desc\\r\\n\",\n        \"size\": 1,\n        \"title\": \"Errors by source/reason: {Select_ErrorSourceSignature}\",\n        \"timeContext\": {\n          \"durationMs\": 2592000000\n        },\n        \"exportFieldName\": \"CodeSymbolic\",\n        \"exportParameterName\": \"Select_CodeSymbolicSignature\",\n        \"exportToExcelOptions\": \"all\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"visualization\": \"table\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"Signature\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"Success\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              }\n            },\n            {\n              \"columnMatch\": \"Errors\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              }\n            },\n            {\n              \"columnMatch\": \"Error rate\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              },\n              \"numberFormat\": {\n                \"unit\": 1,\n                \"options\": {\n                  \"style\": \"percent\",\n                  \"minimumFractionDigits\": 1,\n                  \"maximumFractionDigits\": 1\n                }\n              }\n            },\n            {\n              \"columnMatch\": \"Count\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              }\n            }\n          ],\n          \"filter\": true\n        },\n        \"sortBy\": []\n      },\n      \"conditionalVisibilities\": [\n        {\n          \"parameterName\": \"selectedTab\",\n          \"comparison\": \"isEqualTo\",\n          \"value\": \"Logins\"\n        },\n        {\n          \"parameterName\": \"Select_ErrorSourceSignature\",\n          \"comparison\": \"isNotEqualTo\"\n        }\n      ],\n      \"customWidth\": \"100\",\n      \"name\": \"query - 13 - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"WVDErrors | summarize arg_max(TimeGenerated, *) by CorrelationId\\r\\n| extend HostPool=split(_ResourceId,\\\"/\\\")[8]\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"Unspecified error\\\",\\\"Unspecified error\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"The system cannot open the file.\\\",\\\"The system cannot open the file.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"The RPC server is unavailable.\\\",\\\"The RPC server is unavailable.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"No such interface supported\\\",\\\"No such interface supported\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"No process is on the other end of the pipe.\\\",\\\"No process is on the other end of the pipe.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"Operation aborted\\\",\\\"\\tOperation aborted\\\",CodeSymbolic) // workaround\\r\\n| where  TimeGenerated {TimeRange} and HostPool==\\\"{HostPool}\\\" and UserName !=\\\"\\\" and (\\\"{UserSelector}\\\"==\\\"\\\" or UserName in ('' {UserSelector})) and (column_ifexists(\\\"SessionHostName\\\",\\\"*\\\")==\\\"*\\\" or \\\"{SessionHostSelector}\\\"==\\\"\\\" or column_ifexists(\\\"SessionHostName\\\",\\\"\\\") in ('' {SessionHostSelector})) and CodeSymbolic==\\\"{Select_CodeSymbolicSignature}\\\"\\r\\n| where Source==\\\"{Select_ErrorSourceSignature}\\\" or CodeSymbolic==\\\"{Select_ErrorSourceSignature}\\\"\\r\\n| summarize Errors=count() by Message\\r\\n| order by Errors desc\\r\\n\",\n        \"size\": 1,\n        \"title\": \"Errors by source and symbolic: {Select_ErrorSourceSignature} / {Select_CodeSymbolicSignature}\",\n        \"timeContext\": {\n          \"durationMs\": 2592000000\n        },\n        \"exportToExcelOptions\": \"all\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"visualization\": \"table\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"Signature\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"Success\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              }\n            },\n            {\n              \"columnMatch\": \"Errors\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              }\n            },\n            {\n              \"columnMatch\": \"Error rate\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              },\n              \"numberFormat\": {\n                \"unit\": 1,\n                \"options\": {\n                  \"style\": \"percent\",\n                  \"minimumFractionDigits\": 1,\n                  \"maximumFractionDigits\": 1\n                }\n              }\n            },\n            {\n              \"columnMatch\": \"Count\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              }\n            }\n          ],\n          \"filter\": true,\n          \"sortBy\": [\n            {\n              \"itemKey\": \"$gen_bar_Errors_1\",\n              \"sortOrder\": 2\n            }\n          ]\n        },\n        \"sortBy\": [\n          {\n            \"itemKey\": \"$gen_bar_Errors_1\",\n            \"sortOrder\": 2\n          }\n        ]\n      },\n      \"conditionalVisibilities\": [\n        {\n          \"parameterName\": \"selectedTab\",\n          \"comparison\": \"isEqualTo\",\n          \"value\": \"Logins\"\n        },\n        {\n          \"parameterName\": \"Select_CodeSymbolicSignature\",\n          \"comparison\": \"isNotEqualTo\"\n        }\n      ],\n      \"customWidth\": \"100\",\n      \"name\": \"query - 13 - Copy - Copy\"\n    },\n    {\n      \"type\": 1,\n      \"content\": {\n        \"json\": \"----------\\r\\n\"\n      },\n      \"name\": \"text - 26\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"WVDConnections | summarize arg_max(TimeGenerated, *) by CorrelationId\\r\\n| summarize arg_max(TimeGenerated, *) by CorrelationId  // workaround to filter \\\"double-entries\\\"\\r\\n| join kind=leftouter (\\r\\n    WVDErrors | summarize arg_max(TimeGenerated, *) by CorrelationId\\r\\n) on CorrelationId\\r\\n| extend HostPool=split(_ResourceId,\\\"/\\\")[8]\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"Unspecified error\\\",\\\"Unspecified error\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"The system cannot open the file.\\\",\\\"The system cannot open the file.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"The RPC server is unavailable.\\\",\\\"The RPC server is unavailable.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"No such interface supported\\\",\\\"No such interface supported\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"No process is on the other end of the pipe.\\\",\\\"No process is on the other end of the pipe.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"Operation aborted\\\",\\\"\\tOperation aborted\\\",CodeSymbolic) // workaround\\r\\n| where  TimeGenerated {TimeRange} and HostPool==\\\"{HostPool}\\\" and UserName !=\\\"\\\" and (\\\"{UserSelector}\\\"==\\\"\\\" or UserName in ('' {UserSelector})) and (column_ifexists(\\\"SessionHostName\\\",\\\"*\\\")==\\\"*\\\" or \\\"{SessionHostSelector}\\\"==\\\"\\\" or column_ifexists(\\\"SessionHostName\\\",\\\"\\\") in ('' {SessionHostSelector})) and (column_ifexists(\\\"CodeSymbolic\\\",\\\"*\\\")==\\\"*\\\" or \\\"{ErrorSelector}\\\"==\\\"\\\" or column_ifexists(\\\"CodeSymbolic\\\",\\\"\\\") in ('' {ErrorSelector}) or CodeSymbolic==\\\"\\\")\\r\\n| extend IPSegmentC=strcat(split(ClientSideIPAddress,\\\".\\\")[0],\\\".\\\",split(ClientSideIPAddress,\\\".\\\")[1],\\\".\\\",split(ClientSideIPAddress,\\\".\\\")[2])\\r\\n| extend Signature=strcat(ClientType,\\\"#\\\",ClientVersion)\\r\\n| summarize Success=countif(CodeSymbolic==\\\"\\\"), Errors=countif(CodeSymbolic!=\\\"\\\") by ClientType, ClientVersion, Signature\\r\\n| extend [\\\"Error rate\\\"]=Errors*1.0/(Success+Errors)\\r\\n| order by Errors\\r\\n\",\n        \"size\": 1,\n        \"title\": \"Errors by client\",\n        \"timeContext\": {\n          \"durationMs\": 2592000000\n        },\n        \"exportFieldName\": \"Signature\",\n        \"exportParameterName\": \"Select_SourceSignature\",\n        \"showExportToExcel\": true,\n        \"exportToExcelOptions\": \"all\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"visualization\": \"table\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"Signature\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"Success\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              }\n            },\n            {\n              \"columnMatch\": \"Errors\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              }\n            },\n            {\n              \"columnMatch\": \"Error rate\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              },\n              \"numberFormat\": {\n                \"unit\": 1,\n                \"options\": {\n                  \"style\": \"percent\",\n                  \"minimumFractionDigits\": 1,\n                  \"maximumFractionDigits\": 1\n                }\n              }\n            },\n            {\n              \"columnMatch\": \"Count\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              }\n            }\n          ],\n          \"rowLimit\": 1000,\n          \"filter\": true,\n          \"sortBy\": [\n            {\n              \"itemKey\": \"$gen_bar_Error rate_5\",\n              \"sortOrder\": 2\n            }\n          ]\n        },\n        \"sortBy\": [\n          {\n            \"itemKey\": \"$gen_bar_Error rate_5\",\n            \"sortOrder\": 2\n          }\n        ]\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"Logins\"\n      },\n      \"customWidth\": \"33\",\n      \"name\": \"query - 13 - Copy - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"WVDConnections | summarize arg_max(TimeGenerated, *) by CorrelationId\\r\\n| summarize arg_max(TimeGenerated, *) by CorrelationId  // workaround to filter \\\"double-entries\\\"\\r\\n| join kind=leftouter (\\r\\n    WVDErrors | summarize arg_max(TimeGenerated, *) by CorrelationId\\r\\n) on CorrelationId\\r\\n| extend HostPool=split(_ResourceId,\\\"/\\\")[8]\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"Unspecified error\\\",\\\"Unspecified error\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"The system cannot open the file.\\\",\\\"The system cannot open the file.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"The RPC server is unavailable.\\\",\\\"The RPC server is unavailable.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"No such interface supported\\\",\\\"No such interface supported\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"No process is on the other end of the pipe.\\\",\\\"No process is on the other end of the pipe.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"Operation aborted\\\",\\\"\\tOperation aborted\\\",CodeSymbolic) // workaround\\r\\n| where  TimeGenerated {TimeRange} and HostPool==\\\"{HostPool}\\\" and UserName !=\\\"\\\" and (\\\"{UserSelector}\\\"==\\\"\\\" or UserName in ('' {UserSelector})) and (column_ifexists(\\\"SessionHostName\\\",\\\"*\\\")==\\\"*\\\" or \\\"{SessionHostSelector}\\\"==\\\"\\\" or column_ifexists(\\\"SessionHostName\\\",\\\"\\\") in ('' {SessionHostSelector})) and (column_ifexists(\\\"CodeSymbolic\\\",\\\"*\\\")==\\\"*\\\" or \\\"{ErrorSelector}\\\"==\\\"\\\" or column_ifexists(\\\"CodeSymbolic\\\",\\\"\\\") in ('' {ErrorSelector}) or CodeSymbolic==\\\"\\\")\\r\\n| extend IPSegmentC=strcat(split(ClientSideIPAddress,\\\".\\\")[0],\\\".\\\",split(ClientSideIPAddress,\\\".\\\")[1],\\\".\\\",split(ClientSideIPAddress,\\\".\\\")[2])\\r\\n| summarize Success=countif(CodeSymbolic==\\\"\\\"), Errors=countif(CodeSymbolic!=\\\"\\\") by [\\\"IP-Segment (C)\\\"]=IPSegmentC\\r\\n| extend [\\\"Error rate\\\"]=Errors*1.0/(Success+Errors)\\r\\n| order by Errors\",\n        \"size\": 1,\n        \"title\": \"Errors by IP segment (class C)\",\n        \"timeContext\": {\n          \"durationMs\": 2592000000\n        },\n        \"exportFieldName\": \"IP-Segment (C)\",\n        \"exportParameterName\": \"Select_SourceSignature\",\n        \"showExportToExcel\": true,\n        \"exportToExcelOptions\": \"all\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"visualization\": \"table\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"Success\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              }\n            },\n            {\n              \"columnMatch\": \"Errors\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              }\n            },\n            {\n              \"columnMatch\": \"Error rate\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              },\n              \"numberFormat\": {\n                \"unit\": 1,\n                \"options\": {\n                  \"style\": \"percent\",\n                  \"minimumFractionDigits\": 1,\n                  \"maximumFractionDigits\": 1\n                }\n              }\n            }\n          ],\n          \"rowLimit\": 1000,\n          \"filter\": true\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"Logins\"\n      },\n      \"customWidth\": \"33\",\n      \"name\": \"query - 13 - Copy - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"WVDConnections | summarize arg_max(TimeGenerated, *) by CorrelationId\\r\\n| summarize arg_max(TimeGenerated, *) by CorrelationId  // workaround to filter \\\"double-entries\\\"\\r\\n| join kind=leftouter (\\r\\n    WVDErrors | summarize arg_max(TimeGenerated, *) by CorrelationId\\r\\n) on CorrelationId\\r\\n| extend HostPool=split(_ResourceId,\\\"/\\\")[8]\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"Unspecified error\\\",\\\"Unspecified error\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"The system cannot open the file.\\\",\\\"The system cannot open the file.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"The RPC server is unavailable.\\\",\\\"The RPC server is unavailable.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"No such interface supported\\\",\\\"No such interface supported\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"No process is on the other end of the pipe.\\\",\\\"No process is on the other end of the pipe.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"Operation aborted\\\",\\\"\\tOperation aborted\\\",CodeSymbolic) // workaround\\r\\n| where  TimeGenerated {TimeRange} and HostPool==\\\"{HostPool}\\\" and UserName !=\\\"\\\" and (\\\"{UserSelector}\\\"==\\\"\\\" or UserName in ('' {UserSelector})) and (column_ifexists(\\\"SessionHostName\\\",\\\"*\\\")==\\\"*\\\" or \\\"{SessionHostSelector}\\\"==\\\"\\\" or column_ifexists(\\\"SessionHostName\\\",\\\"\\\") in ('' {SessionHostSelector})) and (column_ifexists(\\\"CodeSymbolic\\\",\\\"*\\\")==\\\"*\\\" or \\\"{ErrorSelector}\\\"==\\\"\\\" or column_ifexists(\\\"CodeSymbolic\\\",\\\"\\\") in ('' {ErrorSelector}) or CodeSymbolic==\\\"\\\")\\r\\n| extend IPSegmentC=strcat(split(ClientSideIPAddress,\\\".\\\")[0],\\\".\\\",split(ClientSideIPAddress,\\\".\\\")[1],\\\".\\\",split(ClientSideIPAddress,\\\".\\\")[2])\\r\\n| summarize Success=countif(CodeSymbolic==\\\"\\\"), Errors=countif(CodeSymbolic!=\\\"\\\") by Version=SessionHostAgentVersion\\r\\n| extend [\\\"Error rate\\\"]=Errors*1.0/(Success+Errors)\\r\\n| order by Errors\",\n        \"size\": 1,\n        \"title\": \"Errors by Session Host Agent\",\n        \"timeContext\": {\n          \"durationMs\": 2592000000\n        },\n        \"exportFieldName\": \"Version\",\n        \"exportParameterName\": \"Select_SourceSignature\",\n        \"showExportToExcel\": true,\n        \"exportToExcelOptions\": \"all\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"visualization\": \"table\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"Success\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              }\n            },\n            {\n              \"columnMatch\": \"Errors\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              }\n            },\n            {\n              \"columnMatch\": \"Error rate\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              },\n              \"numberFormat\": {\n                \"unit\": 1,\n                \"options\": {\n                  \"style\": \"percent\",\n                  \"minimumFractionDigits\": 1,\n                  \"maximumFractionDigits\": 1\n                }\n              }\n            }\n          ],\n          \"filter\": true\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"Logins\"\n      },\n      \"customWidth\": \"33\",\n      \"name\": \"query - 13 - Copy - Copy - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"WVDConnections | summarize arg_max(TimeGenerated, *) by CorrelationId\\r\\n| summarize arg_max(TimeGenerated, *) by CorrelationId  // workaround to filter \\\"double-entries\\\"\\r\\n| join kind=leftouter (\\r\\n    WVDErrors | summarize arg_max(TimeGenerated, *) by CorrelationId\\r\\n) on CorrelationId\\r\\n| extend HostPool=split(_ResourceId,\\\"/\\\")[8]\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"Unspecified error\\\",\\\"Unspecified error\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"The system cannot open the file.\\\",\\\"The system cannot open the file.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"The RPC server is unavailable.\\\",\\\"The RPC server is unavailable.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"No such interface supported\\\",\\\"No such interface supported\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"No process is on the other end of the pipe.\\\",\\\"No process is on the other end of the pipe.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"Operation aborted\\\",\\\"\\tOperation aborted\\\",CodeSymbolic) // workaround\\r\\n| where  TimeGenerated {TimeRange} and HostPool==\\\"{HostPool}\\\" and UserName !=\\\"\\\" and (\\\"{UserSelector}\\\"==\\\"\\\" or UserName in ('' {UserSelector})) and (column_ifexists(\\\"SessionHostName\\\",\\\"*\\\")==\\\"*\\\" or \\\"{SessionHostSelector}\\\"==\\\"\\\" or column_ifexists(\\\"SessionHostName\\\",\\\"\\\") in ('' {SessionHostSelector})) and (column_ifexists(\\\"CodeSymbolic\\\",\\\"*\\\")==\\\"*\\\" or \\\"{ErrorSelector}\\\"==\\\"\\\" or column_ifexists(\\\"CodeSymbolic\\\",\\\"\\\") in ('' {ErrorSelector}) or CodeSymbolic==\\\"\\\")\\r\\n| extend IPSegmentC=strcat(split(ClientSideIPAddress,\\\".\\\")[0],\\\".\\\",split(ClientSideIPAddress,\\\".\\\")[1],\\\".\\\",split(ClientSideIPAddress,\\\".\\\")[2]),ClientSignature=strcat(ClientType,\\\"#\\\",ClientVersion)\\r\\n| where IPSegmentC==\\\"{Select_SourceSignature}\\\" or ClientSignature==\\\"{Select_SourceSignature}\\\" or SessionHostAgentVersion==\\\"{Select_SourceSignature}\\\"\\r\\n| extend CodeSymbolic=iff(CodeSymbolic==\\\"\\\",\\\"Success\\\",CodeSymbolic)\\r\\n| where CodeSymbolic!=\\\"Success\\\"\\r\\n| summarize Count=count() by CodeSymbolic\",\n        \"size\": 0,\n        \"title\": \"Errors raised by category (in 15m bins) for {Select_SourceSignature}\",\n        \"timeContext\": {\n          \"durationMs\": 2592000000\n        },\n        \"exportFieldName\": \"series\",\n        \"exportParameterName\": \"Select_DetailCodeSymbolic\",\n        \"exportDefaultValue\": \"-\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"visualization\": \"barchart\",\n        \"gridSettings\": {\n          \"filter\": true\n        }\n      },\n      \"conditionalVisibilities\": [\n        {\n          \"parameterName\": \"selectedTab\",\n          \"comparison\": \"isEqualTo\",\n          \"value\": \"Logins\"\n        },\n        {\n          \"parameterName\": \"Select_SourceSignature\",\n          \"comparison\": \"isNotEqualTo\"\n        }\n      ],\n      \"customWidth\": \"30\",\n      \"name\": \"query - 14 - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"WVDConnections | summarize arg_max(TimeGenerated, *) by CorrelationId\\r\\n| summarize arg_max(TimeGenerated, *) by CorrelationId  // workaround to filter \\\"double-entries\\\"\\r\\n| join kind=leftouter (\\r\\n    WVDErrors | summarize arg_max(TimeGenerated, *) by CorrelationId\\r\\n) on CorrelationId\\r\\n| extend HostPool=split(_ResourceId,\\\"/\\\")[8]\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"Unspecified error\\\",\\\"Unspecified error\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"The system cannot open the file.\\\",\\\"The system cannot open the file.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"The RPC server is unavailable.\\\",\\\"The RPC server is unavailable.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"No such interface supported\\\",\\\"No such interface supported\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"No process is on the other end of the pipe.\\\",\\\"No process is on the other end of the pipe.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"Operation aborted\\\",\\\"\\tOperation aborted\\\",CodeSymbolic) // workaround\\r\\n| where  TimeGenerated {TimeRange} and HostPool==\\\"{HostPool}\\\" and UserName !=\\\"\\\" and (\\\"{UserSelector}\\\"==\\\"\\\" or UserName in ('' {UserSelector})) and (column_ifexists(\\\"SessionHostName\\\",\\\"*\\\")==\\\"*\\\" or \\\"{SessionHostSelector}\\\"==\\\"\\\" or column_ifexists(\\\"SessionHostName\\\",\\\"\\\") in ('' {SessionHostSelector})) and (column_ifexists(\\\"CodeSymbolic\\\",\\\"*\\\")==\\\"*\\\" or \\\"{ErrorSelector}\\\"==\\\"\\\" or column_ifexists(\\\"CodeSymbolic\\\",\\\"\\\") in ('' {ErrorSelector}) or CodeSymbolic==\\\"\\\")\\r\\n| extend IPSegmentC=strcat(split(ClientSideIPAddress,\\\".\\\")[0],\\\".\\\",split(ClientSideIPAddress,\\\".\\\")[1],\\\".\\\",split(ClientSideIPAddress,\\\".\\\")[2]),ClientSignature=strcat(ClientType,\\\"#\\\",ClientVersion)\\r\\n| where IPSegmentC==\\\"{Select_SourceSignature}\\\" or ClientSignature==\\\"{Select_SourceSignature}\\\" or SessionHostAgentVersion==\\\"{Select_SourceSignature}\\\"\\r\\n| where \\\"{Select_DetailCodeSymbolic}\\\"==\\\"-\\\" or \\\"{Select_DetailCodeSymbolic}\\\"==\\\"\\\" or CodeSymbolic==\\\"{Select_DetailCodeSymbolic}\\\"\\r\\n| extend CodeSymbolic=iff(CodeSymbolic==\\\"\\\",\\\"Success\\\",CodeSymbolic)\\r\\n| summarize Count=count() by bin(TimeGenerated, 15m), CodeSymbolic\",\n        \"size\": 0,\n        \"title\": \"Errors raised by time (in 15m bins) for {Select_SourceSignature}   {Select_DetailCodeSymbolic}\",\n        \"timeContext\": {\n          \"durationMs\": 2592000000\n        },\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"visualization\": \"scatterchart\",\n        \"gridSettings\": {\n          \"filter\": true\n        }\n      },\n      \"conditionalVisibilities\": [\n        {\n          \"parameterName\": \"selectedTab\",\n          \"comparison\": \"isEqualTo\",\n          \"value\": \"Logins\"\n        },\n        {\n          \"parameterName\": \"Select_SourceSignature\",\n          \"comparison\": \"isNotEqualTo\"\n        }\n      ],\n      \"customWidth\": \"70\",\n      \"name\": \"query - 14\"\n    },\n    {\n      \"type\": 1,\n      \"content\": {\n        \"json\": \"----------\\r\\n\"\n      },\n      \"name\": \"text - 29\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"WVDErrors \\r\\n| extend HostPool=split(_ResourceId,\\\"/\\\")[8]\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"Unspecified error\\\",\\\"Unspecified error\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"The system cannot open the file.\\\",\\\"The system cannot open the file.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"The RPC server is unavailable.\\\",\\\"The RPC server is unavailable.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"No such interface supported\\\",\\\"No such interface supported\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"No process is on the other end of the pipe.\\\",\\\"No process is on the other end of the pipe.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"Operation aborted\\\",\\\"\\tOperation aborted\\\",CodeSymbolic) // workaround\\r\\n| where  TimeGenerated {TimeRange} and HostPool==\\\"{HostPool}\\\" and UserName !=\\\"\\\" and (\\\"{UserSelector}\\\"==\\\"\\\" or UserName in ('' {UserSelector})) and (column_ifexists(\\\"SessionHostName\\\",\\\"*\\\")==\\\"*\\\" or \\\"{SessionHostSelector}\\\"==\\\"\\\" or column_ifexists(\\\"SessionHostName\\\",\\\"\\\") in ('' {SessionHostSelector})) and (column_ifexists(\\\"CodeSymbolic\\\",\\\"*\\\")==\\\"*\\\" or \\\"{ErrorSelector}\\\"==\\\"\\\" or column_ifexists(\\\"CodeSymbolic\\\",\\\"\\\") in ('' {ErrorSelector}))\\r\\n| summarize Count=count() by bin(TimeGenerated, 15m), CodeSymbolic\",\n        \"size\": 0,\n        \"title\": \"Errors raised by time (in 15m bins)\",\n        \"timeContext\": {\n          \"durationMs\": 2592000000\n        },\n        \"timeBrushParameterName\": \"Brush_Overview\",\n        \"timeBrushExportOnlyWhenBrushed\": true,\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"visualization\": \"scatterchart\",\n        \"gridSettings\": {\n          \"filter\": true\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"Logins\"\n      },\n      \"name\": \"query - 14 - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"WVDErrors \\r\\n| extend HostPool=split(_ResourceId,\\\"/\\\")[8]\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"Unspecified error\\\",\\\"Unspecified error\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"The system cannot open the file.\\\",\\\"The system cannot open the file.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"The RPC server is unavailable.\\\",\\\"The RPC server is unavailable.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"No such interface supported\\\",\\\"No such interface supported\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"No process is on the other end of the pipe.\\\",\\\"No process is on the other end of the pipe.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"Operation aborted\\\",\\\"\\tOperation aborted\\\",CodeSymbolic) // workaround\\r\\n| where  TimeGenerated {Brush_Overview} and HostPool==\\\"{HostPool}\\\" and UserName !=\\\"\\\" and (\\\"{UserSelector}\\\"==\\\"\\\" or UserName in ('' {UserSelector})) and (column_ifexists(\\\"SessionHostName\\\",\\\"*\\\")==\\\"*\\\" or \\\"{SessionHostSelector}\\\"==\\\"\\\" or column_ifexists(\\\"SessionHostName\\\",\\\"\\\") in ('' {SessionHostSelector})) and (column_ifexists(\\\"CodeSymbolic\\\",\\\"*\\\")==\\\"*\\\" or \\\"{ErrorSelector}\\\"==\\\"\\\" or column_ifexists(\\\"CodeSymbolic\\\",\\\"\\\") in ('' {ErrorSelector}))\\r\\n| summarize Count=count() by TimeGenerated, CodeSymbolic\",\n        \"size\": 0,\n        \"title\": \"Errors raised by selected time frame\",\n        \"timeContext\": {\n          \"durationMs\": 2592000000\n        },\n        \"timeBrushParameterName\": \"Brush_OverviewDetail\",\n        \"timeBrushExportOnlyWhenBrushed\": true,\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"visualization\": \"scatterchart\",\n        \"gridSettings\": {\n          \"filter\": true\n        }\n      },\n      \"conditionalVisibilities\": [\n        {\n          \"parameterName\": \"selectedTab\",\n          \"comparison\": \"isEqualTo\",\n          \"value\": \"Logins\"\n        },\n        {\n          \"parameterName\": \"Brush_Overview\",\n          \"comparison\": \"isNotEqualTo\"\n        }\n      ],\n      \"name\": \"query - 14 - Copy - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"WVDErrors\\r\\n| summarize arg_max(TimeGenerated, *) by CorrelationId  // workaround to filter \\\"double-entries\\\"\\r\\n| join kind=leftouter (\\r\\n    WVDConnections | summarize arg_max(TimeGenerated, *) by CorrelationId\\r\\n) on CorrelationId\\r\\n| extend HostPool=split(_ResourceId,\\\"/\\\")[8]\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"Unspecified error\\\",\\\"Unspecified error\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"The system cannot open the file.\\\",\\\"The system cannot open the file.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"The RPC server is unavailable.\\\",\\\"The RPC server is unavailable.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"No such interface supported\\\",\\\"No such interface supported\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"No process is on the other end of the pipe.\\\",\\\"No process is on the other end of the pipe.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"Operation aborted\\\",\\\"\\tOperation aborted\\\",CodeSymbolic) // workaround\\r\\n| where  TimeGenerated {Brush_OverviewDetail} and HostPool==\\\"{HostPool}\\\" and UserName !=\\\"\\\" and (\\\"{UserSelector}\\\"==\\\"\\\" or UserName in ('' {UserSelector})) and (column_ifexists(\\\"SessionHostName\\\",\\\"*\\\")==\\\"*\\\" or \\\"{SessionHostSelector}\\\"==\\\"\\\" or column_ifexists(\\\"SessionHostName\\\",\\\"\\\") in ('' {SessionHostSelector})) and (column_ifexists(\\\"CodeSymbolic\\\",\\\"*\\\")==\\\"*\\\" or \\\"{ErrorSelector}\\\"==\\\"\\\" or column_ifexists(\\\"CodeSymbolic\\\",\\\"\\\") in ('' {ErrorSelector}) or CodeSymbolic==\\\"\\\")\\r\\n| project CorrelationId, TimeStamp=TimeGenerated, User=UserName, Activity=ActivityType, Source, CodeSymbolic, Message, [\\\"Service Error\\\"]=ServiceError, [\\\"Client OS\\\"]=ClientOS, [\\\"Client Version\\\"]=ClientVersion, [\\\"Client Type\\\"]=ClientType, [\\\"Client IP-Address\\\"]=ClientIPAddress, [\\\"Connection Type\\\"]=ConnectionType, [\\\"App or Desktop Name\\\"]=ResourceAlias, [\\\"Session Host Name\\\"]=SessionHostName, [\\\"Session Host IP-Address\\\"]=SessionHostIPAddress, [\\\"Session Host OS-Version\\\"]=SessionHostOSVersion, [\\\"Session Host OS-Description\\\"]=SessionHostOSDescription, [\\\"Session Host Agent-Version\\\"]=SessionHostAgentVersion, [\\\"Session Host Session-Id\\\"]=SessionHostSessionId, [\\\"Gateway Region\\\"]=GatewayRegion, [\\\"Is UDP used\\\"]=UdpUse\\r\\n| order by TimeStamp asc\\r\\n\\r\\n\",\n        \"size\": 1,\n        \"title\": \"Errors raised by selected time frame - Level 2\",\n        \"timeContext\": {\n          \"durationMs\": 2592000000\n        },\n        \"exportFieldName\": \"CorrelationId\",\n        \"exportParameterName\": \"Select_DetailBrushCorrelationId\",\n        \"showExportToExcel\": true,\n        \"exportToExcelOptions\": \"all\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"visualization\": \"table\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"CorrelationId\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"Signature\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"Success\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              }\n            },\n            {\n              \"columnMatch\": \"Errors\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              }\n            },\n            {\n              \"columnMatch\": \"Error rate\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              },\n              \"numberFormat\": {\n                \"unit\": 1,\n                \"options\": {\n                  \"style\": \"percent\",\n                  \"minimumFractionDigits\": 1,\n                  \"maximumFractionDigits\": 1\n                }\n              }\n            },\n            {\n              \"columnMatch\": \"Count\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              }\n            }\n          ],\n          \"rowLimit\": 1000,\n          \"filter\": true,\n          \"sortBy\": [\n            {\n              \"itemKey\": \"CodeSymbolic\",\n              \"sortOrder\": 1\n            }\n          ]\n        },\n        \"sortBy\": [\n          {\n            \"itemKey\": \"CodeSymbolic\",\n            \"sortOrder\": 1\n          }\n        ]\n      },\n      \"conditionalVisibilities\": [\n        {\n          \"parameterName\": \"selectedTab\",\n          \"comparison\": \"isEqualTo\",\n          \"value\": \"Logins\"\n        },\n        {\n          \"parameterName\": \"Brush_OverviewDetail\",\n          \"comparison\": \"isNotEqualTo\"\n        }\n      ],\n      \"customWidth\": \"100\",\n      \"name\": \"query - 13 - Copy - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"WVDCheckpoints\\r\\n| where  TimeGenerated {Brush_OverviewDetail} and CorrelationId==\\\"{Select_DetailBrushCorrelationId}\\\"\\r\\n| project CorrelationId, TimeStamp=TimeGenerated, User=UserName, Activity=ActivityType, Source, Details=Parameters\\r\\n| order by TimeStamp asc\\r\\n\\r\\n\\r\\n\",\n        \"size\": 1,\n        \"title\": \"Trace by selected event\",\n        \"timeContext\": {\n          \"durationMs\": 2592000000\n        },\n        \"showExportToExcel\": true,\n        \"exportToExcelOptions\": \"all\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"visualization\": \"table\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"CorrelationId\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"Signature\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"Success\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              }\n            },\n            {\n              \"columnMatch\": \"Errors\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              }\n            },\n            {\n              \"columnMatch\": \"Error rate\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              },\n              \"numberFormat\": {\n                \"unit\": 1,\n                \"options\": {\n                  \"style\": \"percent\",\n                  \"minimumFractionDigits\": 1,\n                  \"maximumFractionDigits\": 1\n                }\n              }\n            },\n            {\n              \"columnMatch\": \"Count\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              }\n            }\n          ],\n          \"rowLimit\": 1000,\n          \"filter\": true\n        },\n        \"sortBy\": []\n      },\n      \"conditionalVisibilities\": [\n        {\n          \"parameterName\": \"selectedTab\",\n          \"comparison\": \"isEqualTo\",\n          \"value\": \"Logins\"\n        },\n        {\n          \"parameterName\": \"Select_DetailBrushCorrelationId\",\n          \"comparison\": \"isNotEqualTo\"\n        }\n      ],\n      \"customWidth\": \"100\",\n      \"name\": \"query - 13 - Copy - Copy - Copy\"\n    },\n    {\n      \"type\": 1,\n      \"content\": {\n        \"json\": \"----------\\r\\n\"\n      },\n      \"name\": \"text - 27\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"WVDConnections | summarize arg_max(TimeGenerated, *) by CorrelationId\\r\\n| summarize arg_max(TimeGenerated, *) by CorrelationId  // workaround to filter \\\"double-entries\\\"\\r\\n| join kind=leftouter (\\r\\n    WVDErrors | summarize arg_max(TimeGenerated, *) by CorrelationId\\r\\n) on CorrelationId\\r\\n| extend HostPool=split(_ResourceId,\\\"/\\\")[8]\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"Unspecified error\\\",\\\"Unspecified error\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"The system cannot open the file.\\\",\\\"The system cannot open the file.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"The RPC server is unavailable.\\\",\\\"The RPC server is unavailable.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"No such interface supported\\\",\\\"No such interface supported\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"No process is on the other end of the pipe.\\\",\\\"No process is on the other end of the pipe.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"Operation aborted\\\",\\\"\\tOperation aborted\\\",CodeSymbolic) // workaround\\r\\n| where  TimeGenerated {TimeRange} and HostPool==\\\"{HostPool}\\\" and UserName !=\\\"\\\" and (\\\"{UserSelector}\\\"==\\\"\\\" or UserName in ('' {UserSelector})) and (column_ifexists(\\\"SessionHostName\\\",\\\"*\\\")==\\\"*\\\" or \\\"{SessionHostSelector}\\\"==\\\"\\\" or column_ifexists(\\\"SessionHostName\\\",\\\"\\\") in ('' {SessionHostSelector})) and (column_ifexists(\\\"CodeSymbolic\\\",\\\"*\\\")==\\\"*\\\" or \\\"{ErrorSelector}\\\"==\\\"\\\" or column_ifexists(\\\"CodeSymbolic\\\",\\\"\\\") in ('' {ErrorSelector}) or CodeSymbolic==\\\"\\\")\\r\\n| extend IPSegmentC=strcat(split(ClientSideIPAddress,\\\".\\\")[0],\\\".\\\",split(ClientSideIPAddress,\\\".\\\")[1],\\\".\\\",split(ClientSideIPAddress,\\\".\\\")[2])\\r\\n| extend Signature=strcat(ClientType,\\\"#\\\",ClientVersion)\\r\\n| summarize SuccessD=countif(CodeSymbolic==\\\"\\\"), ErrorsD=countif(CodeSymbolic!=\\\"\\\") by UserName, bin(TimeGenerated,1d)\\r\\n| summarize Success=avg(SuccessD), Errors=avg(ErrorsD) by UserName\\r\\n| extend [\\\"Error rate\\\"]=Errors*1.0/(Success+Errors)\\r\\n| order by [\\\"Error rate\\\"]\\r\\n\",\n        \"size\": 0,\n        \"title\": \"Average Errors per User per day\",\n        \"timeContext\": {\n          \"durationMs\": 2592000000\n        },\n        \"exportFieldName\": \"UserName\",\n        \"exportParameterName\": \"Select_AverUserUser\",\n        \"showExportToExcel\": true,\n        \"exportToExcelOptions\": \"all\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"visualization\": \"table\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"Success\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              },\n              \"numberFormat\": {\n                \"unit\": 0,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"minimumFractionDigits\": 1,\n                  \"maximumFractionDigits\": 1\n                }\n              }\n            },\n            {\n              \"columnMatch\": \"Errors\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              },\n              \"numberFormat\": {\n                \"unit\": 0,\n                \"options\": {\n                  \"style\": \"decimal\",\n                  \"minimumFractionDigits\": 1,\n                  \"maximumFractionDigits\": 1\n                }\n              }\n            },\n            {\n              \"columnMatch\": \"Error rate\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              },\n              \"numberFormat\": {\n                \"unit\": 1,\n                \"options\": {\n                  \"style\": \"percent\",\n                  \"minimumFractionDigits\": 1,\n                  \"maximumFractionDigits\": 1\n                }\n              }\n            },\n            {\n              \"columnMatch\": \"Signature\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"Count\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              }\n            }\n          ],\n          \"rowLimit\": 1000,\n          \"filter\": true\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"Logins\"\n      },\n      \"customWidth\": \"100\",\n      \"name\": \"query - 13 - Copy - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"WVDErrors\\r\\n| summarize arg_max(TimeGenerated, *) by CorrelationId  // workaround to filter \\\"double-entries\\\"\\r\\n| join kind=leftouter (\\r\\n    WVDConnections | summarize arg_max(TimeGenerated, *) by CorrelationId\\r\\n) on CorrelationId\\r\\n| extend HostPool=split(_ResourceId,\\\"/\\\")[8]\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"Unspecified error\\\",\\\"Unspecified error\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"The system cannot open the file.\\\",\\\"The system cannot open the file.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"The RPC server is unavailable.\\\",\\\"The RPC server is unavailable.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"No such interface supported\\\",\\\"No such interface supported\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"No process is on the other end of the pipe.\\\",\\\"No process is on the other end of the pipe.\\\",CodeSymbolic) // workaround\\r\\n| extend CodeSymbolic=iff(CodeSymbolic startswith_cs \\\"Operation aborted\\\",\\\"\\tOperation aborted\\\",CodeSymbolic) // workaround\\r\\n| where  TimeGenerated {TimeRange} and HostPool==\\\"{HostPool}\\\" and UserName !=\\\"\\\" and (\\\"{UserSelector}\\\"==\\\"\\\" or UserName in ('' {UserSelector})) and (column_ifexists(\\\"SessionHostName\\\",\\\"*\\\")==\\\"*\\\" or \\\"{SessionHostSelector}\\\"==\\\"\\\" or column_ifexists(\\\"SessionHostName\\\",\\\"\\\") in ('' {SessionHostSelector})) and (column_ifexists(\\\"CodeSymbolic\\\",\\\"*\\\")==\\\"*\\\" or \\\"{ErrorSelector}\\\"==\\\"\\\" or column_ifexists(\\\"CodeSymbolic\\\",\\\"\\\") in ('' {ErrorSelector}) or CodeSymbolic==\\\"\\\")\\r\\n| where UserName==\\\"{Select_AverUserUser}\\\"\\r\\n| project CorrelationId, TimeStamp=TimeGenerated, User=UserName, Activity=ActivityType, Source, CodeSymbolic, Message, [\\\"Service Error\\\"]=ServiceError, [\\\"Client OS\\\"]=ClientOS, [\\\"Client Version\\\"]=ClientVersion, [\\\"Client Type\\\"]=ClientType, [\\\"Client IP-Address\\\"]=ClientIPAddress, [\\\"Connection Type\\\"]=ConnectionType, [\\\"App or Desktop Name\\\"]=ResourceAlias, [\\\"Session Host Name\\\"]=SessionHostName, [\\\"Session Host IP-Address\\\"]=SessionHostIPAddress, [\\\"Session Host OS-Version\\\"]=SessionHostOSVersion, [\\\"Session Host OS-Description\\\"]=SessionHostOSDescription, [\\\"Session Host Agent-Version\\\"]=SessionHostAgentVersion, [\\\"Session Host Session-Id\\\"]=SessionHostSessionId, [\\\"Gateway Region\\\"]=GatewayRegion, [\\\"Is UDP used\\\"]=UdpUse\\r\\n| order by TimeStamp asc\\r\\n\\r\\n\",\n        \"size\": 1,\n        \"title\": \"Errors raised by {Select_AverUserUser}\",\n        \"timeContext\": {\n          \"durationMs\": 2592000000\n        },\n        \"exportFieldName\": \"CorrelationId\",\n        \"exportParameterName\": \"Select_AverUserUserDetail\",\n        \"exportToExcelOptions\": \"all\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"visualization\": \"table\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"CorrelationId\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"Signature\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"Success\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              }\n            },\n            {\n              \"columnMatch\": \"Errors\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              }\n            },\n            {\n              \"columnMatch\": \"Error rate\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              },\n              \"numberFormat\": {\n                \"unit\": 1,\n                \"options\": {\n                  \"style\": \"percent\",\n                  \"minimumFractionDigits\": 1,\n                  \"maximumFractionDigits\": 1\n                }\n              }\n            },\n            {\n              \"columnMatch\": \"Count\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              }\n            }\n          ],\n          \"rowLimit\": 1000,\n          \"filter\": true,\n          \"sortBy\": [\n            {\n              \"itemKey\": \"CodeSymbolic\",\n              \"sortOrder\": 1\n            }\n          ]\n        },\n        \"sortBy\": [\n          {\n            \"itemKey\": \"CodeSymbolic\",\n            \"sortOrder\": 1\n          }\n        ]\n      },\n      \"conditionalVisibilities\": [\n        {\n          \"parameterName\": \"selectedTab\",\n          \"comparison\": \"isEqualTo\",\n          \"value\": \"Logins\"\n        },\n        {\n          \"parameterName\": \"Select_AverUserUser\",\n          \"comparison\": \"isNotEqualTo\"\n        }\n      ],\n      \"customWidth\": \"100\",\n      \"name\": \"query - 13 - Copy - Copy - Copy\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"WVDCheckpoints\\r\\n| where  TimeGenerated {TimeRange} and CorrelationId==\\\"{Select_AverUserUserDetail}\\\"\\r\\n| project CorrelationId, TimeStamp=TimeGenerated, User=UserName, Activity=ActivityType, Source, Details=Parameters\\r\\n| order by TimeStamp asc\\r\\n\\r\\n\\r\\n\",\n        \"size\": 1,\n        \"title\": \"Trace by selected event from {Select_AverUserUser}\",\n        \"timeContext\": {\n          \"durationMs\": 2592000000\n        },\n        \"showExportToExcel\": true,\n        \"exportToExcelOptions\": \"all\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"visualization\": \"table\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"CorrelationId\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"Signature\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"Success\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              }\n            },\n            {\n              \"columnMatch\": \"Errors\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              }\n            },\n            {\n              \"columnMatch\": \"Error rate\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              },\n              \"numberFormat\": {\n                \"unit\": 1,\n                \"options\": {\n                  \"style\": \"percent\",\n                  \"minimumFractionDigits\": 1,\n                  \"maximumFractionDigits\": 1\n                }\n              }\n            },\n            {\n              \"columnMatch\": \"Count\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              }\n            }\n          ],\n          \"rowLimit\": 1000,\n          \"filter\": true\n        },\n        \"sortBy\": []\n      },\n      \"conditionalVisibilities\": [\n        {\n          \"parameterName\": \"selectedTab\",\n          \"comparison\": \"isEqualTo\",\n          \"value\": \"Logins\"\n        },\n        {\n          \"parameterName\": \"Select_AverUserUserDetail\",\n          \"comparison\": \"isNotEqualTo\"\n        }\n      ],\n      \"customWidth\": \"100\",\n      \"name\": \"query - 13 - Copy - Copy - Copy - Copy\"\n    },\n    {\n      \"type\": 1,\n      \"content\": {\n        \"json\": \"----------\\r\\n\"\n      },\n      \"name\": \"text - 28\"\n    },\n    {\n      \"type\": 3,\n      \"content\": {\n        \"version\": \"KqlItem/1.0\",\n        \"query\": \"WVDAgentHealthStatus \\r\\n| extend HostPool=split(_ResourceId,\\\"/\\\")[8] \\r\\n| where  TimeGenerated {TimeRange} and HostPool==\\\"{HostPool}\\\" and (column_ifexists(\\\"SessionHostName\\\",\\\"*\\\")==\\\"*\\\" or \\\"{SessionHostSelector}\\\"==\\\"\\\" or column_ifexists(\\\"SessionHostName\\\",\\\"\\\") in ('' {SessionHostSelector}))\\r\\n| extend SessionHostResourceIdUx=strcat(_ResourceId,\\\"/SessionHosts/\\\",SessionHostName)\\r\\n| order by SessionHostResourceIdUx, StatusTimeStamp\\r\\n| extend AgentVersionPrev=prev(AgentVersion), SxSStackVersionPrev=prev(SxSStackVersion)\\r\\n| extend Change=SessionHostResourceIdUx==prev(SessionHostResourceIdUx) and (AgentVersion!=AgentVersionPrev or SxSStackVersion!=SxSStackVersionPrev)\\r\\n| where Change and AgentVersionPrev !=\\\"\\\" and SessionHostResourceIdUx!=\\\"\\\"\\r\\n| project Timestamp=iff(StatusTimeStamp!=\\\"\\\",StatusTimeStamp,TimeGenerated),[\\\"Sessionhost\\\"]=SessionHostName,OSVersion,[\\\"Agent version\\\"]=AgentVersion,[\\\"Agent version prev.\\\"]=AgentVersionPrev,[\\\"SxSStack version\\\"]=SxSStackVersion,[\\\"SxSStack version prev\\\"]=SxSStackVersionPrev\\r\\n| order by Timestamp\\r\\n\\r\\n\",\n        \"size\": 0,\n        \"title\": \"Agent Updates on Session Hosts\",\n        \"timeContext\": {\n          \"durationMs\": 2592000000\n        },\n        \"showExportToExcel\": true,\n        \"exportToExcelOptions\": \"all\",\n        \"queryType\": 0,\n        \"resourceType\": \"microsoft.operationalinsights/workspaces\",\n        \"visualization\": \"table\",\n        \"gridSettings\": {\n          \"formatters\": [\n            {\n              \"columnMatch\": \"Signature\",\n              \"formatter\": 5\n            },\n            {\n              \"columnMatch\": \"Success\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              }\n            },\n            {\n              \"columnMatch\": \"Errors\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              }\n            },\n            {\n              \"columnMatch\": \"Error rate\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              },\n              \"numberFormat\": {\n                \"unit\": 1,\n                \"options\": {\n                  \"style\": \"percent\",\n                  \"minimumFractionDigits\": 1,\n                  \"maximumFractionDigits\": 1\n                }\n              }\n            },\n            {\n              \"columnMatch\": \"Count\",\n              \"formatter\": 4,\n              \"formatOptions\": {\n                \"palette\": \"blue\"\n              }\n            }\n          ],\n          \"rowLimit\": 1000,\n          \"filter\": true\n        }\n      },\n      \"conditionalVisibility\": {\n        \"parameterName\": \"selectedTab\",\n        \"comparison\": \"isEqualTo\",\n        \"value\": \"Logins\"\n      },\n      \"customWidth\": \"100\",\n      \"name\": \"query - 13 - Copy - Copy - Copy\"\n    }\n  ],\n  \"$schema\": \"https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json\"\n}"
         }
      }
   ]
}