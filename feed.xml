<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ITProCloud Blog</title>
    <description>This is my personal website, which I maintain to support the cloud community. ITProCloud.de is the label I use for tests and demonstrations. ITProCloud.de is not a company in the business sense.</description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 06 Feb 2020 20:43:19 +0100</pubDate>
    <lastBuildDate>Thu, 06 Feb 2020 20:43:19 +0100</lastBuildDate>
    <generator>Jekyll v4.0.0</generator>
    
      <item>
        <title>WVD Admin - Windows Virtual Desktop Administration for CSP and Consulting Partners</title>
        <description>&lt;h1 id=&quot;windows-virtual-desktop-administration-for-csp-and-consulting-partners&quot;&gt;Windows Virtual Desktop Administration for CSP and Consulting Partners&lt;/h1&gt;

&lt;p&gt;Last year I released my windows-based GUI for administrating WVD to the community called WVDAdmin. I had a bunch of updates to share more features. This week I will release version 1.3.0 with will add another feature, especially for providers and consulting companies. From version 1.3.0 WVDAdmin will support a multi-AAD-tenancy mode allowing to switch the Azure AD tenant very easily.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin.MultiTenancy/WVDAdmin.Welcome.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;To enable the multi-AAD-tenancy mode, you must set a registry key. Add the following dword32 to your registry:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-registry&quot;&gt;HKEY_CURRENT_USER\Software\ITProCloud\WVDAdmin
Name:	AadMultiTenant
Type:	DWORD32
Value:	1 (or 0 to disable this mode)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin.MultiTenancy/Registry1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you start WVDAdmin with this setting, a drop-down list will be visible at the welcome screen (see above). If you save a new service principal configuration, it happens to the drop-down list with the friendly name.
All other settings for the image creation or rollout of new session hosts are saved to the context of the selected AAD tenant.&lt;/p&gt;

&lt;p&gt;The authentication settings and other settings are saved in different trees in the registry starting from &lt;em&gt;HKEY_CURRENT_USER\Software\ITProCloud\WVDAdmin\AadMultiTenant&lt;/em&gt;
If you had already used WVDAdmin in the “normal” mode, you could copy the settings from the root of the registry path to the new path for your AAD tenant. To delete a no longer needed AAD-tenant in WVDAdmin, remove the registry key of this one.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin.MultiTenancy/Registry2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don’t change&lt;/strong&gt; the AAD tenant while an operation is in progress. This could result in an error. If you change the AAD tenant, click “Reload all” to read the configuration for the new tenant.&lt;/p&gt;

&lt;p&gt;The AAD multi-tenancy mode helps a lot if you have (like me) multiple clients you are working with.&lt;/p&gt;

&lt;p&gt;Feel free to use it and download the 64-bit Windows application “WVD Admin” from here: &lt;a href=&quot;../assets/files/WVDAdmin.msi&quot;&gt;WVDAdmin Preview&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Read the original blog post about WVDAdmin here: &lt;a href=&quot;https://blog.itprocloud.de/Windows-Virtual-Desktop-Admin/&quot;&gt;https://blog.itprocloud.de/Windows-Virtual-Desktop-Admin&lt;/a&gt;&lt;/p&gt;

</description>
        <pubDate>Tue, 28 Jan 2020 00:00:00 +0100</pubDate>
        <link>/Windows-Virtual-Desktop-Windows-Virtual-Desktop-Administration-for-CSP-and-Consulting-Partners/</link>
        <guid isPermaLink="true">/Windows-Virtual-Desktop-Windows-Virtual-Desktop-Administration-for-CSP-and-Consulting-Partners/</guid>
        
        
        <category>Windows Virtual Desktop</category>
        
      </item>
    
      <item>
        <title>Automatic MSIX App Attach script for Windows Virtual Desktop</title>
        <description>&lt;h1 id=&quot;automatic-msix-app-attach-script-for-wvd&quot;&gt;Automatic MSIX App Attach script for WVD&lt;/h1&gt;

&lt;p&gt;Microsoft provides a preview of MSIX app attach for Windows Virtual desktop. MSIX app attach gives you the possibility to only have a few amounts of images and connect your application to them - without installing. That sounds a little bit like App-V, and from a user perspective, this is slightly comparable:&lt;/p&gt;

&lt;p&gt;You cannot see the application in the file system from outside the app. If you open the app and if you browse to the application folder, you can see this folder. The attaching and links in the start menu “feels” like the use of modern apps from the marketplace. And indeed: The application links in the start menu didn’t refer to the exe-files in the program folder.&lt;/p&gt;

&lt;h2 id=&quot;configuration-of-the-msix-packages-and-assignments&quot;&gt;Configuration of the MSIX packages and assignments&lt;/h2&gt;

&lt;p&gt;If you are in the Windows Insider program, you can test MSIX app attach in a WVD environment. To do this go to the web site &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/virtual-desktop/app-attach&quot;&gt;https://docs.microsoft.com/en-us/azure/virtual-desktop/app-attach&lt;/a&gt; which explains the process of preparing your Windows insider image and how to stage and register MSIX apps for session hosts und users. If you convert legacy apps to MSIX I recommend the YouTube video of &lt;a href=&quot;https://twitter.com/MSAzureAcademy&quot;&gt;@MSAzureAcademy&lt;/a&gt;: &lt;a href=&quot;https://www.youtube.com/watch?v=6kkPLFgPaN8&quot;&gt;https://www.youtube.com/watch?v=6kkPLFgPaN8&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Microsoft gives you example scripts to stage, un-stage, register, and un-register MSIX apps. For each app, you have to build these four scripts. While the scrips only differ in a few points, I decided to create one script which does the necessary things for all apps I want to provide.&lt;/p&gt;

&lt;p&gt;The result is one folder containing a single PowerShell script and a configuration file for my MSIX apps. The structure of the configuration is JSON:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;apps&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
   &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;​&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;     &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;vhdSrc&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;ads01&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Configuration&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;WVD&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;MSIX&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;NotepadPP.vhd&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;​&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;     &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;volumeGuid&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;9c371391-0000-0000-0000-010000000000&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;​&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;     &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;packageName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;notepadpp_7.8.1.0_x64__cqx7y23m1rjgy&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;​&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;     &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;parentFolder&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;MSIX-Apps&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;​&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;     &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;sessionTarget&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;​&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;hostPools&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;​&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;MSIX-Builder&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;​&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;​&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;userGroups&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;​&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;SW_WVD_All&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;​&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;SW_WVD_NotePadPP&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;​&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;​&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;     &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;​&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;     &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;vhdSrc&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;ads01&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Configuration&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;WVD&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;MSIX&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;FileZilla.vhd&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;​&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;     &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;volumeGuid&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;2ac99dec-0000-0000-0000-010000000000&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;​&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;     &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;packageName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;filezilla_3.45.1.0_x64__cqx7y23m1rjgy&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;​&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;     &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;parentFolder&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;MSIX-Apps&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;​&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;     &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;sessionTarget&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;​&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;hostPools&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;​&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;MSIX-Builder&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;​&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;​&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;userGroups&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;​&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;SW_WVD_All&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;​&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;SW_WVD_FileZilla&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;​&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;​&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;     &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For each application, you have to define the following properties:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Property&lt;/th&gt;
      &lt;th&gt;Note&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;vhdSrc&lt;/td&gt;
      &lt;td&gt;Path to the expanded MSIX app (as vhd)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;volumeGuid&lt;/td&gt;
      &lt;td&gt;Guid of the vhd&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;packageName&lt;/td&gt;
      &lt;td&gt;Name of the MSIX app attach package&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;parentFolder&lt;/td&gt;
      &lt;td&gt;Root folder name in your vhd&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;hostPools&lt;/td&gt;
      &lt;td&gt;List of host pool names where the package should be applied&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;userGroups&lt;/td&gt;
      &lt;td&gt;List of AD groups: Members get the application linked in their start menu&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;providing-the-script-to-users-and-session-hosts&quot;&gt;Providing the script to users and session hosts&lt;/h2&gt;

&lt;p&gt;Provide the script AppAttach with the configuration in a folder of a shared network drive. This folder must be readable for all users.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/MSIX-AppAttach-Script/Image-01.png&quot; alt=&quot;Image-01&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Refer this file by a group policy:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Computer Configuration - Policies - Windows Settings - Scripts - Startup&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Name:        %windir%\System32\WindowsPowerShell\v1.0\powershell.exe&lt;/p&gt;

&lt;p&gt;Parameter:    -ExecutionPolicy Unrestricted -File \ads01\Configuration\WVD\MSIX\AppAttach.ps1 -ConfigFile \\ads01\Configuration\WVD\MSIX\AppAttach.json -Mode VmStart&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Computer Configuration - Policies - Windows Settings - Scripts - Shutdown&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Name:        %windir%\System32\WindowsPowerShell\v1.0\powershell.exe&lt;/p&gt;

&lt;p&gt;Parameter:    -ExecutionPolicy Unrestricted -File \ads01\Configuration\WVD\MSIX\AppAttach.ps1 -ConfigFile \\ads01\Configuration\WVD\MSIX\AppAttach.json -Mode VmShutdown&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;User Configuration - Policies - Windows Settings - Scripts - Logon&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Name:        %windir%\System32\WindowsPowerShell\v1.0\powershell.exe&lt;/p&gt;

&lt;p&gt;Parameter:    -ExecutionPolicy Unrestricted -File \ads01\Configuration\WVD\MSIX\AppAttach.ps1 -ConfigFile \ads01\Configuration\WVD\MSIX\AppAttach.json -Mode UserLogon&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;User Configuration - Policies - Windows Settings - Scripts - Logoff&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Name:        %windir%\System32\WindowsPowerShell\v1.0\powershell.exe&lt;/p&gt;

&lt;p&gt;Parameter:    -ExecutionPolicy Unrestricted -File \ads01\Configuration\WVD\MSIX\AppAttach.ps1 -ConfigFile \\ads01\Configuration\WVD\MSIX\AppAttach.json -Mode UserLogoff&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Where \\ads01\Configuration\WVD\MSIX\ is the path to the script and \\ads01\Configuration\WVD\MSIX\AppAttach.json the JSON-configuration file.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Make sure that the GPO is linked to the computer and enable loopback processing:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Computer Configuration - Policies - Administrative Templates - System/Group Policy&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Configure user Group Policy loopback processing mode: Enable - Mode: merge.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/MSIX-AppAttach-Script/Image-02.png&quot; alt=&quot;Image-02&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;preparing-the-golden-master-for-the-session-hosts&quot;&gt;Preparing the golden master for the session hosts&lt;/h2&gt;

&lt;p&gt;To work with MSIX and have the script do the work you have to prepare your golden image:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Make sure that you have installed the right version from the insider build&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Double-check that you have &lt;strong&gt;NOT&lt;/strong&gt; prepared your image with the command line commands described in &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/virtual-desktop/app-attach#prepare-the-vhd-image-for-azure&quot;&gt;https://docs.microsoft.com/en-us/azure/virtual-desktop/app-attach#prepare-the-vhd-image-for-azure&lt;/a&gt; (Disable Store auto-update and so on). It’s only for the VM concerning the converting process.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Copy the PSTools &lt;a href=&quot;https://docs.microsoft.com/en-us/sysinternals/downloads/psexec&quot;&gt;https://docs.microsoft.com/en-us/sysinternals/downloads/psexec&lt;/a&gt; to %Windir%\System32 (you need psexec later)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Give the service GPSVC the right privileges to mount images:&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Create a cmd-file with this content:&lt;/p&gt;

        &lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;sc privs gpsvc SeManageVolumePrivilege/SeTcbPrivilege/SeTakeOwnershipPrivilege/SeIncreaseQuotaPrivilege/SeAssignPrimaryTokenPrivilege/SeSecurityPrivilege/SeChangeNotifyPrivilege/SeCreatePermanentPrivilege/SeShutdownPrivilege/SeLoadDriverPrivilege/SeRestorePrivilege/SeBackupPrivilege/SeCreatePagefilePrivilege
&lt;/code&gt;&lt;/pre&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Open an administrative cmd and execute:&lt;/p&gt;

        &lt;p&gt;psexec /s cmd&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;In this service cmd execute the cmd-file to give GPSVC the right  permissions&lt;/p&gt;

        &lt;p&gt;(This adds the SeManageVolumePrivilege which allows mounting of images)&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/MSIX-AppAttach-Script/Image-03.png&quot; alt=&quot;Image-03&quot; /&gt;&lt;/p&gt;

&lt;p&gt;If you have this done, you can rollout several session hosts (or start with one for testing). If you now log on with different users, each user will see its assigned applications.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/MSIX-AppAttach-Script/Image-04.png&quot; alt=&quot;Image-04&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Note: If a user logoff the application will be de-registered except if the user an administrator (this will be skipped to avoid unmounting the app package).&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;../assets/files/AutoUpdate/Scripts/AppAttach.ps1.txt&quot;&gt;Download&lt;/a&gt; the script and rename it to AppAttach.ps1&lt;/strong&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 01 Dec 2019 00:00:00 +0100</pubDate>
        <link>/Automatic-MSIX-app-attach-scripts/</link>
        <guid isPermaLink="true">/Automatic-MSIX-app-attach-scripts/</guid>
        
        
        <category>Windows Virtual Desktop</category>
        
      </item>
    
      <item>
        <title>WVD Admin - A native administration Gui for Windows Virtual Desktop</title>
        <description>&lt;h1 id=&quot;windows-virtual-desktop-administration&quot;&gt;Windows Virtual Desktop administration&lt;/h1&gt;

&lt;p&gt;&lt;strong&gt;Important for prior 1.2.1 users: Check this &lt;a href=&quot;#v121-note&quot;&gt;note&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Windows Virtual Desktop is generally available and under continuous improvement. There was the time before Ignite 2019 where no administration GUI was publicly available. This changed with Ignite. The PG of Remote Desktop services releases an in-portal configuration for Windows Virtual Desktop which looks very nice and has a lot of configurable options. See &lt;a href=&quot;https://twitter.com/RDS4U/status/1189773044094361601&quot;&gt;https://twitter.com/RDS4U/status/1189773044094361601&lt;/a&gt; for a preview or check it out in the Azure portal.&lt;/p&gt;

&lt;p&gt;Sometimes it helps to have a native GUI to make some configuration. Therefore I build a tool to do this and last night I finished the project (in the current version) and provide it as a community tool for WVD.&lt;/p&gt;

&lt;p&gt;The current version supports a lot of configuration and administration capabilities. You can:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Add, edit and delete host pools&lt;/li&gt;
  &lt;li&gt;Add, edit and delete application groups&lt;/li&gt;
  &lt;li&gt;Add, edit and delete application and desktop (you can add a new app with the Windows file-open-dialog)&lt;/li&gt;
  &lt;li&gt;Add a list of users to applications or a desktop (separated by ;)&lt;/li&gt;
  &lt;li&gt;Send messages to a single user and users on a specific session host&lt;/li&gt;
  &lt;li&gt;Logoff single users or all users of a specific session host&lt;/li&gt;
  &lt;li&gt;Start and deallocate session hosts (the Azure VM behind)&lt;/li&gt;
  &lt;li&gt;Delete session hosts and the VMs in Azure including disks and nics&lt;/li&gt;
  &lt;li&gt;Create an image of a template VM without destroying the template&lt;/li&gt;
  &lt;li&gt;Rollout a number of new session hosts based on a template image - including domain join and WVD installation and registration (comparable to Citrix MCS)&lt;/li&gt;
  &lt;li&gt;Rollout VM Scale Sets&lt;/li&gt;
  &lt;li&gt;Start and deallocate Scale Set instances&lt;/li&gt;
  &lt;li&gt;Re-image Scale Set instances&lt;/li&gt;
  &lt;li&gt;Add or remove Scale Set instances&lt;/li&gt;
  &lt;li&gt;and some more things&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;demo-video&quot;&gt;Demo video&lt;/h1&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/g9T0mO1gH9Y&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;h1 id=&quot;installation&quot;&gt;Installation&lt;/h1&gt;

&lt;p&gt;Download  &lt;a href=&quot;../assets/files/WVDAdmin.zip&quot;&gt;WVDAdmin.zip&lt;/a&gt; or  &lt;a href=&quot;../assets/files/WVDAdmin.msi&quot;&gt;WVDAdmin.msi&lt;/a&gt; (msi is preferred) extract the zip file and install the application on your Windows client or on a template VM for your WVD.&lt;/p&gt;

&lt;h2 id=&quot;versions&quot;&gt;Versions&lt;/h2&gt;

&lt;p&gt;1.0.0.22		First published version - without auto-update of WVD Admin&lt;/p&gt;

&lt;p&gt;1.0.0.23		Support for ephemeral  disks&lt;/p&gt;

&lt;p&gt;1.0.0.25		Fix: If you delete a VM the OS disk will deleted as well&lt;/p&gt;

&lt;p&gt;1.0.0.26		Add: Template VM can now be a VM with a standard disk (non-managed)&lt;/p&gt;

&lt;p&gt;1.0.0.29		Add: Supporting “special license mode” to save up to 50% on compute-cost (&lt;a href=&quot;https://docs.microsoft.com/en-us/azure/virtual-desktop/apply-windows-license&quot;&gt;https://docs.microsoft.com/en-us/azure/virtual-desktop/apply-windows-license&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;1.0.0.30		Fix: Rollout - OU can now be empty to join the default OU&lt;/p&gt;

&lt;p&gt;1.2.1.00		&lt;a name=&quot;v121-note&quot;&gt;&lt;/a&gt;Fix: Logging of rollout parameter by Azure custom extension is removed to avoid logging secrets&lt;/p&gt;

&lt;p&gt;1.2.3.00		Add: Support for automatic and static assigned host pools&lt;/p&gt;

&lt;p&gt;1.2.4.00		Add: Support for availability sets&lt;/p&gt;

&lt;p&gt;1.2.5.00		Add: Support for Scale Sets (with normal and ephemeral disks) -&amp;gt; see below&lt;/p&gt;

&lt;p&gt;1.2.7.00		Add: The main window of the application is now resizeable&lt;/p&gt;

&lt;p&gt;1.2.8.00		Add: If you click a tenant a tenant wide list of sessions is listed.  Logoff or send messages to multiple sessions&lt;/p&gt;

&lt;p&gt;1.3.0.00		Add: AAD multi-tenancy mode (drop down list to handle different AADs) - &lt;a href=&quot;https://blog.itprocloud.de/Windows-Virtual-Desktop-Windows-Virtual-Desktop-Administration-for-CSP-and-Consulting-Partners/&quot;&gt;https://blog.itprocloud.de/Windows-Virtual-Desktop-Windows-Virtual-Desktop-Administration-for-CSP-and-Consulting-Partners&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;1.3.1.00		Fix: WVDAdmin crashed if 1.3.0 is your first version of WVDAdmin (HKEY_CURRENT_USER\Software\ITProCloud doesn’t exist while checking for multi-tenancy mode)&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Important for prior 1.2.1 users:&lt;/strong&gt; I removed the logging of the Azure custom extension so that from version 1.2.1, no secrets are logged to “&lt;em&gt;c:\WindowsAzure\Logs\Plugins\Microsoft.Compute.CustomScriptExtension\*&lt;/em&gt;”. I recommend to use the new version and to remove the logs from older session hosts (or to re-deploy these hosts). I found these logs while checking what other services are running on an Azure VM.&lt;/p&gt;

&lt;h3 id=&quot;support-for-vm-scale-sets&quot;&gt;Support for VM Scale Sets&lt;/h3&gt;

&lt;p&gt;From version 1.2.5, I support working with VM Scale Sets. A Scale Set can have several instances, which are the VMs / session hosts. There are some essential things you have to know if you use VM Scale Set with WVDAdmin and WVD itself:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Build a Scale Set with WVDAdmin. Select an image, right-click and select “Create session host from image”. Check “Rollout as VM Scale Set”&lt;/li&gt;
  &lt;li&gt;You can use regular disks and ephemeral disks. If you use ephemeral disks, you cannot deallocate the instances of your Scale Set. You have to delete the instances&lt;/li&gt;
  &lt;li&gt;Today you can not use ultra disks&lt;/li&gt;
  &lt;li&gt;You can add and remove instances with WVDAdmin or in the Azure Portal. New instances will join the domain and WVD&lt;/li&gt;
  &lt;li&gt;A new instance can only join WVD if the session host with the new name doesn’t exist. If you delete instances, the session host entry will also be removed&lt;/li&gt;
  &lt;li&gt;You can re-image single instances or all instances of a Scale Set. After that, the instances are “clean” as at the first rollout&lt;/li&gt;
  &lt;li&gt;Adding instances or re-imaging assumes that the Scale Set configuration (which is a custom script extension) has a valid WVD token to join new instances to WVD. While WVD provides only one token per host pool and that the token can be expiring, you can update the token with a right-click on the Scale Set and select “Update WVD token”. The max. lifetime of a token is 59 days&lt;/li&gt;
  &lt;li&gt;Unfortunately, change the source image for a VM Scale Set. So if you want to update the image for a host pool, take these steps:
    &lt;ul&gt;
      &lt;li&gt;Rollout a new Scale Set based on the new image&lt;/li&gt;
      &lt;li&gt;Disable new logons for the old session host from the previous Scale Set&lt;/li&gt;
      &lt;li&gt;Test the host pool based on the new Scale Set&lt;/li&gt;
      &lt;li&gt;If no user logged on to the ancient Scale Set, remove all instances from the Scale Set (this deletes the session hosts in WVD as well)&lt;/li&gt;
      &lt;li&gt;Remove the Scale Set&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Please feel free to give feedback&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;support-for-ephemeral--disks&quot;&gt;Support for ephemeral  disks&lt;/h3&gt;

&lt;p&gt;You can now rollout your session hosts with  ephemeral  disks. Ephemeral  disks are running on the Azure hypervisor and not stored in the fabric. This has some advantages:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;There are no storage costs (!)&lt;/li&gt;
  &lt;li&gt;A very high data throughput because the disks exist on the hypervisor&lt;/li&gt;
  &lt;li&gt;See &lt;a href=&quot;https://twitter.com/michawets&quot;&gt;@MichaWets&lt;/a&gt;   blog post for more information:  &lt;a href=&quot;https://www.cloud-architect.be/2019/07/15/windows-virtual-desktop-running-on-ephemeral-os-disks/&quot;&gt;https://www.cloud-architect.be/2019/07/15/windows-virtual-desktop-running-on-ephemeral-os-disks/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please note:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You can not deallocate a VM with this disk type (because the disk cannot be stored) - you have to delete the VM (and to rollout a new one instead of starting a “normal” VM)&lt;/li&gt;
  &lt;li&gt;Not each VM size can be used and there are limitations of the disk size (image size for rollout) based on the VM size: Example: Max  ephemeral  disk size for  Standard_D4s_v3  is 64 GByte while a  Standard_D8s_v3 can have up to 128 GByte. See &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/virtual-machines/linux/sizes-general&quot;&gt;https://docs.microsoft.com/en-us/azure/virtual-machines/linux/sizes-general&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;If the Azure hypervisor fails your session host will fail as well and can not be re-deployed automatically&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-014.png&quot; alt=&quot;documentation-001&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;configuration&quot;&gt;Configuration&lt;/h2&gt;

&lt;h2 id=&quot;service-principal-functional-account&quot;&gt;Service principal (functional account)&lt;/h2&gt;

&lt;p&gt;To work with the GUI you need a service principal (function account) with the permission to administrate your WVD tenant or tenants. I decide to use a service principal at this time to avoid confusion if my Azure Ad user is only a guest account in the WVD tenant I have to administrate.&lt;/p&gt;

&lt;p&gt;To create a service principal go to your Azure Ad -&amp;gt; App registration -&amp;gt; New registration and type a name for your principal like “ svc_WVDAdmin” and press “register”.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-001.png&quot; alt=&quot;documentation-001&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click on “certificates &amp;amp; secrets”. Click “new client secret”, select a validity period and a description (like “Key01”). Press “add”.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-002.png&quot; alt=&quot;documentation-002&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Copy the generated key directly - it will never be displayed again. Note the key for later.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-003.png&quot; alt=&quot;documentation-003&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Go to “Overview”. Note the “Application (client) ID” and the “Directory (tenant) ID” as well.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-004.png&quot; alt=&quot;documentation-004&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You now have all data for your service principal:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Tenant id&lt;/li&gt;
  &lt;li&gt;Service principal id (application id)&lt;/li&gt;
  &lt;li&gt;Service principal key&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;wdv-permissions&quot;&gt;WDV permissions&lt;/h2&gt;

&lt;p&gt;To  use WVDAdmin you need at least an existing WVD tenant. If you new to WVD follow this article to create a WVD tenant:  &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/virtual-desktop/tenant-setup-azure-active-directory&quot;&gt;https://docs.microsoft.com/en-us/azure/virtual-desktop/tenant-setup-azure-active-directory&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You have to use PowerShell to give the WVD the appropriated permission:&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nf&quot;&gt;Import-Module&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Microsoft.RDInfra.RDPowerShell&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# log on with an administrative user account to your &lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Add-RdsAccount&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-DeploymentUrl&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://rdbroker.wvd.microsoft.com&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# give your service principal the right permission&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;New-RdsRoleAssignment&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-TenantName&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Builder City&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-RoleDefinitionName&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;RDS Owner&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-ApplicationId&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;89050a12-xxxx-xxxx-xxxx-000000000000&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-005.png&quot; alt=&quot;documentation-005&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;azure-resource-permissions&quot;&gt;Azure resource permissions&lt;/h2&gt;

&lt;p&gt;To image template VMs and to rollout new session hosts the service principal needs permission to the resource groups containing your session hosts (or are the target for these).&lt;/p&gt;

&lt;p&gt;Open the Azure portal and go to the resource groups. Go into each resource group, click “Access control (IAM)” -&amp;gt; select “Add” -&amp;gt; Add role assignment. Select “contributor” and search in “select” for your service principal name. Click the principal and save the settings.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-006.png&quot; alt=&quot;documentation-006&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Do the same for the other resource groups. It’s a good way to have several resource groups:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;For each tenant or host pool&lt;/li&gt;
  &lt;li&gt;For template VMs&lt;/li&gt;
  &lt;li&gt;For the created images&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The service principal must have permissions to your virtual network (vnet) to assign new VMs to the right subnet. Go to your vnet, click “Access control (IAM)” -&amp;gt; select “Add” -&amp;gt; Add role assignment. Select “contributor” and search in “select” for your service principal name. Click the principal and save the settings.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-007.png&quot; alt=&quot;documentation-007&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;prepare-your-normal-active-directory&quot;&gt;Prepare your “normal” Active Directory&lt;/h2&gt;

&lt;p&gt;Today each session host must be part of a “legacy” active directory domain (or have to use the domain services). To add new session hosts unattended we need two more things:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;An administrative user account with the permission to add a computer object to the active directory domain&lt;/li&gt;
  &lt;li&gt;A file share with a configuration script and the WVD agent software&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Create an administrative account to join computer objects to the domain&lt;/p&gt;

&lt;p&gt;Open “Active Directory Users and Computers” and create a user object with a complex password and set a password to “never expire” (if you fine with this). I added the user srv_WVD-Join@itprocloud.de.&lt;/p&gt;

&lt;p&gt;Open the menu “View” and select “Advanced Features”. Create or go to the OU where do you want to have your WVD session hosts in. Right-click the OU, select security and add your account with read/write/… permission.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-008.png&quot; alt=&quot;documentation-008&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Please note the OU canonical name. In my case: “OU=WVD,OU=Azure,OU=Site,OU=Servers,OU=Sys,OU=Organisation,DC=ITProCloud,DC=test”&lt;/p&gt;

&lt;h2 id=&quot;create-a-file-share&quot;&gt;Create a file share&lt;/h2&gt;

&lt;p&gt;Create a file share for the configuration script (which adds new session hosts to the domain and install the WVD agent). Give everyone at least read permissions. Set the NTFS permissions to everyone and read. This is necessary while during the first startup the VM extension tries to execute the script. In this process, the file share is accessed anonymously.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-009.png&quot; alt=&quot;documentation-009&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-010.png&quot; alt=&quot;documentation-010&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Place the following files in this share:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.itprocloud.de/assets/files/AutoUpdate/Scripts/ITPC-WVD-Image-Processing.ps1.txt&quot;&gt;ITPC-WVD-Image-Processing.ps1&lt;/a&gt; (rename the download to .ps1)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RWrmXv&quot;&gt;Microsoft.RDInfra.RDAgent.msi&lt;/a&gt; (rename the file)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RWrxrH&quot;&gt;Microsoft.RDInfra.RDAgentBootLoader.msi&lt;/a&gt; (rename the file)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Make sure that you rename the files to fit the list above (without version numbers).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-011.png&quot; alt=&quot;documentation-011&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; If you are using Windows Server &lt;strong&gt;2019&lt;/strong&gt; as file share make sure that anonymous file share access is enabled. Create a GPO for the session hosts containing the following configurations:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Security Options:
    &lt;ul&gt;
      &lt;li&gt;Accounts: Guest Account Status: Enabled&lt;/li&gt;
      &lt;li&gt;Network access: Let Everyone permissions apply to anonymous users: Enabled&lt;/li&gt;
      &lt;li&gt;Network access: Do not allow anonymous enumeration of SAM accounts and shares: Disabled&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;configure-wvdadmin&quot;&gt;Configure WVDAdmin&lt;/h1&gt;

&lt;p&gt;Please start WVDAdmin. Before you load WVD and Azure data copy the Azure tenant id, service principal id and service principal key into the welcome tab. Press save and load the data by clicking “Reload all”.&lt;/p&gt;

&lt;p&gt;You are now able to administrate WVD, create images from template VMs and rollout new session hosts.&lt;/p&gt;

&lt;p&gt;The first time you want to rollout new session hosts you have to enter some information from your Active Directory and file share configuration from above:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-012.png&quot; alt=&quot;documentation-012&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Local Admin and local pw. are the local administrator account credentials which you can enter at this time.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-013.png&quot; alt=&quot;documentation-013&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;building-an-image&quot;&gt;Building an image&lt;/h1&gt;

&lt;p&gt;You can rollout VMs and VM Scale Set with images created by WVDAdmin. These images contain the logic to join the AD domain and WVD.&lt;/p&gt;

&lt;p&gt;You can simple create an image from a template VM. The template VM must part of your AD like a normal client. You have not to sysprep or to normalize this template VM. Use the same template VM for Windows and application updates.&lt;/p&gt;

&lt;p&gt;Following these steps to build your template:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Install a VM in the Azure portal. Select the right OS (like Windows 10 Enterprise for Virtual Desktops)&lt;/li&gt;
  &lt;li&gt;Make all Windows updates&lt;/li&gt;
  &lt;li&gt;Join the VM to your AD&lt;/li&gt;
  &lt;li&gt;Install your application&lt;/li&gt;
  &lt;li&gt;Make your customizing (like installing language packages)&lt;/li&gt;
  &lt;li&gt;Shutdown the template VM&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;To create the image open WVDAdmin and&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Navigate to the Azure template VM (Azure -&amp;gt; Virtual Machines -&amp;gt; RG -&amp;gt; VM)&lt;/li&gt;
  &lt;li&gt;Right-click -&amp;gt; “Create a template image”&lt;/li&gt;
  &lt;li&gt;Select the resource group to store the image&lt;/li&gt;
  &lt;li&gt;Correct the script-path if necessary&lt;/li&gt;
  &lt;li&gt;Press “Capture”&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can and should reuse the template VM for new updates and applications. After these changes shut down the template VM and create a new image .&lt;/p&gt;

&lt;h1 id=&quot;troubleshooting&quot;&gt;Troubleshooting&lt;/h1&gt;

&lt;p&gt;The image is not created. An error message occurs:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Check if your template VM part of the AD&lt;/li&gt;
  &lt;li&gt;If your file server Windows Server 2019, read above&lt;/li&gt;
  &lt;li&gt;Check if you have set the NTFS and share permission correctly&lt;/li&gt;
  &lt;li&gt;Azure portal: Go to the temp VM (next to the template VM) and check the state of the extension installation. There should be an error message like script not found; access denied, etc.&lt;/li&gt;
  &lt;li&gt;Have you renamed the RD agent and bootloader?&lt;/li&gt;
  &lt;li&gt;Is the script saved correctly: ITPC-WVD-Image-Processing.ps1 not ITPC-WVD-Image-Processing.ps1.txt&lt;/li&gt;
  &lt;li&gt;Don’t forget to delete the temp VM and temp disk to avoid costs&lt;/li&gt;
  &lt;li&gt;Make sure that your template VM uses managed disk&lt;/li&gt;
  &lt;li&gt;An endless loop of “Waiting for the temporary vm (power off)” which results in an error after 30 minutes: Something goes wrong with sysprep. You can check the sysprep log in %WinDir%\system32\Sysprep\Panther on the temporary VM. 
This is often caused by Sysprep and installed language packs.&lt;br /&gt;
Workaround: Delete all user profiles except the logged in user and default users: Press Win+R, type “SystemPropertiesAdvanced”, Advanced -&amp;gt; Settings&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Feel free to use it and download the 64-bit Windows application “WVD Admin” from here: &lt;a href=&quot;../assets/files/WVDAdmin.zip&quot;&gt;WVDAdmin.zip&lt;/a&gt; or  &lt;a href=&quot;../assets/files/WVDAdmin.msi&quot;&gt;WVDAdmin.msi&lt;/a&gt; (msi is preferred)&lt;/p&gt;

</description>
        <pubDate>Sat, 02 Nov 2019 00:00:00 +0100</pubDate>
        <link>/Windows-Virtual-Desktop-Admin/</link>
        <guid isPermaLink="true">/Windows-Virtual-Desktop-Admin/</guid>
        
        
        <category>Windows Virtual Desktop</category>
        
      </item>
    
      <item>
        <title>PolarConf 2019 - Building own solutions whit Azure Monitor </title>
        <description>&lt;p&gt;In October I visited Finland the very first time to speak at PolarConf and I have to say: It was amazing. A great single track event over two days. It was the first conference where I had a speak with only one track. And I have to say: It’s a really good concept. No half-full tracks and missing the feeling you miss a parallel track (or simple: you have not to decide between two or more tracks).&lt;/p&gt;

&lt;p&gt;What to say about Finland: It an amazing country in the north of Europe with some touch from the Swedish and Russian cultures. It looks very clear, focused and with a sustainable mindset on the subject of environmental protection. And finally: I love the sauna culture.&lt;/p&gt;

&lt;p&gt;But back to the conference: I had the chance to talk about building own solutions with Azure Monitor. Finalize the session I put the presentation I held here:  &lt;a href=&quot;../assets/files/PolarConf 2019 - Build your own Azure Monitor solution.pdf&quot;&gt;PolarConf 2019 - Build your own Azure Monitor solution.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Site information: One part of my presentation was to show the Tweet count with #PolarConf with Azure Monitor. Thanks to @techmike2kx&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/PolarConf Tweets.png&quot; alt=&quot;PolarConf Tweets&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://polarconf.fi/&quot;&gt;https://polarconf.fi/&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 16 Oct 2019 00:00:00 +0200</pubDate>
        <link>/PolarConf-2019/</link>
        <guid isPermaLink="true">/PolarConf-2019/</guid>
        
        
        <category>Azure Monitor</category>
        
        <category>Log Analytics</category>
        
      </item>
    
      <item>
        <title>Announcing the community version of &quot;Project MySmartScale&quot;</title>
        <description>&lt;p&gt;Windows Virtual Desktop is released and gateways around the world are available - even in Europe which cause in a low latency - perfect.&lt;/p&gt;

&lt;p&gt;Windows Virtual Desktop supplement the current solutions on the virtualization market like Citrix Application Virtualization and VMware Horizon. It’s focused on running as-a-service in the Azure cloud and it’s very cost-efficient compared to the other vendors. Of course: The tools and the administrative capabilities for WVD differ from the others - till now.&lt;/p&gt;

&lt;p&gt;But there is still a niche that is not yet filled - until today. The VMs are running permanently even if no users using the environment which leads to avoidable costs. But there is a solution:&lt;/p&gt;

&lt;h2 id=&quot;announcement-of-the-community-version-of-project-mysmartscale&quot;&gt;Announcement of the community version of Project MySmartScale&lt;/h2&gt;

&lt;p&gt;“Project MySmartScale” starts and smartly deallocates session hosts for WVD. It learns about the user’s behavior and can actively logoff unused sessions at the right time to save compute power – and money. The solution is 100% based on Azure platform services and fits into the whole “as-a-service” story. But starting and stopping session hosts is not as easy as it sounds: To have the right amount of session hosts ready before users try to login in the morning you must predict the user behavior. And this is what “Project MySmartScale” does:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Predict the logon count over time based on historical data&lt;/li&gt;
  &lt;li&gt;Predict the logon count over time based on the acceleration of logons&lt;/li&gt;
  &lt;li&gt;Start the sessions hosts a few minutes before they are needed&lt;/li&gt;
  &lt;li&gt;Stop/deallocates unused session hosts if they are not needed&lt;/li&gt;
  &lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;..\assets\images\MySmartScale-01.png&quot; alt=&quot;MySmartScale-01&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Today I make this solution available via GitHub. You can easily deploy the solution into your Azure subscription and start to scale your VWD environment based on the usage. This can save up to 60-70% of the costs compared to a 24/7 pay-as-you-go model.&lt;/p&gt;

&lt;p&gt;Side-Note: It also scales a Citrix XenApp / Virtual Apps and Desktop environment in Azure without using Citrix Cloud (for IaaS).&lt;/p&gt;

&lt;p&gt;The free community version supports up to 5 VMs.&lt;/p&gt;

&lt;p&gt;Feel free to use it:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/MarcelMeurer/Project-MySmartScale&quot;&gt;https://github.com/MarcelMeurer/Project-MySmartScale&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 09 Oct 2019 00:00:00 +0200</pubDate>
        <link>/Anouncing-Project-MySmartScale/</link>
        <guid isPermaLink="true">/Anouncing-Project-MySmartScale/</guid>
        
        
        <category>Windows Virtual Desktop</category>
        
        <category>Azure VM</category>
        
      </item>
    
      <item>
        <title>Workshop Azure Monitor - Lessons</title>
        <description>&lt;p&gt;To get practice in using Azure Monitor, I have prepared some examples. These examples can be recreated with a little PowerShell. I have prepared more complex program parts. These can be found in the “Tools” folder. Finished solutions are stored in the folder “Samples”.&lt;/p&gt;

&lt;p&gt;GitHub: &lt;a href=&quot;https://github.com/MarcelMeurer/Workshop-AzureMonitor&quot;&gt;https://github.com/MarcelMeurer/Workshop-AzureMonitor&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;in-the-tools-folder-there-are-the-following-scripts&quot;&gt;In the Tools folder there are the following scripts:&lt;/h3&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;/Add-AzureMonitorData.ps1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-WorpspaceId&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;WorkSpaceId&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-WorpspaceKey&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;WorpspaceKey&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-LogTypeName&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;LogTypeName&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-TimeStampField&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;TimeStampField&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-JsonData&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;JsonData&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Send jsonData to the Log Analytics workspace into the given LogTyeName. TimeStampField is not mandatory. If given, it must be the name of the field containing the timestamp of each data set.&lt;/p&gt;

&lt;h2 id=&quot;missions&quot;&gt;Missions&lt;/h2&gt;

&lt;h3 id=&quot;store-information-about-the-running-processes-from-your-computer&quot;&gt;Store information about the running processes from your computer&lt;/h3&gt;

&lt;p&gt;Collect the process information from your computer each 30 seconds and send these data to your Log Analytics workspace. Use PowerShell to automate this mission.&lt;/p&gt;

&lt;p&gt;Select an app and use this app  to “overload” your CPU.&lt;/p&gt;

&lt;p&gt;If data are visible in Log Analytics, build a custom dashboard by using “Log” to query the data.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Find out:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Count of distinct processes&lt;/li&gt;
      &lt;li&gt;Average CPU load over time (all processes). Render a time chart&lt;/li&gt;
      &lt;li&gt;Render a time chart for the app you used to overload the CPU&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Some useful PowerShell commands:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;#Get cpu consumption by process&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Get-Counter&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;\process(*)\% Processor Time&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;CounterSamples&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#Convert objects to &lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ConvertTo-Json&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;store-temperature-data-for-multiple-cities&quot;&gt;Store temperature data for multiple cities&lt;/h3&gt;

&lt;p&gt;Collect data from OpenWeatherMap for three different cities each 30 seconds. Send the data to your Log Analytics workspace using Add-AzureMonitorData.ps1. Use PowerShell to automate this mission.&lt;/p&gt;

&lt;p&gt;If data are visible in Log Analytics, build a custom dashboard using the View Designer within Log Analytics. Build:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;One overview tile showing the number of the different cities&lt;/li&gt;
  &lt;li&gt;Two dashboards showing the temperature and humidity as a chart and as a list per city&lt;/li&gt;
  &lt;li&gt;Connect PowerBi Dekstop to your data: Display Line Charts and use a selector/filter for the cities (drop down field)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hints:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Collect data from OpenWeatherMap&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;https://openweathermap.org/&lt;/li&gt;
      &lt;li&gt;Create an account and api key&lt;/li&gt;
      &lt;li&gt;Test your key (it can take some minutes):
 https://api.openweathermap.org/data/2.5/weather?q=Bonn&amp;amp;APIKEY=xxxxxxx&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Some useful PowerShell commands:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;#Endless-loop&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;   &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#Sleep $n seconds&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#make a http request&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Invoke-WebRequest&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Uri&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$uri&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Method&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-ContentType&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;application/json&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;build-your-own-log-writer-function&quot;&gt;Build your own log-writer function&lt;/h3&gt;

&lt;p&gt;Build a log-writer function for your own PowerShell scripts using Log Analytics. There are some request to your solution:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Have the following columns:
    &lt;ul&gt;
      &lt;li&gt;TimeStamp (as TimeGeneratedField)&lt;/li&gt;
      &lt;li&gt;
        &lt;table&gt;
          &lt;tbody&gt;
            &lt;tr&gt;
              &lt;td&gt;Serverity (Debug&lt;/td&gt;
              &lt;td&gt;Information&lt;/td&gt;
              &lt;td&gt;Warning&lt;/td&gt;
              &lt;td&gt;Error)&lt;/td&gt;
            &lt;/tr&gt;
          &lt;/tbody&gt;
        &lt;/table&gt;
      &lt;/li&gt;
      &lt;li&gt;Message (Text)&lt;/li&gt;
      &lt;li&gt;ScriptName (Name of the script using your function)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 21 Sep 2019 00:00:00 +0200</pubDate>
        <link>/Workshop-Azure-Monitor-Examples/</link>
        <guid isPermaLink="true">/Workshop-Azure-Monitor-Examples/</guid>
        
        
        <category>Azure Monitor</category>
        
        <category>Log Analytics</category>
        
      </item>
    
      <item>
        <title>On the road - My next speaking engagements</title>
        <description>&lt;p&gt;I’m happy to be a part of a great community.  On my journey, I have the possibility to speak at some conferences, meetups and other events. And I loved it. Especially, if I can talk about Azure, IoT, Machine Learning, AI, Azure Monitor, etc.&lt;/p&gt;

&lt;p&gt;Maybe we will meet personally at one of the next events:&lt;/p&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;https://sessionize.com/api/speaker/events/9c778515-935a-46b1-ad39-3740c5b0afcf/0x0x3fb393x&quot;&gt;&lt;/script&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

</description>
        <pubDate>Sat, 07 Sep 2019 00:00:00 +0200</pubDate>
        <link>/Speaking-update/</link>
        <guid isPermaLink="true">/Speaking-update/</guid>
        
        
        <category>Events</category>
        
        <category>Azure</category>
        
      </item>
    
      <item>
        <title>CDC Germany: RDS and Windows Virtual Desktop – Desktops in the year 2019 and beyond</title>
        <description>&lt;p&gt;From 21. to 22. April 2019 the annual Cloud and Datacenter Conference took place in Hanau/Frankfurt in Germany. It’s one of my favorite community events in Germany. This year I was allowed to contribute something to RDS in Windows Server 2019 and Windows Virtual Desktop – including Windows 10 Multi Session Host and FSLogix (an awesome combination).&lt;/p&gt;

&lt;p&gt;I published my slides to slideshare.net: 
&lt;a href=&quot;https://de.slideshare.net/MarcelMeurer/rds-windows-virtual-desktop-desktop-in-2019&quot;&gt;https://de.slideshare.net/MarcelMeurer/rds-windows-virtual-desktop-desktop-in-2019&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-demos-are-also-available-via-youtube&quot;&gt;The demos are also available via Youtube:&lt;/h2&gt;

&lt;h3 id=&quot;windows-virtual-desktop---login-to-a-shared-windows-10-multi-session-host&quot;&gt;Windows Virtual Desktop - Login to a shared Windows 10 Multi Session Host&lt;/h3&gt;

&lt;iframe width=&quot;1196&quot; height=&quot;673&quot; src=&quot;https://www.youtube.com/embed/rgsaQf3hmHw&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href=&quot;https://youtu.be/rgsaQf3hmHw&quot;&gt;https://youtu.be/rgsaQf3hmHw&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;windows-virtual-desktop---update-the-template-vm&quot;&gt;Windows Virtual Desktop - Update the template VM&lt;/h3&gt;

&lt;iframe width=&quot;1196&quot; height=&quot;673&quot; src=&quot;https://www.youtube.com/embed/YqrEm3EhbVY&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href=&quot;https://youtu.be/YqrEm3EhbVY&quot;&gt;https://youtu.be/YqrEm3EhbVY&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;windows-virtual-desktop---build-a-new-image-from-a-template-vm&quot;&gt;Windows Virtual Desktop - Build a new Image from a template VM&lt;/h3&gt;

&lt;iframe width=&quot;1196&quot; height=&quot;673&quot; src=&quot;https://www.youtube.com/embed/MOuH482A1co&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href=&quot;https://youtu.be/MOuH482A1co&quot;&gt;https://youtu.be/MOuH482A1co&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;windows-virtual-desktop---deploy-a-vm-from-a-template-via-powershell&quot;&gt;Windows Virtual Desktop - Deploy a VM from a template via PowerShell&lt;/h3&gt;

&lt;iframe width=&quot;1196&quot; height=&quot;673&quot; src=&quot;https://www.youtube.com/embed/U9zxyk_HuAM&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href=&quot;https://youtu.be/U9zxyk_HuAM&quot;&gt;https://youtu.be/U9zxyk_HuAM&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;windows-virtual-desktop---deploy-a-scale-set-from-an-image-re-scale-azure-monitor&quot;&gt;Windows Virtual Desktop - Deploy a Scale Set from an image, re-scale, Azure Monitor&lt;/h3&gt;

&lt;iframe width=&quot;1196&quot; height=&quot;673&quot; src=&quot;https://www.youtube.com/embed/_l5P_JeQANM&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href=&quot;https://youtu.be/_l5P_JeQANM&quot;&gt;https://youtu.be/_l5P_JeQANM&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fist published on: &lt;a href=&quot;https://www.sepago.de/blog/cdc-germany-rds-windows-virtual-desktop-desktops-in-2019/&quot;&gt;https://www.sepago.de/blog/cdc-germany-rds-windows-virtual-desktop-desktops-in-2019/&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 23 May 2019 00:00:00 +0200</pubDate>
        <link>/CDC-Germany-RDS-&-Windows-Virtual-Desktop-Desktops-in-2019/</link>
        <guid isPermaLink="true">/CDC-Germany-RDS-&-Windows-Virtual-Desktop-Desktops-in-2019/</guid>
        
        
        <category>Azure</category>
        
        <category>Windows Virtual Desktop</category>
        
        <category>Events</category>
        
        <category>PowerShell</category>
        
      </item>
    
      <item>
        <title>Publish your solution to the Azure Marketplace</title>
        <description>&lt;p&gt;Publishing own solutions to the Azure Marketplace seems to be very easy by using the documentation on &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/marketplace/marketplace-publishers-guide&quot;&gt;https://docs.microsoft.com/en-us/azure/marketplace/marketplace-publishers-guide&lt;/a&gt;. To avoid any pitfalls I wrote down some insights about my first approach. In this blog, I will focus on “Azure Applications”&lt;/p&gt;

&lt;h2 id=&quot;the-cloud-partner-dashboard&quot;&gt;The Cloud Partner Dashboard&lt;/h2&gt;

&lt;p&gt;Make sure that you have access to the Cloud Partner Portal at &lt;a href=&quot;https://cloudpartner.azure.com&quot;&gt;https://cloudpartner.azure.com&lt;/a&gt;. In my case, I use my coopered credentials to log in.
Assign your Dev Center account details via Publisher Profile:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2019/03/PA01.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hint:&lt;/strong&gt;
I had some trouble doing this. My Dev Center account was not accepted. The reason was that my Dev Center account and my cooperated account names are/aren’t similar. A Dev Center account is always an MSA (former live id). So, I couldn’t invite this account into the Cloud Partner portal. My workaround:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create a new MSA, e.g. myname.dev@outlook.com&lt;/li&gt;
  &lt;li&gt;Create a new Dev Center account with the new MSA: &lt;a href=&quot;https://developer.microsoft.com&quot;&gt;https://developer.microsoft.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Add the new MSA into the Cloud Partner Portal
&lt;img src=&quot;/wp-content/uploads/2019/03/PA02.png&quot; alt=&quot;img&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Assign your Dev Center account&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;prepare-your-publishing-package&quot;&gt;Prepare your publishing package&lt;/h2&gt;

&lt;p&gt;Publishing (-) Azure Applications means that you provide an ARM template and other resources, like:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;mainTemplate.json&lt;/li&gt;
  &lt;li&gt;createUiDefinition.json (&lt;a href=&quot;https://docs.microsoft.com/en-us/azure/managed-applications/create-uidefinition-overview&quot;&gt;https://docs.microsoft.com/en-us/azure/managed-applications/create-uidefinition-overview&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;nestedtemplates.….json (for linked templates)&lt;/li&gt;
  &lt;li&gt;and maybe some other folders&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All the files must be in a zip archive for (-) further upload. The folder structure is important and createUiDefinition.json and mainTemplate.json are mandatory.
The ARM templates and the create UI are checked by Microsoft before your offer is available to the public. To avoid some iterations, make sure that you have observed the following things:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ARM Templates
    &lt;ul&gt;
      &lt;li&gt;Do not reference external sources like nested templates on GitHub – everything must be in the package&lt;/li&gt;
      &lt;li&gt;maintemplate.json must have a “parameters” property&lt;/li&gt;
      &lt;li&gt;Parameters without defaultValue s. They must have a corresponding output in createUiDefinition.json&lt;/li&gt;
      &lt;li&gt;A parameter named “location” must exist and it must have a defaultValue of resourceGroup().location&lt;/li&gt;
      &lt;li&gt;Use the correct API versions#VM Image ref must not contain “-preview”&lt;/li&gt;
      &lt;li&gt;Do not concat Ids like:
&lt;em&gt;“[Concat(‘/subscriptions/’, parameters(‘subscriptionId’), ‘/resourceGroups/’, parameters(‘resourcegroup’), ‘/providers/Microsoft.OperationalInsights/workspaces/’, parameters(‘workspace’))]”&lt;/em&gt;
use resourceId:
&lt;em&gt;“[resourceId(‘Microsoft.OperationalInsights/workspaces’, parameters(‘workspace’))]&lt;/em&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;createUiDefinition.json
    &lt;ul&gt;
      &lt;li&gt;Must have a schema property&lt;/li&gt;
      &lt;li&gt;Handler property value should be ‘Microsoft.Compute.MultiVm’&lt;/li&gt;
      &lt;li&gt;Version property value must match schema version&lt;/li&gt;
      &lt;li&gt;Must have parameters and output(-) properties&lt;/li&gt;
      &lt;li&gt;Output location must be present in mainTemplate parameters&lt;/li&gt;
      &lt;li&gt;Output workspace must be present in mainTemplate parameters&lt;/li&gt;
      &lt;li&gt;Parameters should have basics and steps properties&lt;/li&gt;
      &lt;li&gt;Location must be in outputs and should match [location()]&lt;/li&gt;
      &lt;li&gt;Do not say that a user has to enter a unique name (e.g. for a web app) – generate a unique name with an appendix (use uniqueString()), e.g.:
&lt;em&gt;“[concat(parameters(‘resourcename’),’-‘, uniqueString(resourceGroup().id,subscription().subscriptionId))]”&lt;/em&gt;&lt;/li&gt;
      &lt;li&gt;Text boxes (for names) must have a regex constraint&lt;/li&gt;
      &lt;li&gt;Text boxes (for names) must have a validationMessage&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;publish-your-package-for-a-private-test&quot;&gt;Publish your package for a private test&lt;/h2&gt;

&lt;p&gt;After you have zipped your package, you can create a new “Azure Application” offer in the Cloud Partner portal. Select a new offer, Azure application and fill out the fields.
Publish it for your personal test (add your subscription id to make it visible).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2019/03/PA03.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;publish-your-package-to-the-public&quot;&gt;Publish your package to the public&lt;/h2&gt;

&lt;p&gt;After you have tested your package privately, you can apply to make it public to the world. This takes some time while automatism and a (human) reviewer check your templates. If something is invalid, you get a mail with a link to a pull request where you can check what’s wrong.&lt;/p&gt;

&lt;p&gt;Fist published on: &lt;a href=&quot;https://www.sepago.de/blog/publish-your-solution-to-the-azure-marketplace/&quot;&gt;https://www.sepago.de/blog/publish-your-solution-to-the-azure-marketplace/&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 25 Mar 2019 00:00:00 +0100</pubDate>
        <link>/Publish-your-solution-to-the-Azure-Marketplace/</link>
        <guid isPermaLink="true">/Publish-your-solution-to-the-Azure-Marketplace/</guid>
        
        
        <category>Azure Marketplace</category>
        
      </item>
    
      <item>
        <title>Why configuring Azure AD authentication with an Azure Web App fails</title>
        <description>&lt;p&gt;I spent hours today adding Azure AD authentication to an Azure MVC web application with Visual Studio. I always got the same error while adding the preconfigured AD application:&lt;/p&gt;

&lt;p&gt;“Error: Unable to query for Azure AD applications: An error occurred while processing this request.”&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2019/02/01-1024x703.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;My account has the right permission in Azure AD – I thought. After a while I found out: Visual Studio was connected to my Azure AD with three different accounts:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2019/02/02-1024x764.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Normally, that’s what I want, even if I have to publish some apps in other tenants/subscriptions. But in this special case two accounts are part of the Azure tenant where my Azure applications should be deployed:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2019/02/03-1024x364.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Visual Studio uses the first account (marked in red), which does not have the appropriate permissions.&lt;/p&gt;

&lt;p&gt;My “fast” resolution: I gave this account the right Azure AD role (Application Administrator) for 5 minutes and tried again with success:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2019/02/04-1024x703.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;First published on: &lt;a href=&quot;https://www.sepago.de/blog/why-configuring-azure-ad-authentication-with-an-azure-web-app-fails/&quot;&gt;https://www.sepago.de/blog/why-configuring-azure-ad-authentication-with-an-azure-web-app-fails/&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 09 Feb 2019 00:00:00 +0100</pubDate>
        <link>/Why-configuring-Azure-AD-authentication-with-an-Azure-Web-App-fails/</link>
        <guid isPermaLink="true">/Why-configuring-Azure-AD-authentication-with-an-Azure-Web-App-fails/</guid>
        
        
        <category>Azure AD</category>
        
        <category>Azure WebApp</category>
        
      </item>
    
  </channel>
</rss>
