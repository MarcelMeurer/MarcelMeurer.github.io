<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ITProCloud Blog</title>
    <description>This is my personal website, which I maintain to support the cloud community. ITProCloud.de is the label I use for tests and demonstrations. ITProCloud.de is not a company in the business sense.</description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 11 Feb 2021 10:39:24 +0100</pubDate>
    <lastBuildDate>Thu, 11 Feb 2021 10:39:24 +0100</lastBuildDate>
    <generator>Jekyll v4.1.1</generator>
    
      <item>
        <title>WVD Admin - A native administration Gui for Windows Virtual Desktop</title>
        <description>&lt;h1 id=&quot;windows-virtual-desktop-administration-with-wvdadmin&quot;&gt;Windows Virtual Desktop administration with WVDAdmin&lt;/h1&gt;
&lt;p&gt;Windows Virtual Desktop is generally available under continuous improvement and currently available in the ARM (Spring) and in the Classic (Fall) version. The ARM version is completely into the Azure Portal.  Sometimes it helps to have a native GUI to make some configuration and - for me, most important - to have an easy image handling to deploy session hosts based on a template VM (golden image approach). Therefore I build a native Windows application to do this, and I’m happy to share it with the community.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;../assets/files/WVDAdmin.msi&quot;&gt;&lt;img src=&quot;../assets/icons/download.png&quot; alt=&quot;Download&quot; /&gt; &lt;strong&gt;Download the latest release from 02/11/2021&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The current version supports a lot of configuration and administration capabilities, and I’m continuously improving WVDAdmin. Some features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Add, edit and delete host pools&lt;/li&gt;
&lt;li&gt;Add, edit and delete application groups&lt;/li&gt;
&lt;li&gt;Add, edit and delete application and desktop (you can add a new app with the Windows file-open-dialog)&lt;/li&gt;
&lt;li&gt;Add a list of users to applications or a desktop (separated by ;)&lt;/li&gt;
&lt;li&gt;Send messages to a single user and users on a specific session host&lt;/li&gt;
&lt;li&gt;Logoff single users or all users of a specific session host&lt;/li&gt;
&lt;li&gt;Start and deallocate session hosts (the Azure VM behind)&lt;/li&gt;
&lt;li&gt;Delete session hosts and the VMs in Azure, including disks and nics&lt;/li&gt;
&lt;li&gt;Run commands and scripts on multiple session hosts (trigger Windows updates, enable RDP Shortpath, …)&lt;/li&gt;
&lt;li&gt;Create an image from a template VM without destroying the template VM (golden image approach)&lt;/li&gt;
&lt;li&gt;Rollout several new session hosts based on a template image - including domain join and WVD installation and registration (comparable to Citrix MCS)&lt;/li&gt;
&lt;li&gt;Rollout VM Scale Sets&lt;/li&gt;
&lt;li&gt;Start and deallocate Scale Set instances&lt;/li&gt;
&lt;li&gt;Re-image Scale Set instances&lt;/li&gt;
&lt;li&gt;Add or remove Scale Set instances&lt;/li&gt;
&lt;li&gt;and some more things&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;installation&quot;&gt;Installation&lt;/h1&gt;
&lt;h2 id=&quot;release-history&quot;&gt;Release History&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;../assets/files/WVDAdmin.msi&quot;&gt;&lt;img src=&quot;../assets/icons/download.png&quot; alt=&quot;Download&quot; /&gt; &lt;strong&gt;Download the latest release from 02/11/2021&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;I'm continuously updating WVDAdmin to make it easier to administrate and deploy WVD, users, and session hosts. Click to see the change history.&lt;/summary&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Release&lt;/th&gt;
&lt;th&gt;Changes &amp;amp; Notes&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1.6.72.0&lt;/td&gt;
&lt;td&gt;Add: Fix for a sysprep failure (Sysprep data was marked corrupt; cannot proceed) in the ITPC-WVD-Image-Processing.ps1 script; Add: Better handling for shutdown/start/delete VM tasks in the Virtual Machines node&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.71.0&lt;/td&gt;
&lt;td&gt;Add: The disk size for new session hosts can be selected (optional) to have a higher IOPS performance&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.70.0&lt;/td&gt;
&lt;td&gt;Add: For preview only: Checkbox to enable upcoming “Start on connect feature”&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.69.0&lt;/td&gt;
&lt;td&gt;Fix: Open files are not shown if different storage accounts in different subscriptions are used under some circumstances&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.68.0&lt;/td&gt;
&lt;td&gt;Add: West Europe as metadata location (can only be used if the subscription is in an appropriate preview program); Add: Some scroll bars to list boxes&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.66.0&lt;/td&gt;
&lt;td&gt;Fix: Rollout from session hosts based on a share image gallery item failed in another subscription then the subscription containing the gallery image&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.65.0&lt;/td&gt;
&lt;td&gt;Add: Security query before hosts are started, stopped or restarted&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.64.0&lt;/td&gt;
&lt;td&gt;Add: Install session host optionally with Azure Monitor Extension or sepago Azure Monitor (for Azure Monitor Extension: Make sure that you have configured the target host pool correctly once: Right-click -&amp;gt; Configure Diagnostic settings)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.62.0&lt;/td&gt;
&lt;td&gt;Add: You can now terminate file handles to an Azure Storage (orphaned handles avoiding a user to log in with its FSLogix profile) - Service Principal needs contributor permissions to the storage account&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.61.0&lt;/td&gt;
&lt;td&gt;Add: VC++ runtime if you use the destkop installer&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.60.0&lt;/td&gt;
&lt;td&gt;Add: Manage your Virtual Machines like session hosts: Click on Azure - Virtual Machines to list all VMs in your subscriptions (note: data for the VMs are are delayed (resource graph))&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.59.0&lt;/td&gt;
&lt;td&gt;Change: Rollback of advanced logging of create VM / create Image Powershell script: Shows unimportand messages as an error with existing images&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.57.0&lt;/td&gt;
&lt;td&gt;Add: You can enable diagnostic settings directly on a host pool, appgroup and workspace (right-click); Fix: Sometimes reading the state of a script extension is not directly possible. This cause that the WVDAdmin log shows an error even if everything works as expected&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.56.0&lt;/td&gt;
&lt;td&gt;Change: Single session nodes are not listed under the session host node if more then 100 sessions exist to speed up WVDAdmin - all sessions are still in the session list&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.54.0&lt;/td&gt;
&lt;td&gt;Add: Function to delete unused disks and nics; Add: More logging for the rollout of session hosts; Add: New VM-types, like L4s_v2, …&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.53.0&lt;/td&gt;
&lt;td&gt;Add: Add session hosts automatically to Loadbalancer Backend Pools; Add: If a VM resource is unavailable, the first alternative VM size will be tried&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.51.0&lt;/td&gt;
&lt;td&gt;Add: Custom script to install &lt;a href=&quot;https://www.sepago.de/en/azure-monitor-en&quot;&gt;Azure Monitor for WVD from sepago&lt;/a&gt; to existing session hosts&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.50.0&lt;/td&gt;
&lt;td&gt;Add: Support for Dhsv3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.46.0&lt;/td&gt;
&lt;td&gt;Add: You can now rollout new session hosts with accelerated network configuration, Change: NICs are now created with the name of the VM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.45.0&lt;/td&gt;
&lt;td&gt;Add: Add session hosts automatically to ASGs&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&quot;../assets/files/WVDAdmin_1.6.42.msi&quot;&gt;1.6.42.0&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;Add: Support for Dasv4-series&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.41.0&lt;/td&gt;
&lt;td&gt;Add: Experimental feature: Add applications to session hosts from Windows Package Manager repository&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.40.0&lt;/td&gt;
&lt;td&gt;Change: Having a script-path for building images is no longer needed. If you leave the text box empty, the local script coming with WVDAdmin will be used and directly send to the VM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.35.0&lt;/td&gt;
&lt;td&gt;Add: On a session host &amp;gt; State &amp;gt; Mouse over will show the health report of the host&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.34.0&lt;/td&gt;
&lt;td&gt;Fix: The drop-down list “Feature release” was not shown correctly. Feature release is the selector between the different WVD versions like Fall (WVD classic) and Spring (WVD modern on ARM)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.32.0&lt;/td&gt;
&lt;td&gt;Add: You can run scripts on multiple classic session hosts: Win Updates: Install new available updates; Custom script: Custom script located in the program files folder of WVDAdmin&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.30.0&lt;/td&gt;
&lt;td&gt;Add: Sorting order for WVD resources&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.29.0&lt;/td&gt;
&lt;td&gt;Add: Support for Eav4 and Easv4-series&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.28.0&lt;/td&gt;
&lt;td&gt;Add: Speed up adding a lot of VMs to the treeview&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.27.0&lt;/td&gt;
&lt;td&gt;Add: Support for using availability zones. Select it from the drop-down list right to the resource group list&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.26.0&lt;/td&gt;
&lt;td&gt;Add: You can run scripts on multiple ARM session hosts: Win Updates: Install new available updates; Custom script: Custom script located in the program files folder of WVDAdmin&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.24.0&lt;/td&gt;
&lt;td&gt;Add: Multi selection and action on session hosts for ARM if you select a session host container; Fix: Scale Set instances wasn’t shown in 1.6.23&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.23.0&lt;/td&gt;
&lt;td&gt;Fix: New image was not visualized in the tree view after creation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.22.0&lt;/td&gt;
&lt;td&gt;Add: Support for shared image galleries: Add a shared image gallery from the Azure Portal into a resource group managed by WVDAdmin. In WVDAdmin right-click an existing image and select “copy to shared image gallery”. An image can be rolled-out right clicking the shared image&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.21.0&lt;/td&gt;
&lt;td&gt;Add: Double-click on the tag Logs, Sessions or Sessions V2 enlarge the part of the windows (double-click again to revert)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.18.0&lt;/td&gt;
&lt;td&gt;Fix: API change from Microsoft cause that updating a host pool property fails if the location is written like “Central US” (centralus is no problem); Add: First version able to deploy session hosts from images in a image gallery&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.16.0&lt;/td&gt;
&lt;td&gt;Add: Session hosts icons  are now based on the availability state; Fix: Enumerating thousands of sessions with thousands of session hosts takes longer as expected (&amp;gt; 4 minutes)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.14.0&lt;/td&gt;
&lt;td&gt;Add: Support US Government Cloud. Activate: Add a new string Reg_SZ “Environment” with value “US” to HKCU\SOFTWARE\ITProCloud\WVDAdmin”&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.12.0&lt;/td&gt;
&lt;td&gt;Add: Support for VM types: Dv4 and Dsv4-series, Ev4 and Esv4-series&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.11.0&lt;/td&gt;
&lt;td&gt;Fix: WVD ARM resources are deployed with the tags; Workspaces and host pools are separated by subscription name&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.9.00&lt;/td&gt;
&lt;td&gt;Fix: Generating toke for Spring host pool fails sometimes (Error: ExpirationTime value must be between one hour and 30 days from now”  - An error occurred while gathering an WVD2 token from backend: Object reference not set to an instance of an object.)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.5.00&lt;/td&gt;
&lt;td&gt;Add: Support for DD_v2 and DDS_V4 virtual machine types; Fix: Forwarding from the WVD API cause a authentication lost (error 401, 403 reading resources in the FALL update)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.4.00&lt;/td&gt;
&lt;td&gt;Add: Support for GEN2 virtual machines&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.2.00&lt;/td&gt;
&lt;td&gt;Add: New naming feature for new session host. Default (is): Name for a session host is the highest matching name +1; new concept (must be enabled): Name for a session host is the next free name. To enable add a reg dword to HKCU\Software\ITProCloud\WVDAdmin Name:NamingMode and value to “1”&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.1.00&lt;/td&gt;
&lt;td&gt;Fix: Default session limit for V2 host pool is now 999999&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.6.0.00&lt;/td&gt;
&lt;td&gt;Change: The tag WVD.Path is aligned to Microsoft naming of “tenant” and “host pool” for the spring update. Tenant=resource group name and no longer subscription name&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.5.9.00&lt;/td&gt;
&lt;td&gt;Add: Load assigned users button to the app group tab (fall update)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.5.7.00&lt;/td&gt;
&lt;td&gt;Add: You can join existing VM’ to a host pool (VMs must be domain joined and not in a host pool right now)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.5.6.00&lt;/td&gt;
&lt;td&gt;Add: You can now move session host around host pools not created with WVDAdmin (it downloads the necessary files automatically); you can join existing VM’ to a host pool (VMs must be domain joined)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.5.5.00&lt;/td&gt;
&lt;td&gt;Fix: Enumerating VMs was endless in some circumstance&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.5.4.00&lt;/td&gt;
&lt;td&gt;Add: Migration from Fall to Spring Update; moving session hosts to another host pool&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.5.3.00&lt;/td&gt;
&lt;td&gt;Fix: Improvement updating the treeview&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.5.0.00&lt;/td&gt;
&lt;td&gt;Add:  &lt;a href=&quot;https://blog.itprocloud.de/Windows-Virtual-Desktop-Spring-Update,-Spring-Release&quot;&gt;Supporting the WVD Spring Release / Spring Update&lt;/a&gt; ; Some user operations from the session grid are now async; Fix: Spontaneous resize of the windows if data are reloaded&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.4.9.00&lt;/td&gt;
&lt;td&gt;Add: Filter users, session hosts and host pools in the overview of sessions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.4.8.00&lt;/td&gt;
&lt;td&gt;Add: Support to add users by groups from Azure Active Directory, including an AAD browser (check my &lt;a href=&quot;https://blog.itprocloud.de/Windows-Virtual-Desktop-Add-Users-and-Groups-to-WVD/&quot;&gt;blog post&lt;/a&gt; and configure the service principal to use this feature)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.4.6.00&lt;/td&gt;
&lt;td&gt;Add: New VM sizes; all new scale sets are deployed as really scalable version (up to 600 instances each)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.4.4.00&lt;/td&gt;
&lt;td&gt;Fix: Service Principal Keys with some special characters are working now; Add: Faster loading of resources from WVD and Azure backend&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.4.2.00&lt;/td&gt;
&lt;td&gt;Add: Support for NVv4 VM sizes (based on AMD Radeon Instinct  MI25-GPU); support to set custom Azure tags for resources while deploying resources&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.4.0.00&lt;/td&gt;
&lt;td&gt;Fix: From an older version, disks are deployed as standard-hdd even if premium-disk was selected; Change: Connection views are now located parallel to the logging list on the bottom (tenant-view); Add: Function to check for an updated version via &lt;a href=&quot;../assets/files/WVDAdmin.xml&quot;&gt;https://blog.itprocloud.de/assets/files/WVDAdmin.xml&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.3.6.00&lt;/td&gt;
&lt;td&gt;Add: New tag for session hosts: WVD.Path - used by &lt;a href=&quot;http://loganalytics.sepago.com/&quot;&gt;Azure Monitor for WVD&lt;/a&gt; and &lt;a href=&quot;https://github.com/MarcelMeurer/Project-MySmartScale&quot;&gt;Azure Autoscale for WVD - aka Project MySmartScale&lt;/a&gt; if an installed language pack conflicts with the Microsoft RDAgent (read this &lt;a href=&quot;https://blog.itprocloud.de/Windows-Virtual-Desktop-Language-Packs-Detecting-Host-Pool-and-Tenant-Name/&quot;&gt;post&lt;/a&gt; to learn more)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.3.5.00&lt;/td&gt;
&lt;td&gt;Add: Allow an local admin to shadow a user session (WVDAdmin needs direct access to the session host via RDP)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.3.4.00&lt;/td&gt;
&lt;td&gt;Add: Networks are now listed as VNET/SUBNET in the rollout tab&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.3.3.00&lt;/td&gt;
&lt;td&gt;Add: Support for a special mode if your WVD tenant and the session hosts in two different Azure Active Directory tenants&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.3.1.00&lt;/td&gt;
&lt;td&gt;Fix: WVDAdmin crashed if 1.3.0 is your first version of WVDAdmin (HKEY_CURRENT_USER\Software\ITProCloud doesn’t exist while checking for multi-tenancy mode)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.3.0.00&lt;/td&gt;
&lt;td&gt;Add: AAD multi-tenancy mode (drop down list to handle different AADs) - &lt;a href=&quot;https://blog.itprocloud.de/Windows-Virtual-Desktop-Windows-Virtual-Desktop-Administration-for-CSP-and-Consulting-Partners/&quot;&gt;https://blog.itprocloud.de/Windows-Virtual-Desktop-Windows-Virtual-Desktop-Administration-for-CSP-and-Consulting-Partners&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.2.8.00&lt;/td&gt;
&lt;td&gt;Add: If you click a tenant a tenant wide list of sessions is listed.  Logoff or send messages to multiple sessions&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.2.7.00&lt;/td&gt;
&lt;td&gt;Add: The main window of the application is now resizeable&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.2.5.00&lt;/td&gt;
&lt;td&gt;Add: Support for Scale Sets (with normal and ephemeral disks) -&amp;gt; see below&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.2.4.00&lt;/td&gt;
&lt;td&gt;Add: Support for availability sets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.2.3.00&lt;/td&gt;
&lt;td&gt;Add: Support for automatic and static assigned host pools&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.2.1.00&lt;/td&gt;
&lt;td&gt;&lt;a name=&quot;v121-note&quot;&gt;&lt;/a&gt;Fix: Logging of rollout parameter by Azure custom extension is removed to avoid logging secrets&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.0.0.30&lt;/td&gt;
&lt;td&gt;Fix: Rollout - OU can now be empty to join the default OU&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.0.0.29&lt;/td&gt;
&lt;td&gt;Add: Supporting “special license mode” to save up to 50% on compute-cost (&lt;a href=&quot;https://docs.microsoft.com/en-us/azure/virtual-desktop/apply-windows-license&quot;&gt;https://docs.microsoft.com/en-us/azure/virtual-desktop/apply-windows-license&lt;/a&gt;)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.0.0.26&lt;/td&gt;
&lt;td&gt;Add: Template VM can now be a VM with a standard disk (non-managed)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.0.0.25&lt;/td&gt;
&lt;td&gt;Fix: If you delete a VM the OS disk will deleted as well&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.0.0.23&lt;/td&gt;
&lt;td&gt;Support for ephemeral  disks&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1.0.0.22&lt;/td&gt;
&lt;td&gt;First published version - without auto-update of WVD Admin&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/details&gt;&lt;br/&gt;
&lt;h2 id=&quot;configuration&quot;&gt;Configuration&lt;/h2&gt;
&lt;h2 id=&quot;service-principal-functional-account&quot;&gt;Service principal (functional account)&lt;/h2&gt;
&lt;p&gt;To work with the GUI, you need a service principal (function account) with permission to administrate access to the WVD and Azure resources. I decide to use a service principal to avoid confusion if my Azure AD user is only a guest account in the WVD tenant I have to administrate and easily switch between different tenants.&lt;/p&gt;
&lt;p&gt;To create a service principal, go to your Azure AD -&amp;gt; &lt;a href=&quot;https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredApps&quot; target=&quot;_blank&quot;&gt;App registration&lt;/a&gt; -&amp;gt; New registration and type a name for your principal like “ svc_WVDAdmin” and press “register”.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-001.png&quot; alt=&quot;documentation-001&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Click on “certificates &amp;amp; secrets”. Click “new client secret”, select a validity period and a description (like “Key01”). Press “add”.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-002.png&quot; alt=&quot;documentation-002&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Copy the generated key directly - it will never be displayed again. Note the key for later.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-003.png&quot; alt=&quot;documentation-003&quot; /&gt;&lt;/p&gt;
&lt;p&gt;To assign users to app groups, the service principal needs two API permissions to get the users and groups from Azure AD:&lt;/p&gt;
&lt;p&gt;API Permissions: Add the permission “Azure Active Directory Graph” -&amp;gt; Application Permission -&amp;gt; Directory.Read.All&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/SP-PermissionToReadDirectoryObjects-01.png&quot; alt=&quot;AADBrowser&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Add the permission “Microsoft Graph” -&amp;gt; Application Permission -&amp;gt; Directory.Read.All&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/SP-PermissionToReadDirectoryObjects-01b.png&quot; alt=&quot;AADBrowser&quot; /&gt;&lt;/p&gt;
&lt;p&gt;To consent, the permission and administrator of Azure AD have to grant this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/SP-PermissionToReadDirectoryObjects-02.png&quot; alt=&quot;AADBrowser&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Go to “Overview”. Note the “Application (client) ID” and the “Directory (tenant) ID” as well.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-004.png&quot; alt=&quot;documentation-004&quot; /&gt;&lt;/p&gt;
&lt;p&gt;You now have all data for your service principal:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tenant id&lt;/li&gt;
&lt;li&gt;Service principal id (application id)&lt;/li&gt;
&lt;li&gt;Service principal key&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;wvd-permissions-classic--fall-version&quot;&gt;WVD permissions (Classic / Fall Version)&lt;/h2&gt;
&lt;p&gt;This chapter is for WVD Classic / Fall. &lt;a href=&quot;#wvd-permissions-arm--spring-version&quot;&gt;Skip&lt;/a&gt; this chapter if you only work with WVD ARM (Spring).&lt;/p&gt;
&lt;p&gt;To use WVDAdmin you need at least an existing WVD tenant. If you new to WVD follow this article to create a WVD tenant:  [https://docs.microsoft.com/en-us/azure/virtual-desktop/virtual-desktop-fall-2019/tenant-setup-azure-active-directory)&lt;/p&gt;
&lt;p&gt;You have to use PowerShell to give the WVD the appropriated permission:&lt;/p&gt;
&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Import-Module&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Microsoft.RDInfra.RDPowerShell&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# log on with an administrative user account to your &lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Add-RdsAccount&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-DeploymentUrl&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://rdbroker.wvd.microsoft.com&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# list rds tenants&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Get-RdsTenant&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# give your service principal the right permission&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;New-RdsRoleAssignment&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-TenantName&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Builder City&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-RoleDefinitionName&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;RDS Owner&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-ApplicationId&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;89050a12-xxxx-xxxx-xxxx-000000000000&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-005.png&quot; alt=&quot;documentation-005&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;wvd-permissions-arm--spring-version&quot;&gt;WVD permissions (ARM / Spring Version)&lt;/h2&gt;
&lt;p&gt;This chapter is for WVD ARM / Spring. &lt;a href=&quot;#azure-resource-permissions&quot;&gt;Skip&lt;/a&gt; this chapter if you only work with WVD Classic (Fall).&lt;/p&gt;
&lt;p&gt;The service principal needs permission to add and modify WVD resource objects (host pools, workspaces, app groups). To assign users and groups to app groups, the service principal needs the owner role on the resource groups you want to use for your WVD environment. Add the service principal in the next step and use the &lt;strong&gt;owner&lt;/strong&gt; role.&lt;/p&gt;
&lt;h2 id=&quot;register-resource-provider-arm--spring-version&quot;&gt;Register Resource Provider (ARM / Spring Version)&lt;/h2&gt;
&lt;p&gt;This chapter is for WVD ARM / Spring. &lt;a href=&quot;#azure-resource-permissions&quot;&gt;Skip&lt;/a&gt; this chapter if you only work with WVD Classic (Fall).&lt;/p&gt;
&lt;p&gt;If you have never worked with WVD, you have to register the WVD resource provider once. To do that, go to the Azure portal -&amp;gt; subscriptions -&amp;gt; select your subscription -&amp;gt; Resource providers&lt;/p&gt;
&lt;p&gt;Search for “Microsoft.DesktopVirtualization” and click on “Register”.
&lt;img src=&quot;../assets/images/WVDAdmin/documentation-015.png&quot; alt=&quot;documentation-015&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;azure-resource-permissions&quot;&gt;Azure resource permissions&lt;/h2&gt;
&lt;p&gt;The service principal needs permission to subscriptions or resource groups to manage your WVD resources, imaging template VM and rollout session hosts.&lt;/p&gt;
&lt;p&gt;Open the Azure portal and go to the resource groups you want to use or to the subscriptions. In each resource group/subscription, click “Access control (IAM)” -&amp;gt; select “Add” -&amp;gt; Add role assignment. Select “owner” and search in “Select” for your service principal name. Click on the principal and save the settings.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Owner is needed to assign users to app groups. For other resources, “contributor” is fine.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-006.png&quot; alt=&quot;documentation-006&quot; /&gt;&lt;/p&gt;
&lt;p&gt;The service principal must have permissions to your virtual network (vnet) to assign new VMs to the right subnet. Go to your vnet, click “Access control (IAM)” -&amp;gt; select “Add” -&amp;gt; Add role assignment. Select “contributor” and search in “select” for your service principal name. Click the principal and save the settings. You could skip this step if you assigned the service principal to the subscription or to the resource group containing your vnet.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-007.png&quot; alt=&quot;documentation-007&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;prepare-your-native-active-directory&quot;&gt;Prepare your “native” Active Directory&lt;/h2&gt;
&lt;p&gt;Today each session host must be part of a “native” active directory domain (or have to use the domain services). To add new session hosts unattended, we need an administrative user account to add a computer object to the active directory domain. You can use an existing one, or you can create a new service user:&lt;/p&gt;
&lt;p&gt;Open “Active Directory Users and Computers” and create a user object with a complex password, and set a password to “never expire” (if you fine with this). I added the user &lt;a href=&quot;mailto:srv_WVD-Join@itprocloud.de&quot;&gt;srv_WVD-Join@itprocloud.de&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Delegate permission for the user to an OU. I found a really good blog post from &lt;a href=&quot;https://twitter.com/prajwaldesai&quot;&gt;Prajwal Desai&lt;/a&gt;. Check out hist post on (external web site): &lt;a href=&quot;https://www.prajwaldesai.com/allow-domain-user-to-add-computer-to-domain/&quot; target=&quot;_blank&quot;&gt;Method 2 – Delegate rights to user/group using Active Directory Users and Computers&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In my case I added my function account to: “OU=WVD,OU=Azure,OU=Site,OU=Servers,OU=Sys,OU=Organisation,DC=ITProCloud,DC=test”&lt;/p&gt;
&lt;h2 id=&quot;optional-create-a-file-share&quot;&gt;Optional: Create a file share&lt;/h2&gt;
&lt;p&gt;In earlier versions (&amp;lt;1.6.40), you had to provide the deployment script and the WVD agent binaries on a custom file share or blob storage. With WVDAdmin 1.6.40 or newer, this no longer mandatory.
In some cases, where virtual machines don’t have access to the internet to download the WVD agent binaries, you can use a custom file share.&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;Read more.&lt;/summary&gt;&lt;br/&gt;
&lt;p&gt;&lt;em&gt;Hint: Alternatively, you can use Azure blob storage to store the script. Make the blob storage read-only and use the URL as rollout script-path. E.g.: &lt;a href=&quot;https://sharedservices01.blob.core.windows.net/wvd&quot;&gt;https://sharedservices01.blob.core.windows.net/wvd&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Create a file share for the configuration script (which adds new session hosts to the domain and install the WVD agent). Give everyone at least read permissions. Set the NTFS permissions to everyone and read. This is necessary while during the first startup, the VM extension tries to execute the script. In this process, the file share is accessed anonymously.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-009.png&quot; alt=&quot;documentation-009&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-010.png&quot; alt=&quot;documentation-010&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Place the following files in this share:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.itprocloud.de/assets/files/AutoUpdate/Scripts/ITPC-WVD-Image-Processing.ps1.txt&quot;&gt;ITPC-WVD-Image-Processing.ps1&lt;/a&gt; (rename the download to .ps1)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RWrmXv&quot;&gt;Microsoft.RDInfra.RDAgent.msi&lt;/a&gt; (rename the file)&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RWrxrH&quot;&gt;Microsoft.RDInfra.RDAgentBootLoader.msi&lt;/a&gt; (rename the file)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Make sure that you rename the files to fit the list above (without version numbers).&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-011.png&quot; alt=&quot;documentation-011&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Important:&lt;/strong&gt; If you are using Windows Server &lt;strong&gt;2019&lt;/strong&gt; as file share, make sure that anonymous file share access is enabled. Create a GPO for the session hosts containing the following configurations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Security Options:
&lt;ul&gt;
&lt;li&gt;Accounts: Guest Account Status: Enabled&lt;/li&gt;
&lt;li&gt;Network access: Let Everyone permissions apply to anonymous users: Enabled&lt;/li&gt;
&lt;li&gt;Network access: Do not allow anonymous enumeration of SAM accounts and shares: Disabled&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;&lt;br/&gt;
&lt;h1 id=&quot;configure-wvdadmin&quot;&gt;Configure WVDAdmin&lt;/h1&gt;
&lt;p&gt;Please start WVDAdmin. Before you load WVD and Azure data, copy the Azure tenant id, service principal id, and service principal key into the welcome tab. Press save and load the data by clicking “Reload all”.&lt;/p&gt;
&lt;p&gt;You are now able to administrate WVD, create images from template VMs and rollout new session hosts.&lt;/p&gt;
&lt;p&gt;The first time you want to roll out new session hosts, you have to enter some information from your Active Directory and file share configuration from above:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-012.png&quot; alt=&quot;documentation-012&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Local Admin and local pw. are the local administrator account credentials which you can enter at this time.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-013.png&quot; alt=&quot;documentation-013&quot; /&gt;&lt;/p&gt;
&lt;h1 id=&quot;build-an-image&quot;&gt;Build an image&lt;/h1&gt;
&lt;p&gt;You can rollout VMs and VM Scale Set with images created by WVDAdmin. These images contain the logic to join the AD domain and WVD.&lt;/p&gt;
&lt;p&gt;You can simple create an image from a template VM. The template VM must part of your AD like a standard client. You have not to sysprep or to normalize this template VM. Use the same template VM for Windows and application updates.&lt;/p&gt;
&lt;p&gt;Following these steps to build your template:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install a VM in the Azure portal. Select the right OS (like Windows 10 Enterprise for Virtual Desktops)&lt;/li&gt;
&lt;li&gt;Make all Windows updates&lt;/li&gt;
&lt;li&gt;Join the VM to your AD&lt;/li&gt;
&lt;li&gt;Install your application&lt;/li&gt;
&lt;li&gt;Make your customizing (like installing language packages)&lt;/li&gt;
&lt;li&gt;Shutdown the template VM&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To create the image, open WVDAdmin and&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Navigate to the Azure template VM (Azure -&amp;gt; Virtual Machines -&amp;gt; RG -&amp;gt; VM)&lt;/li&gt;
&lt;li&gt;Right-click -&amp;gt; “Create a template image”&lt;/li&gt;
&lt;li&gt;Select the resource group to store the image&lt;/li&gt;
&lt;li&gt;Press “Capture”&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can and should reuse the template VM for new updates and applications. After these changes, shut down the template VM and create a new image.&lt;/p&gt;
&lt;h1 id=&quot;tipps-amp-tricks&quot;&gt;Tipps &amp;amp; Tricks&lt;/h1&gt;
&lt;h2 id=&quot;vm-scale-sets&quot;&gt;VM Scale Sets&lt;/h2&gt;
&lt;p&gt;First node: VM Scale Sets cannot autoscale WVD session hosts. Auto-scaling only works for stateless services like a web server. But if you need hundreds of session hosts, then VM Scale Set allows you to work with these numbers efficiently.&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;Read more&lt;/summary&gt;&lt;br/&gt;
From version 1.2.5, WVDAdmin support VM Scale Sets. A Scale Set can have several instances, which are the VMs / session hosts. There are some essential things you have to know if you use VM Scale Set with WVDAdmin and WVD itself:
&lt;ul&gt;
&lt;li&gt;Build a Scale Set with WVDAdmin. Select an image, right-click and select “Create session host from image”. Check “Rollout as VM Scale Set”&lt;/li&gt;
&lt;li&gt;You can use regular disks and ephemeral disks. If you use ephemeral disks, you cannot deallocate the instances of your Scale Set. You have to delete the instances&lt;/li&gt;
&lt;li&gt;Today, you can not use ultra disks&lt;/li&gt;
&lt;li&gt;You can add and remove instances with WVDAdmin or in the Azure Portal. New instances will join the domain and WVD&lt;/li&gt;
&lt;li&gt;A new instance can only join WVD if the session host with the new name doesn’t exist. If you delete instances, the session host entry will also be removed&lt;/li&gt;
&lt;li&gt;You can re-image single instances or all instances of a Scale Set. After that, the instances are “clean” as at the first rollout&lt;/li&gt;
&lt;li&gt;Adding instances or re-imaging assumes that the Scale Set configuration (which is a custom script extension) has a valid WVD token to join new instances to WVD. While WVD provides only one token per host pool and that the token can be expiring, you can update the token with a right-click on the Scale Set and select “Update WVD token”. The max. lifetime of a token is 59 days&lt;/li&gt;
&lt;li&gt;Unfortunately, WVDAdmin cannot change the source image for a VM Scale Set. So if you want to update the image for a host pool, take these steps:
&lt;ul&gt;
&lt;li&gt;Rollout a new Scale Set based on the new image&lt;/li&gt;
&lt;li&gt;Disable new logons for the old session host from the previous Scale Set&lt;/li&gt;
&lt;li&gt;Test the host pool based on the new Scale Set&lt;/li&gt;
&lt;li&gt;If no user logged on to the ancient Scale Set, remove all instances from the Scale Set (this deletes the session hosts in WVD as well)&lt;/li&gt;
&lt;li&gt;Remove the Scale Set&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/details&gt;&lt;br/&gt;
&lt;h2 id=&quot;ephemeral--disks&quot;&gt;Ephemeral  disks&lt;/h2&gt;
&lt;p&gt;Ephemeral disks are awesome. They give you a high performance free of charge. Especially in a WVD multiuser environment where no data a stored permanently on the session hosts, this kind of disk can give you some value add.&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;Read more&lt;/summary&gt;&lt;br/&gt;
Ephemeral disks are running on the Azure hypervisor and not stored. This has some advantages:
&lt;ul&gt;
&lt;li&gt;There are no storage costs (!)&lt;/li&gt;
&lt;li&gt;A very high data throughput because the disks exist on the hypervisor&lt;/li&gt;
&lt;li&gt;See &lt;a href=&quot;https://twitter.com/michawets&quot;&gt;@MichaWets&lt;/a&gt;   blog post for more information:  &lt;a href=&quot;https://www.cloud-architect.be/2019/07/15/windows-virtual-desktop-running-on-ephemeral-os-disks/&quot;&gt;https://www.cloud-architect.be/2019/07/15/windows-virtual-desktop-running-on-ephemeral-os-disks/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Please note:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;You can not deallocate a VM with this disk type - you have to delete the VM (and roll out a new one instead of starting a “normal” VM)&lt;/li&gt;
&lt;li&gt;Not each VM size is available, and there are limitations of the disk size (image size for rollout) based on the VM size: Max ephemeral disk size for  Standard_D4s_v3  is 64 GByte while a  Standard_D8s_v3 can have up to 128 GByte. See &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/virtual-machines/linux/sizes-general&quot;&gt;https://docs.microsoft.com/en-us/azure/virtual-machines/linux/sizes-general&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;If the Azure hypervisor fails, your session host will fail as well and can not be re-deployed automatically&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-014.png&quot; alt=&quot;documentation-001&quot; /&gt;&lt;/p&gt;
&lt;/details&gt;&lt;br/&gt;
&lt;h2 id=&quot;secret-features&quot;&gt;Secret Features&lt;/h2&gt;
&lt;p&gt;WVDAdmin has some features not directly visible but configurable via registry keys. All settings in the registry are in the current user part under HKEY_CURRENT_USER\SOFTWARE\ITProCloud\WVDAdmin. Keep in mind to restart WVDAdmin after changing the registry settings.&lt;/p&gt;
&lt;details&gt;&lt;summary&gt;Read more&lt;/summary&gt;&lt;br/&gt;
&lt;h3 id=&quot;multi-tenant-mode&quot;&gt;Multi-Tenant-Mode&lt;/h3&gt;
&lt;p&gt;From version 1.3.0 WVDAdmin will support a multi-AAD-tenancy mode allowing to switch the Azure AD tenant very easily.
&lt;a href=&quot;../Windows-Virtual-Desktop-Windows-Virtual-Desktop-Administration-for-CSP-and-Consulting-Partners&quot;&gt;Follow this link&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;having-multiple-service-principals-for-a-single-tenant&quot;&gt;Having multiple Service Principals for a single Tenant&lt;/h3&gt;
&lt;p&gt;In the Multi-Tenant-Mode, you can add one service principal per tenant. Sometimes you need more service principals for the same tenant. You can add more service principals for a tenant if you append #1 directly behind the tenant id (or #2, …).&lt;/p&gt;
&lt;h3 id=&quot;naming-of-the-session-hosts&quot;&gt;Naming of the Session Hosts&lt;/h3&gt;
&lt;p&gt;If you deploy session hosts to a host pool, WVDAdmin counts up the names from the highest available VM. E.g., if you have a session host with the name “WVD-PROD-012” and you rollout new hosts (WVD-PROD-###), the first new hostname is “WVD-PROD-013” - even if you have gaps in the existing numeration. You can force WVDAdmin to fill this gaps (non-existing hosts in the naming schema) if you set the following registry key:
Reg-DWord: &lt;strong&gt;NamingMode&lt;/strong&gt; = &lt;strong&gt;1&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;split-tenant&quot;&gt;Split-Tenant&lt;/h3&gt;
&lt;p&gt;Usually, the WVD tenant and the resources (sessions hosts) are in the same AAD tenant. If you have two Azure AD tenant, you can use WVDAdmin with a second service principal for the session hosts (resource tenant).
&lt;a href=&quot;../Windows-Virtual-Desktop-Admin-for-2-tenant-mode&quot;&gt;Follow this link&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;us-government-cloud&quot;&gt;US-Government Cloud&lt;/h3&gt;
&lt;p&gt;WVDAdmin can be used to deploy WVD in the Azure Government Cloud. You can enable WVDAdmin to work in the US Government Cloud via registry:
Reg-SZ: &lt;strong&gt;Environment&lt;/strong&gt; = &lt;strong&gt;US&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;run-custom-actions-simultaneously&quot;&gt;Run custom actions simultaneously&lt;/h3&gt;
&lt;p&gt;From version 1.6.15, WVDAdmin supports custom scripts to run administrative tasks simultaneously on different session hosts. And that is easy to use and to extend.
&lt;a href=&quot;../Windows-Virtual-Desktop-Admin-CustomScripts&quot;&gt;Follow this link&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;add-a-session-host-automatically-to-an-asg&quot;&gt;Add a session host automatically to an ASG&lt;/h3&gt;
&lt;p&gt;You can add a session host automatically to application security groups (ASG) within the rollout process. To achieve this, add one or more tags to the host pool containing your new session hosts. Name &lt;strong&gt;WVD.Default.ASG.X&lt;/strong&gt; and add the azure resource id of an existing asg. X can be numbers to assign more ASGs. You can copy the id from an ASG from your browser. It looks like this: /subscriptions/&amp;lt;subscription-id&amp;gt;/resourcegroups/&amp;lt;resourcegroup-name&amp;gt;/providers/Microsoft.Network/applicationSecurityGroups/&amp;lt;asg-name&amp;gt;
&lt;img src=&quot;../assets/images/WVDAdmin/asg-001.png&quot; alt=&quot;Tag for ASG&quot; /&gt;&lt;/p&gt;
&lt;h3 id=&quot;add-a-session-host-automatically-to-a-loadbalancer-backend-pool&quot;&gt;Add a session host automatically to a Loadbalancer Backend Pool&lt;/h3&gt;
&lt;p&gt;You can add a session host automatically to a loadbalancer backend pool within the rollout process. To achieve this, add one or more tags to the host pool containing your new session hosts. Name &lt;strong&gt;WVD.Default.LBPool.X&lt;/strong&gt; and add the azure resource id of an existing loadbalancer backend pool. X can be numbers to assign more ASGs. You can copy the id from a pool from your browser. It looks like this: /subscriptions/&amp;lt;subscription-id&amp;gt;/resourcegroups/&amp;lt;resourcegroup-name&amp;gt;/providers/Microsoft.Network/loadBalancers/&amp;lt;loadbalancer-name&amp;gt;/backendAddressPools/&amp;lt;pool-name&amp;gt;
Keep in mind to use availability sets for each rollout to use this feature.&lt;/p&gt;
&lt;/details&gt;&lt;br/&gt;
&lt;h1 id=&quot;troubleshooting&quot;&gt;Troubleshooting&lt;/h1&gt;
&lt;h2 id=&quot;create-an-image&quot;&gt;Create an Image&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;The image is not created. An error message occurs:&lt;/li&gt;
&lt;li&gt;Check if your template VM part of the AD&lt;/li&gt;
&lt;li&gt;If your file server Windows Server 2019, read above&lt;/li&gt;
&lt;li&gt;Check if you have set the NTFS and share permission correctly&lt;/li&gt;
&lt;li&gt;Azure portal: Go to the temp VM (next to the template VM) and check the extension installation state. There should be an error message like script not found, access denied, etc.&lt;/li&gt;
&lt;li&gt;Have you renamed the RD agent and bootloader?&lt;/li&gt;
&lt;li&gt;Is the script saved correctly: ITPC-WVD-Image-Processing.ps1, not ITPC-WVD-Image-Processing.ps1.txt&lt;/li&gt;
&lt;li&gt;Don’t forget to delete the temp VM and temp disk to avoid costs&lt;/li&gt;
&lt;li&gt;Make sure that your template VM uses managed disk&lt;/li&gt;
&lt;li&gt;The script generates additional log files in %WinDir%\System32\LogFiles&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Windows 7&lt;/em&gt;: Make sure to install PowerShell 5.1 and all Windows updates (including the optional updates without the language packages) to the template VM and restart the VM to take effect: &lt;a href=&quot;https://www.microsoft.com/en-us/download/details.aspx?id=54616&quot;&gt;https://www.microsoft.com/en-us/download/details.aspx?id=54616&lt;/a&gt; Makes sure that you use the newest script file from 09/2020: &lt;a href=&quot;https://blog.itprocloud.de/assets/files/AutoUpdate/Scripts/ITPC-WVD-Image-Processing.ps1.txt&quot;&gt;ITPC-WVD-Image-Processing.ps1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;NEW: An endless loop of “Waiting for the temporary vm (power off)” : Update to the newest PowerShell script for generalizing: &lt;a href=&quot;https://blog.itprocloud.de/assets/files/AutoUpdate/Scripts/ITPC-WVD-Image-Processing.ps1.txt&quot;&gt;ITPC-WVD-Image-Processing.ps1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;others&quot;&gt;Others&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;You have created a host pool, an app group, and assigned a user to the app group, but the user cannot see the apps/desktop.
&lt;ul&gt;
&lt;li&gt;For WVD ARM: Don’t forget to create a workspace and link the app group in the workspace. The workspace is mandatory to show the users’ resources.&lt;/li&gt;
&lt;li&gt;For the HTML5 web site: Check the correct web address:
&lt;ul&gt;
&lt;li&gt;ARM/Spring: &lt;a href=&quot;https://aka.ms/wvdarmweb&quot;&gt;https://aka.ms/wvdarmweb&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Classic/Fall: &lt;a href=&quot;http://aka.ms/wvdweb&quot;&gt;http://aka.ms/wvdweb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&quot;../assets/files/WVDAdmin.msi&quot;&gt;&lt;img src=&quot;../assets/icons/download.png&quot; alt=&quot;Download&quot; /&gt; &lt;strong&gt;Download the latest release from 02/11/2021&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 11 Feb 2021 00:00:00 +0100</pubDate>
        <link>/Windows-Virtual-Desktop-Admin/</link>
        <guid isPermaLink="true">/Windows-Virtual-Desktop-Admin/</guid>
        
        
        <category>Windows Virtual Desktop</category>
        
      </item>
    
      <item>
        <title>Push Windows Virtual Desktop (WVD) Session Host state to Log Analytics to create alerts if hosts become unavailable or failed</title>
        <description>&lt;p&gt;Microsoft offers an easy way to monitor a WVD environment’s basic metrics directly integrated into the Azure portal. I mostly extend the monitoring using sepago’s Azure Monitor for WVD (&lt;a href=&quot;https://www.sepago.de/en/azure-monitor-en/&quot;&gt;https://www.sepago.de/en/azure-monitor-en/&lt;/a&gt;), which is also included in Nerdio Manager for WVD (&lt;a href=&quot;https://getnerdio.com/nerdio-manager-for-wvd/&quot;&gt;https://getnerdio.com/nerdio-manager-for-wvd/&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;The native Microsoft solution shows the session hosts’ state (available, unavailable, failed, …) in a workbook (insights) in the Azure Portal. Unfortunately, the way of showing this state cannot be used to create an alert in Azure Monitor and get notified.&lt;/p&gt;
&lt;p&gt;To solve this challenge, we have to put the session host states as a custom log into a Log Analytics workspace. The data can be queried and uploaded to Log Analytics with an Azure Logic App&lt;/p&gt;
&lt;h2 id=&quot;installation-and-configuration&quot;&gt;Installation and configuration&lt;/h2&gt;
&lt;p&gt;Deploy the prepared logic app into your subscription using the “Deploy to Azure” button.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fblog.itprocloud.de%2Fassets%2Ffiles%2FAzureDeployments%2FLA-SessionHostStatesToLogAnalytics.json&quot;&gt;&lt;img src=&quot;https://aka.ms/deploytoazurebutton&quot; alt=&quot;Deploy to Azure&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To query the Azure Management API, you need a service principal (a function account) with the right permission. Create the service principal in the Azure Portal:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Azure Active Directory -&amp;gt; App registrations -&amp;gt; New registration and give it a name (e.g. svc_AzureWvdSessionHostsAvailability4AzureMonitor) and press register
&lt;img src=&quot;../assets/images/LogicApp-WVDSH-AzureMonitor-001.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;li&gt;Go to Certificates and secrets -&amp;gt; Add new client secret and type in a name (e.g. Key1) and expiration date (make a note into your calendar) and press add
&lt;img src=&quot;../assets/images/LogicApp-WVDSH-AzureMonitor-002.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;li&gt;Copy the generated secret for later use&lt;/li&gt;
&lt;li&gt;Go to overview and copy the application id and directory id for later use
&lt;img src=&quot;../assets/images/LogicApp-WVDSH-AzureMonitor-003.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;li&gt;Give the service principal permission to the subscription: Access control (IAM) -&amp;gt; Add -&amp;gt; Add role assignment -&amp;gt; “Desktop Virtualization Host Pool Reader” and select the service principal
&lt;img src=&quot;../assets/images/LogicApp-WVDSH-AzureMonitor-004.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To upload the data to your Azure Monitor / log analytics workspace, you need the workspace id and key of an existing Log Analytics workspace.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Go to your log analytics workspace -&amp;gt; select Advanced settings -&amp;gt; Agents management -&amp;gt; copy the workspace id and primary key for later use
&lt;img src=&quot;../assets/images/LogicApp-AAD-AzureMonitor-005.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Go to your deployed logic app and click edit.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Edit the configuration of “Authentication: Tenant Id”, “Authentication: App Id”, “Authentication: App Password” and “Subscription Id”: Enter the data of the service principal and the subscription id (Guid)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Expand “For each”, “Until” and open “Send Data (Preview)”&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on Connections and add a new one (Add new)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Give a name (e.g. ToLogAnalytics), the primary key and workspace id from log analytics and press create
&lt;img src=&quot;../assets/images/LogicApp-WVDSH-AzureMonitor-005.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Save the logic app and press run to test it.&lt;/p&gt;
&lt;p&gt;If everything looks good, our logic app will upload the  data to log analytics every 5 minutes (can be changed).&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../assets/images/LogicApp-WVDSH-AzureMonitor-006.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;h2 id=&quot;querying-data&quot;&gt;Querying data&lt;/h2&gt;
&lt;p&gt;You can query the data from log analytics with &lt;strong&gt;WVDHostPoolStatistic_CL&lt;/strong&gt;. Keep in mind that it takes a while (30 minutes) to build the first upload schema.&lt;/p&gt;
&lt;p&gt;To show the data in a list you can start with this query:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;WVDHostPoolStatistic_CL
| project TimeGenerated, SessionHost=name_s, properties_status_s, properties_allowNewSession_b, properties_updateState_s, properties_assignedUser_s
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;../assets/images/LogicApp-WVDSH-AzureMonitor-007.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;To create an alert you can add an alert to Log Analytics based on the following query (lists unavailable hosts):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;WVDHostPoolStatistic_CL
| project TimeGenerated, SessionHost=name_s, properties_status_s, properties_allowNewSession_b, properties_updateState_s, properties_assignedUser_s
| where properties_status_s=~&amp;quot;unavailable&amp;quot;
&lt;/code&gt;&lt;/pre&gt;</description>
        <pubDate>Fri, 15 Jan 2021 00:00:00 +0100</pubDate>
        <link>/Push-WVD-Session-Hosts-data-and-status-into-Azure-Monitor-Log-Analytics-to-create-alerts/</link>
        <guid isPermaLink="true">/Push-WVD-Session-Hosts-data-and-status-into-Azure-Monitor-Log-Analytics-to-create-alerts/</guid>
        
        
        <category>Windows Virtual Desktop</category>
        
        <category>Azure Monitor</category>
        
      </item>
    
      <item>
        <title>WVDAdmin videos on YouTube</title>
        <description>&lt;p&gt;WVDAdmin is my free community solution to manage and work with WVD / Windows Virtual Desktop. Mainly, building images and rolling out session hosts are key-value-adds. But you can also run parallel tasks on VMs and session hosts.&lt;/p&gt;
&lt;p&gt;Learn how to use and some tips &amp;amp; tricks showing my &lt;a href=&quot;https://www.youtube.com/playlist?list=PLOhYYkRGNEImaVBZKBI-24MB-iytsCgsA&quot;&gt;YouTube channel&lt;/a&gt; about WVDAdmin - I’m continuously  adding more videos to the channel.&lt;/p&gt;
&lt;h4 id=&quot;wvdadmin---configuring-wvdadmin&quot;&gt;01: WVDAdmin - Configuring WVDAdmin&lt;/h4&gt;
&lt;iframe width=&quot;1280&quot; height=&quot;720&quot; src=&quot;https://www.youtube.com/embed/z8yWPoEDzZg?list=PLOhYYkRGNEImaVBZKBI-24MB-iytsCgsA&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h4 id=&quot;wvdadmin---building-a-template-image-for-session-hosts&quot;&gt;02: WVDAdmin - Building a template image for session hosts&lt;/h4&gt;
&lt;iframe width=&quot;1280&quot; height=&quot;720&quot; src=&quot;https://www.youtube.com/embed/ehnsUvXYYjc?list=PLOhYYkRGNEImaVBZKBI-24MB-iytsCgsA&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h4 id=&quot;wvdadmin---rollout-multiple-session-hosts&quot;&gt;03: WVDAdmin - Rollout multiple session hosts&lt;/h4&gt;
&lt;iframe width=&quot;1280&quot; height=&quot;720&quot; src=&quot;https://www.youtube.com/embed/od7FA7vQWcs?list=PLOhYYkRGNEImaVBZKBI-24MB-iytsCgsA&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;/iframe&gt;
</description>
        <pubDate>Mon, 11 Jan 2021 00:00:00 +0100</pubDate>
        <link>/WVDAdmin-for-WVD-management-and-roll-out-videos-on-Youtube/</link>
        <guid isPermaLink="true">/WVDAdmin-for-WVD-management-and-roll-out-videos-on-Youtube/</guid>
        
        
        <category>Windows Virtual Desktop</category>
        
      </item>
    
      <item>
        <title>Custom Role for Power On Connect preview</title>
        <description>&lt;p&gt;&lt;a href=&quot;https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fblog.itprocloud.de%2Fassets%2Ffiles%2FAzureDeployments%2FWVD-Role-PowerOnConnect-preview.json&quot;&gt;&lt;img src=&quot;https://aka.ms/deploytoazurebutton&quot; alt=&quot;Deploy to Azure&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 11 Jan 2021 00:00:00 +0100</pubDate>
        <link>/Custom-Role-for-Power-On-Connect-Preview/</link>
        <guid isPermaLink="true">/Custom-Role-for-Power-On-Connect-Preview/</guid>
        
        
        <category>Windows Virtual Desktop</category>
        
      </item>
    
      <item>
        <title>WVD Admin - Custom Scripts to run administrative tasks</title>
        <description>&lt;h1 id=&quot;custom-scripts-with-wvdadmin&quot;&gt;Custom Scripts with WVDAdmin&lt;/h1&gt;
&lt;p&gt;From version 1.6.15,  &lt;a href=&quot;https://blog.itprocloud.de/Windows-Virtual-Desktop-Admin/&quot;&gt;WVDAdmin&lt;/a&gt; supports custom scripts to run administrative tasks simultaneously on different session hosts. And that is easy to use and to extend. Let me show it with the challenge to enable &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/virtual-desktop/shortpath#:~:text=RDP%20Shortpath%20is%20a%20feature,better%20reliability%20and%20consistent%20latency&quot;&gt;RDP Shortpath&lt;/a&gt; on existing session hosts.&lt;/p&gt;
&lt;p&gt;In this &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/virtual-desktop/shortpath#:~:text=RDP%20Shortpath%20is%20a%20feature,better%20reliability%20and%20consistent%20latency&quot;&gt;post&lt;/a&gt;, Microsoft describes how to enable this preview feature for WVD to connect to a WVD session without crossing the internet.&lt;/p&gt;
&lt;p&gt;Start copying the file [C:\Program Files\ITProCloud.de\WVDAdmin\CustomScript.ps1](C:\Program Files\ITProCloud.de\WVDAdmin\CustomScript.ps1) to a new name into the same directory. For example EnableRDPShortPath.ps1&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/WVDAdmin-CustomScripts-ShortPath-01.png&quot; alt=&quot;documentation-001&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Open the file with notepad or  the editor of your choice. Edit the first line to give your script a name (that is visible in the drop-down list in WVDAdmin) and a description. The description is shown in the message box where you have to consent to run on the selected session hosts.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# {&amp;quot;Name&amp;quot;: &amp;quot;Enable RDP Shortpath&amp;quot;,&amp;quot;Description&amp;quot;:&amp;quot;This script enables the preview function for RDP Shortpath on the selected session hosts&amp;quot;}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;After that, you can copy the code between lines 22 and 23 (LogWriter(“Custom script start”) and LogWriter(“Custom script end”)). I re-used the example code from Microsoft:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;LogWriter(&amp;quot;Custom script start&amp;quot;)
$WinstationsKey = 'HKLM:\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations'
New-ItemProperty -Path $WinstationsKey -Name 'fUseUdpPortRedirector' -ErrorAction:SilentlyContinue -PropertyType:dword -Value 1 -Force
New-ItemProperty -Path $WinstationsKey -Name 'UdpPortNumber' -ErrorAction:SilentlyContinue -PropertyType:dword -Value 3390 -Force

New-NetFirewallRule -DisplayName 'Remote Desktop - Shortpath (UDP-In)'  -Action Allow -Description 'Inbound rule for the Remote Desktop service to allow RDP traffic. [UDP 3390]' -Group '@FirewallAPI.dll,-28752' -Name 'RemoteDesktop-UserMode-In-Shortpath-UDP'  -PolicyStore PersistentStore -Profile Domain, Private -Service TermService -Protocol udp -LocalPort 3390 -Program '%SystemRoot%\system32\svchost.exe' -Enabled:True
LogWriter(&amp;quot;Custom script end&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The full script should look like this:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# {&amp;quot;Name&amp;quot;: &amp;quot;Enable RDP Shortpath&amp;quot;,&amp;quot;Description&amp;quot;:&amp;quot;This script enables the preview function for RDP Shortpath on the selected session hosts&amp;quot;}
param(
    [string]$paramLogFileName=&amp;quot;WVD.Custom.log&amp;quot;,
	[string]$paramString=&amp;quot;&amp;quot;
);

# This powershell script is part of WVD Admin - see https://blog.itprocloud.de/Windows-Virtual-Desktop-Admin/ for more information
# Current Version of this script: 1.0 - Custom Script Extension
# Write a return string to WVDAdmin with the example in the last line

# Define logfilen and dir
$LogDir=&amp;quot;$env:windir\system32\logfiles&amp;quot;
$LogFile=&amp;quot;$LogDir\$paramLogFileName&amp;quot;

function LogWriter($message)
{
    $message=&amp;quot;$(Get-Date ([datetime]::UtcNow) -Format &amp;quot;o&amp;quot;) $message&amp;quot;
	write-host($message)
	if ([System.IO.Directory]::Exists($LogDir)) {write-output($message) | Out-File $LogFile -Append}
}

LogWriter(&amp;quot;Custom script start&amp;quot;)
$WinstationsKey = 'HKLM:\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations'
New-ItemProperty -Path $WinstationsKey -Name 'fUseUdpPortRedirector' -ErrorAction:SilentlyContinue -PropertyType:dword -Value 1 -Force
New-ItemProperty -Path $WinstationsKey -Name 'UdpPortNumber' -ErrorAction:SilentlyContinue -PropertyType:dword -Value 3390 -Force

New-NetFirewallRule -DisplayName 'Remote Desktop - Shortpath (UDP-In)'  -Action Allow -Description 'Inbound rule for the Remote Desktop service to allow RDP traffic. [UDP 3390]' -Group '@FirewallAPI.dll,-28752' -Name 'RemoteDesktop-UserMode-In-Shortpath-UDP'  -PolicyStore PersistentStore -Profile Domain, Private -Service TermService -Protocol udp -LocalPort 3390 -Program '%SystemRoot%\system32\svchost.exe' -Enabled:True
LogWriter(&amp;quot;Custom script end&amp;quot;)

Write-host(&amp;quot;ScriptReturnMessage:{RDP Shortpath enabled - reboot the session hosts(s) to take effect}:ScriptReturnMessage&amp;quot;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Alternatively, you can load the script from &lt;a href=&quot;https://blog.itprocloud.de/assets/files/AutoUpdate/Scripts/EnableRDPShortPath.ps1&quot;&gt;here&lt;/a&gt; and copy it into WVDAdmin’s program file folder.&lt;/p&gt;
&lt;p&gt;To load the scripts, restart WVDAdmin. You will see multiple “Information Adding scripts for session host management in the log windows: xxxx.ps1” messages, including your new EnableRDPShortPath.ps.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/WVDAdmin-CustomScripts-ShortPath-02.png&quot; alt=&quot;documentation-001&quot; /&gt;&lt;/p&gt;
&lt;p&gt;To run the script on multiple hosts, go to a host pool, expand the node and click the “Session hosts” container.  Select the hosts, select your script “Enable RDP Shortpath” and click on “Run script”. After clicking OK, the script will be run in the system context on the session hosts. This will take a few minutes.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/WVDAdmin-CustomScripts-ShortPath-03.png&quot; alt=&quot;documentation-001&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/WVDAdmin-CustomScripts-ShortPath-04.png&quot; alt=&quot;documentation-001&quot; /&gt;&lt;/p&gt;
&lt;p&gt;After that - and in this case, after the next reboot - RDP Shortpath should be available for WVD users in directly connected networks.&lt;/p&gt;
</description>
        <pubDate>Wed, 18 Nov 2020 00:00:00 +0100</pubDate>
        <link>/Windows-Virtual-Desktop-Admin-CustomScripts/</link>
        <guid isPermaLink="true">/Windows-Virtual-Desktop-Admin-CustomScripts/</guid>
        
        
        <category>Windows Virtual Desktop</category>
        
      </item>
    
      <item>
        <title>INTERNAL Push Azure AD User properties into Azure Monitor Log Analytics to build Windows Virtual Desktop (WVD) performance data based on these</title>
        <description>&lt;p&gt;Azure Monitor / Log Analytics is my first choice to store log and usage data. Even for Windows Virtual Desktop (WVD), it is crucial to have an eye on the hosts, users, and single applications’ usage and performance.&lt;/p&gt;
&lt;p&gt;I do that using Azure Monitor for WVD (&lt;a href=&quot;https://www.sepago.de/en/azure-monitor-en/&quot;&gt;https://www.sepago.de/en/azure-monitor-en/&lt;/a&gt;) from sepago, which is also included in Nerdio Manager for WVD (&lt;a href=&quot;https://getnerdio.com/nerdio-manager-for-wvd/&quot;&gt;https://getnerdio.com/nerdio-manager-for-wvd/&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;The solution gives you insight into the performance of the apps and hosts and allows you to build a cost calculation on a per-user base. If you want to query and analyze data by other properties - like the department - you have to include these properties from Azure AD into your log analytics workspace.&lt;/p&gt;
&lt;p&gt;I found an easy solution doing that with an Azure logic app. The logic app access the Azure AD tenant and queries the users and some defined properties and send it to log analytics. A challenge was to handle the challenge that you have to query multiple times to get all users from Azure AD (a single query gives you only a specific amount of users -&amp;gt; Paging). I solved this using an “Until-loop” to get all users. The logic app pushed the users and their properties to the defined log analytics workspace. After this, the users and properties can be used in a KUSTO query. For example: To query the over-all session runtime by the department.&lt;/p&gt;
&lt;h2 id=&quot;installation-and-configuration&quot;&gt;Installation and configuration&lt;/h2&gt;
&lt;p&gt;Deploy the prepared logic app into your subscription using the “Deploy to Azure” button.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fblog.itprocloud.de%2Fassets%2Ffiles%2FAzureDeployments%2FLA-AADUsersToLogAnalytics-v2.json&quot;&gt;&lt;img src=&quot;https://aka.ms/deploytoazurebutton&quot; alt=&quot;Deploy to Azure&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To query the Azure AD unattended, you need a service principal (a function account) with the right permission. Create the service principal in the Azure Portal:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Azure Active Directory -&amp;gt; App registrations -&amp;gt; New registration and give it a name (e.g. svc_AzureAdUserReader4AzureMonitor) and press register
&lt;img src=&quot;../assets/images/LogicApp-AAD-AzureMonitor-001.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;li&gt;Go to Certificates and secrets -&amp;gt; Add new client secret and type in a name (e.g. Key1) and expiration date (make a note into your calendar) and press add
&lt;img src=&quot;../assets/images/LogicApp-AAD-AzureMonitor-002.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;li&gt;Copy the generated secret for later use&lt;/li&gt;
&lt;li&gt;Go to Api permissions -&amp;gt; Add a permission -&amp;gt; select Microsoft Graph -&amp;gt; Application permissions -&amp;gt; select User.Read.All -&amp;gt; click Add permissions
&lt;img src=&quot;../assets/images/LogicApp-AAD-AzureMonitor-003.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;li&gt;Click Grant admin consent to allow this setting (you have to be in the right role to do that)
&lt;img src=&quot;../assets/images/LogicApp-AAD-AzureMonitor-004.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;li&gt;Go to overview and copy the application id and directory id for later use&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To upload the data to your Azure Monitor / log analytics workspace, you need the workspace id and key.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Go to your log analytics workspace -&amp;gt; select Advanced settings -&amp;gt; Agents management -&amp;gt; copy the workspace id and primary key for later use
&lt;img src=&quot;../assets/images/LogicApp-AAD-AzureMonitor-005.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Go to your deployed logic app and click edit.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Expand “Until 2”&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on http. Enter the data from your service principal into the fields Tenant (Directory id), client id, and secret
&lt;img src=&quot;../assets/images/LogicApp-AAD-AzureMonitor-006.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on Connections and add a new one (Add new)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;Give a name (e.g. ToLogAnalytics), the primary key and workspace id from log analytics and press create
&lt;img src=&quot;../assets/images/LogicApp-AAD-AzureMonitor-007.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Save the logic app and press run to test it.&lt;/p&gt;
&lt;p&gt;If everything looks good, our logic app will write the user data to log analytics once a day.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../assets/images/LogicApp-AAD-AzureMonitor-008.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;You can query the data from log analytics with “ITPC_CTX_ADUsers_CL”. Keep in mind that it takes a while (30 minutes) to build the first upload schema.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../assets/images/LogicApp-AAD-AzureMonitor-009.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Hint:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You can modify the filter and the properties you get back, modifying the query URL. The URL can be modified in “Initialize variable” in the logic app.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../assets/images/LogicApp-AAD-AzureMonitor-010.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;The default is:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;https://graph.microsoft.com/v1.0/users?$filter=accountEnabled eq true  and userType eq 'Member'&amp;amp;$select=userPrincipalName,onPremisesSamAccountName,employeeId,officeLocation,department
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A list of valid properties is here: &lt;a href=&quot;https://docs.microsoft.com/de-de/graph/api/resources/user?view=graph-rest-1.0&quot;&gt;https://docs.microsoft.com/de-de/graph/api/resources/user?view=graph-rest-1.0&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 13 Oct 2020 00:00:00 +0200</pubDate>
        <link>/Push-Azure-AD-User-data-into-Azure-Monitor-Log-Analytics-to-query-WVD-data-INTERNAL/</link>
        <guid isPermaLink="true">/Push-Azure-AD-User-data-into-Azure-Monitor-Log-Analytics-to-query-WVD-data-INTERNAL/</guid>
        
        
      </item>
    
      <item>
        <title>Push Azure AD User properties into Azure Monitor Log Analytics to build Windows Virtual Desktop (WVD) performance data based on these</title>
        <description>&lt;p&gt;Azure Monitor / Log Analytics is my first choice to store log and usage data. Even for Windows Virtual Desktop (WVD), it is crucial to have an eye on the hosts, users, and single applications’ usage and performance.&lt;/p&gt;
&lt;p&gt;I do that using Azure Monitor for WVD (&lt;a href=&quot;https://www.sepago.de/en/azure-monitor-en/&quot;&gt;https://www.sepago.de/en/azure-monitor-en/&lt;/a&gt;) from sepago, which is also included in Nerdio Manager for WVD (&lt;a href=&quot;https://getnerdio.com/nerdio-manager-for-wvd/&quot;&gt;https://getnerdio.com/nerdio-manager-for-wvd/&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;The solution gives you insight into the performance of the apps and hosts and allows you to build a cost calculation on a per-user base. If you want to query and analyze data by other properties - like the department - you have to include these properties from Azure AD into your log analytics workspace.&lt;/p&gt;
&lt;p&gt;I found an easy solution doing that with an Azure logic app. The logic app access the Azure AD tenant and queries the users and some defined properties and send it to log analytics. A challenge was to handle the challenge that you have to query multiple times to get all users from Azure AD (a single query gives you only a specific amount of users -&amp;gt; Paging). I solved this using an “Until-loop” to get all users. The logic app pushed the users and their properties to the defined log analytics workspace. After this, the users and properties can be used in a KUSTO query. For example: To query the over-all session runtime by the department.&lt;/p&gt;
&lt;h2 id=&quot;installation-and-configuration&quot;&gt;Installation and configuration&lt;/h2&gt;
&lt;p&gt;Deploy the prepared logic app into your subscription using the “Deploy to Azure” button.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fblog.itprocloud.de%2Fassets%2Ffiles%2FAzureDeployments%2FLA-AADUsersToLogAnalytics.json&quot;&gt;&lt;img src=&quot;https://aka.ms/deploytoazurebutton&quot; alt=&quot;Deploy to Azure&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To query the Azure AD unattended, you need a service principal (a function account) with the right permission. Create the service principal in the Azure Portal:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Azure Active Directory -&amp;gt; App registrations -&amp;gt; New registration and give it a name (e.g. svc_AzureAdUserReader4AzureMonitor) and press register
&lt;img src=&quot;../assets/images/LogicApp-AAD-AzureMonitor-001.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;li&gt;Go to Certificates and secrets -&amp;gt; Add new client secret and type in a name (e.g. Key1) and expiration date (make a note into your calendar) and press add
&lt;img src=&quot;../assets/images/LogicApp-AAD-AzureMonitor-002.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;li&gt;Copy the generated secret for later use&lt;/li&gt;
&lt;li&gt;Go to Api permissions -&amp;gt; Add a permission -&amp;gt; select Microsoft Graph -&amp;gt; Application permissions -&amp;gt; select User.Read.All -&amp;gt; click Add permissions
&lt;img src=&quot;../assets/images/LogicApp-AAD-AzureMonitor-003.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;li&gt;Click Grant admin consent to allow this setting (you have to be in the right role to do that)
&lt;img src=&quot;../assets/images/LogicApp-AAD-AzureMonitor-004.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;li&gt;Go to overview and copy the application id and directory id for later use&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To upload the data to your Azure Monitor / log analytics workspace, you need the workspace id and key.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Go to your log analytics workspace -&amp;gt; select Advanced settings -&amp;gt; Agents management -&amp;gt; copy the workspace id and primary key for later use
&lt;img src=&quot;../assets/images/LogicApp-AAD-AzureMonitor-005.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Go to your deployed logic app and click edit.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Expand “Until 2”&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on http. Enter the data from your service principal into the fields Tenant (Directory id), client id, and secret
&lt;img src=&quot;../assets/images/LogicApp-AAD-AzureMonitor-006.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Click on Connections and add a new one (Add new)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;ul&gt;
&lt;li&gt;Give a name (e.g. ToLogAnalytics), the primary key and workspace id from log analytics and press create
&lt;img src=&quot;../assets/images/LogicApp-AAD-AzureMonitor-007.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Save the logic app and press run to test it.&lt;/p&gt;
&lt;p&gt;If everything looks good, our logic app will write the user data to log analytics once a day.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../assets/images/LogicApp-AAD-AzureMonitor-008.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;You can query the data from log analytics with “ITPC_CTX_ADUsers_CL”. Keep in mind that it takes a while (30 minutes) to build the first upload schema.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../assets/images/LogicApp-AAD-AzureMonitor-009.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Hint:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You can modify the filter and the properties you get back, modifying the query URL. The URL can be modified in “Initialize variable” in the logic app.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;../assets/images/LogicApp-AAD-AzureMonitor-010.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
&lt;p&gt;The default is:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;https://graph.microsoft.com/v1.0/users?$filter=accountEnabled eq true  and userType eq 'Member'&amp;amp;$select=userPrincipalName,onPremisesSamAccountName,employeeId,officeLocation,department
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A list of valid properties is here: &lt;a href=&quot;https://docs.microsoft.com/de-de/graph/api/resources/user?view=graph-rest-1.0&quot;&gt;https://docs.microsoft.com/de-de/graph/api/resources/user?view=graph-rest-1.0&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 01 Oct 2020 00:00:00 +0200</pubDate>
        <link>/Push-Azure-AD-User-data-into-Azure-Monitor-Log-Analytics-to-query-WVD-data/</link>
        <guid isPermaLink="true">/Push-Azure-AD-User-data-into-Azure-Monitor-Log-Analytics-to-query-WVD-data/</guid>
        
        
        <category>Windows Virtual Desktop</category>
        
        <category>Azure Monitor</category>
        
      </item>
    
      <item>
        <title>Least privileges with custom roles for Windows Virtual Desktop (WVD)</title>
        <description>&lt;p&gt;Administration, deployment, user support of Windows Virtual Desktop (WVD) needs permission in Azure. But these permissions are depending on the task a group of users/administrators have to do. For example, if the help desk has to log off and send messages to users, they need fewer permissions than the administrator building session hosts.&lt;/p&gt;
&lt;p&gt;In the first step, the permission for the different groups can be given using the build-in roles in Azure and assigning them to the groups and specific resources. But this doesn’t allow us to assign granular permissions to fulfill the least privileges approach. To do that, we have to go with custom roles. Custom roles allow combining specific permission for different resource types to a new role. Luckily, Windows Virtual Desktop has many additional permissions per resource type (host pool, app group, workspace, etc.).&lt;/p&gt;
&lt;p&gt;I combined the permission from WVD and from other resource types (like Microsoft Compute) to build eight roles I often use in projects to assign the least permission as needed for the different administrator. These roles can be used to assign them to users, groups, and even service principals (important for &lt;a href=&quot;https://blog.itprocloud.de/Windows-Virtual-Desktop-Admin/&quot;&gt;WVDAdmin&lt;/a&gt;). In my opinion, the best way is to assign these roles on a resource group level and not to a subscription level.&lt;/p&gt;
&lt;p&gt;Before I describe the different new roles, I have to mention one “Specialty”: Assigning users to an app group in Windows Virtual Desktop needs that you have “Owner Permission” (or more precisely: &lt;em&gt;Microsoft.Authorization/roleAssignments/write&lt;/em&gt;) to the app group. While Azure doesn’t have the ability to assign owner permission in a role to a specific resource type, I didn’t add this permission to the roles. So, you can easily use the new roles on a resource group level, and you can be sure that the user only has the least permission, but you have to assign appropriate admins as an owner to (only) the app groups. Owner permission on resource groups causes that the user can do and rollout anything in these groups.&lt;/p&gt;
&lt;p&gt;Note: In a real-world scenario where the least privileges approach for a specific group of admins is not necessary, owner permissions are given to the resource groups containing the WVD resources (especially the app groups).&lt;/p&gt;
&lt;h2 id=&quot;my-common-wvd-roles&quot;&gt;My common WVD roles:&lt;/h2&gt;
&lt;h3 id=&quot;wvd---user-session-reader&quot;&gt;WVD - User Session Reader&lt;/h3&gt;
&lt;p&gt;Allows to read the user session and host pool properties of Windows Virtual Desktop.&lt;/p&gt;
&lt;h3 id=&quot;wvd---user-session-contributor&quot;&gt;WVD - User Session Contributor&lt;/h3&gt;
&lt;p&gt;Allows to work with the user session and read host pool properties of Windows Virtual Desktop host pools, including to send messages to users and logoff/disconnect user sessions&lt;/p&gt;
&lt;h3 id=&quot;wvd---infrastructure-reader&quot;&gt;WVD - Infrastructure Reader&lt;/h3&gt;
&lt;p&gt;Allows to read all properties of a WVD infrastructure: Host pools, session hosts, workspaces, app groups, and user sessions.&lt;/p&gt;
&lt;h3 id=&quot;wvd---infrastructure-contributor&quot;&gt;WVD - Infrastructure Contributor&lt;/h3&gt;
&lt;p&gt;Allows to read and write all properties of a WVD infrastructure but doesn’t allow to delete resources: Host pools, session hosts, workspaces, app groups, and user sessions.&lt;/p&gt;
&lt;h3 id=&quot;wvd---infrastructure-administrator&quot;&gt;WVD - Infrastructure Administrator&lt;/h3&gt;
&lt;p&gt;Allows to read and write all properties of a WVD infrastructure and allows to delete resources: Host pools, session hosts, workspaces, app groups, and user sessions.&lt;/p&gt;
&lt;h3 id=&quot;wvd---infrastructure-administrator-amp-vm-manager&quot;&gt;WVD - Infrastructure Administrator &amp;amp; VM Manager&lt;/h3&gt;
&lt;p&gt;Allows to read and write all properties of a WVD infrastructure and allows to delete resources: Host pools, session hosts, workspaces, app groups, and user sessions. Additionally, the power state of all hosts and VMs can be changed.&lt;/p&gt;
&lt;h3 id=&quot;wvd---template-and-session-host-administrator&quot;&gt;WVD - Template and Session Host Administrator&lt;/h3&gt;
&lt;p&gt;Allows to create/modify/delete Virtual Machines, images, rollout new session hosts into host pools, and attach them to a vnet.&lt;/p&gt;
&lt;h3 id=&quot;wvd---full-administrator&quot;&gt;WVD - Full Administrator&lt;/h3&gt;
&lt;p&gt;Allows to create/modify/delete Virtual Machines, images, rollout new session hosts into host pools, attach them to a vnet, and all permissions from the role ‘WVD - Infrastructure Administrator &amp;amp; VM Manager’.&lt;/p&gt;
&lt;p&gt;I’m happy about feedback and give me a ping if you want to have the ‘&lt;em&gt;Microsoft.Authorization/roleAssignments/write&lt;/em&gt;’ inside the contributor roles (but that doesn’t prevent users from getting higher permissions on the resource group).&lt;/p&gt;
&lt;p&gt;Feel free to roll out these WVD roles into your own subscription (ignore the location, the roles are available in the subscription independent from the location - or take a look into the deployment &lt;a href=&quot;https://blog.itprocloud.de/assets/files/AzureDeployments/WVD-Custom-Roles-01.json&quot;&gt;script&lt;/a&gt;):&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fblog.itprocloud.de%2Fassets%2Ffiles%2FAzureDeployments%2FWVD-Custom-Roles-01.json&quot;&gt;&lt;img src=&quot;https://aka.ms/deploytoazurebutton&quot; alt=&quot;Deploy to Azure&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 10 Sep 2020 00:00:00 +0200</pubDate>
        <link>/Least-privileges-with-custom-roles-for-Windows-Virtual-Desktop-(WVD)/</link>
        <guid isPermaLink="true">/Least-privileges-with-custom-roles-for-Windows-Virtual-Desktop-(WVD)/</guid>
        
        
        <category>Windows Virtual Desktop</category>
        
      </item>
    
      <item>
        <title>Shadow a WVD user with least privileges</title>
        <description>&lt;p&gt;WVD allows local administrators to shadow user sessions. You can do this  easily with &lt;a href=&quot;https://blog.itprocloud.de/Windows-Virtual-Desktop-Admin/&quot;&gt;WVDAdmin&lt;/a&gt; or using the command-line like this:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;&gt;mstsc /v:WVD-DESIGN-404 /control /shadow:2 /prompt
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;In most companies, a help desk agent supports users using applications. For that, local admin privileges are not necessary and not recommended. To allow help desk agents shadowing users in WVD, you have to give these users (or better: a user group) only the needed permission. To do this, execute the following command in an administrative cmd:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wmic /namespace:\\root\CIMV2\TerminalServices PATH Win32_TSPermissionsSetting WHERE (TerminalName like 'RDP-sxs%') CALL AddAccount 'ITPROCLOUD\ADM_WVD-Shadowing',2
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This gives the users of the group &lt;strong&gt;ITPROCLOUD\ADM_WVD-Shadowing&lt;/strong&gt; the needed permission directly on the RDP-SXS stack (you need to reboot the session host).
I would run this command on the template VM / golden Image to have this permission configured for each session host. Alternatively, you can run this in a computer-logon script for existing session hosts.&lt;/p&gt;
&lt;p&gt;Hint: You can reset this setting with:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wmic /namespace:\\root\CIMV2\TerminalServices PATH Win32_TSPermissionsSetting WHERE (TerminalName like 'RDP-sxs%') CALL RestoreDefaults
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Take a look how shadowing a user session with &lt;a href=&quot;https://blog.itprocloud.de/Windows-Virtual-Desktop-Admin/&quot;&gt;WVDAdmin&lt;/a&gt; looks like: &lt;a href=&quot;https://twitter.com/i/status/1229472041423732736&quot;&gt;https://twitter.com/i/status/1229472041423732736&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 24 Aug 2020 00:00:00 +0200</pubDate>
        <link>/Shadow-a-WVD-user-with-least-privileges/</link>
        <guid isPermaLink="true">/Shadow-a-WVD-user-with-least-privileges/</guid>
        
        
        <category>Windows Virtual Desktop</category>
        
      </item>
    
      <item>
        <title>What's wrong with Windows 10 and UWP and Sysprep?</title>
        <description>&lt;p&gt;I’m working in the WVD area and often create golden images to deploy session hosts for WVD - mainly based on Windows 10 Enterprise multi-session.
To do that, I create a template VM in Azure based on Windows 10, joined it to the domain, install updates and applications, and create an image based on that VM. To make my life easier, I use WVDAdmin to generate the template and rolling it out later - but this is independent of the issue with Sysprep.
One step of creating an image is to Sysprep the template image. I - or WVDAdmin is doing that - by running:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sysprep.exe /generalize /oobe /shutdown /mode:vm
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Sometimes I run into an issue, and Sysprep stops work with an error message:
&lt;img src=&quot;../assets/images/Sysprep-01.png&quot; alt=&quot;Sysprep&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Digging into the log file show the issue:
&lt;img src=&quot;../assets/images/Sysprep-02.png&quot; alt=&quot;Sysprep&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Error: Package XXXXXXX was installed for a user, but not provisioned for all users.&lt;/p&gt;
&lt;p&gt;The package various. Sometimes I got a part of a language pack or other internal app packages. To run into the problem with certainty, install an app from the Windows Store.&lt;/p&gt;
&lt;p&gt;Let’s find out what happens, for doing that I installed different applications from the Windows Store into the VM and tried to Sysprep the VM. The first package blocking Sysprep was in this test “5319275A.WhatsAppDesktop_2.2027.10.0_x64__cv1g1gvanyjgm”&lt;/p&gt;
&lt;p&gt;To get details of the package run the following PowerShell script with administrative privileges:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Get-AppxPackage -AllUsers | ? {$_.packagefullname.contains('5319275A.WhatsAppDesktop_2.2027.10.0_x64__cv1g1gvanyjgm')}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The returned object shows that this package is only installed for the local administrator (installing the apps from the Windows Store). The user querying this data (mm-admin) doesn’t have this package installed.
&lt;img src=&quot;../assets/images/Sysprep-03.png&quot; alt=&quot;Sysprep&quot; /&gt;&lt;/p&gt;
&lt;p&gt;Okay. Appx packages from the store are personnel and not shared with all users on a VM (to install appx packages for all users, you have to sideload the packages with DISM.exe). So I tried to remove this app from all users:_&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Get-AppxPackage -AllUsers | ? {$_.packagefullname.contains('5319275A.WhatsAppDesktop_2.2027.10.0_x64__cv1g1gvanyjgm')} | Remove-AppxPackage -AllUsers
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Ok. Sysprep again. The next issue occurs: Sysprep has the same problem with NetFlix - installed only for one user of the VM. Instead of removing the packages by trial and error, I found another way: Teach Sysprep to ignore this behavior. I guess it’s not a problem having an appx package assigned to only one user - even if it and administrative user.&lt;/p&gt;
&lt;p&gt;I figured out that Sysprep uses an XML file with a set of rules preparing a VM. The rule-set for generalizing an image is stored in &lt;code&gt;&amp;quot;C:\windows\System32\sysprep\ActionFiles\Generalize.xml&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;To ignore the installed or update AppX package remove the following lines and save Generalize.xml (you have to take ownership of the file and give yourself permission to do that):&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;sysprepOrder order=&amp;quot;0x1A00&amp;quot;&amp;gt;&amp;lt;/sysprepOrder&amp;gt;
&amp;lt;sysprepValidate methodName=&amp;quot;SysprepGeneralizeValidate&amp;quot; moduleName=&amp;quot;$(runtime.system32)\AppxSysprep.dll&amp;quot;&amp;gt;&amp;lt;/sysprepValidate&amp;gt;
&amp;lt;sysprepModule methodName=&amp;quot;SysprepGeneralize&amp;quot; moduleName=&amp;quot;$(runtime.system32)\AppxSysprep.dll&amp;quot;&amp;gt;&amp;lt;/sysprepModule&amp;gt;&amp;lt;/imaging&amp;gt;&amp;lt;imaging exclude=&amp;quot;&amp;quot;&amp;gt;&amp;lt;assemblyIdentity name=&amp;quot;Microsoft-Windows-SecureBoot-FirmwareUpdate&amp;quot; version=&amp;quot;10.0.19041.1&amp;quot; publicKeyToken=&amp;quot;31bf3856ad364e35&amp;quot; processorArchitecture=&amp;quot;amd64&amp;quot; versionScope=&amp;quot;NonSxS&amp;quot;&amp;gt;&amp;lt;/assemblyIdentity&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&quot;../assets/images/Sysprep-04.png&quot; alt=&quot;Sysprep&quot; /&gt;&lt;/p&gt;
&lt;p&gt;After that Sysprep runs without an issue. Rolling out a session host based on the new image works, and even the user could logon without a problem (and yes: they don’t have the Store apps from the local admin - as expected).&lt;/p&gt;
&lt;p&gt;Maybe there are some smarter ways to handle UWP and Sysprep (if you know one - let me know it, too). But this solves an issue creating or updating an image for WVD based on a template VM (golden image approach).&lt;/p&gt;
</description>
        <pubDate>Tue, 28 Jul 2020 00:00:00 +0200</pubDate>
        <link>/Sysprep-and-WVD-and-UWP/</link>
        <guid isPermaLink="true">/Sysprep-and-WVD-and-UWP/</guid>
        
        
        <category>Windows Virtual Desktop</category>
        
      </item>
    
  </channel>
</rss>
