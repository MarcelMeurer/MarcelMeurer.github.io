<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ITProCloud Blog</title>
    <description>This is my personal website, which I maintain to support the cloud community. ITProCloud.de is the label I use for tests and demonstrations. ITProCloud.de is not a company in the business sense.</description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 28 Nov 2019 13:08:53 +0100</pubDate>
    <lastBuildDate>Thu, 28 Nov 2019 13:08:53 +0100</lastBuildDate>
    <generator>Jekyll v4.0.0</generator>
    
      <item>
        <title>WVD Admin - A native administration Gui for Windows Virtual Desktop</title>
        <description>&lt;h1 id=&quot;windows-virtual-desktop-administration&quot;&gt;Windows Virtual Desktop administration&lt;/h1&gt;

&lt;p&gt;Windows Virtual Desktop is generally available and under continuous improvement. There was the time before Ignite 2019 where no administration GUI was publicly available. This changed with Ignite. The PG of Remote Desktop services releases an in-portal configuration for Windows Virtual Desktop which looks very nice and has a lot of configurable options. See &lt;a href=&quot;https://twitter.com/RDS4U/status/1189773044094361601&quot;&gt;https://twitter.com/RDS4U/status/1189773044094361601&lt;/a&gt; for a preview or check it out in the Azure portal.&lt;/p&gt;

&lt;p&gt;Sometimes it helps to have a native GUI to make some configuration. Therefore I build a tool to do this and last night I finished the project (in the current version) and provide it as a community tool for WVD.&lt;/p&gt;

&lt;p&gt;The current version supports a lot of configuration and administration capabilities. You can:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Add, edit and delete host pools&lt;/li&gt;
  &lt;li&gt;Add, edit and delete application groups&lt;/li&gt;
  &lt;li&gt;Add, edit and delete application and desktop (you can add a new app with the Windows file-open-dialog)&lt;/li&gt;
  &lt;li&gt;Add a list of users to applications or a desktop (separated by ;)&lt;/li&gt;
  &lt;li&gt;Send messages to a single user and users on a specific session host&lt;/li&gt;
  &lt;li&gt;Logoff single users or all users of a specific session host&lt;/li&gt;
  &lt;li&gt;Start and deallocate session hosts (the Azure VM behind)&lt;/li&gt;
  &lt;li&gt;Delete session hosts and the VMsin Azure including disk and nic&lt;/li&gt;
  &lt;li&gt;Create an image of a template VM without destroying the template&lt;/li&gt;
  &lt;li&gt;Rollout a number of new session hosts based on a template image - including domain join and WVD installation and registration (comparable to Citrix MCS)&lt;/li&gt;
  &lt;li&gt;and some more things&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;demo-video&quot;&gt;Demo video&lt;/h1&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/g9T0mO1gH9Y&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;h1 id=&quot;installation&quot;&gt;Installation&lt;/h1&gt;

&lt;p&gt;Download  &lt;a href=&quot;../assets/files/WVDAdmin.zip&quot;&gt;WVDAdmin.zip&lt;/a&gt; or  &lt;a href=&quot;../assets/files/WVDAdmin.msi&quot;&gt;WVDAdmin.msi&lt;/a&gt; (msi is preferred) extract the zip file and install the application on your Windows client or on a template VM for your WVD.&lt;/p&gt;

&lt;h2 id=&quot;versions&quot;&gt;Versions&lt;/h2&gt;

&lt;p&gt;1.0.0.22		First published version - without auto-update of WVD Admin&lt;/p&gt;

&lt;p&gt;1.0.0.23		Support for ephemeral  disks&lt;/p&gt;

&lt;p&gt;1.0.0.25		Fix: If you delete a VM the OS disk will deleted as well&lt;/p&gt;

&lt;p&gt;1.0.0.26		Add: Template VM can now be a VM with a standard disk (non-managed)&lt;/p&gt;

&lt;p&gt;1.0.0.29		Add: Supporting “special license mode” to save up to 50% on compute-cost (&lt;a href=&quot;https://docs.microsoft.com/en-us/azure/virtual-desktop/apply-windows-license&quot;&gt;https://docs.microsoft.com/en-us/azure/virtual-desktop/apply-windows-license&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;1.0.0.30		Fix: Rollout - OU can now be empty to join the default OU&lt;/p&gt;

&lt;h3 id=&quot;support-for-ephemeral--disks&quot;&gt;Support for ephemeral  disks&lt;/h3&gt;

&lt;p&gt;You can now rollout your session hosts with  ephemeral  disks. Ephemeral  disks are running on the Azure hypervisor and not stored in the fabric. This has some advantages:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;There are no storage costs (!)&lt;/li&gt;
  &lt;li&gt;A very high data throughput because the disks exist on the hypervisor&lt;/li&gt;
  &lt;li&gt;See &lt;a href=&quot;https://twitter.com/michawets&quot;&gt;@MichaWets&lt;/a&gt;   blog post for more information:  &lt;a href=&quot;https://www.cloud-architect.be/2019/07/15/windows-virtual-desktop-running-on-ephemeral-os-disks/&quot;&gt;https://www.cloud-architect.be/2019/07/15/windows-virtual-desktop-running-on-ephemeral-os-disks/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Please note:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;You can not deallocate a VM with this disk type (because the disk cannot be stored) - you have to delete the VM (and to rollout a new one instead of starting a “normal” VM)&lt;/li&gt;
  &lt;li&gt;Not each VM size can be used and there are limitations of the disk size (image size for rollout) based on the VM size: Example: Max  ephemeral  disk size for  Standard_D4s_v3  is 64 GByte while a  Standard_D8s_v3 can have up to 128 GByte. See &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/virtual-machines/linux/sizes-general&quot;&gt;https://docs.microsoft.com/en-us/azure/virtual-machines/linux/sizes-general&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;If the Azure hypervisor fails your session host will fail as well and can not be re-deployed automatically&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-014.png&quot; alt=&quot;documentation-001&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;configuration&quot;&gt;Configuration&lt;/h2&gt;

&lt;h2 id=&quot;service-principal-functional-account&quot;&gt;Service principal (functional account)&lt;/h2&gt;

&lt;p&gt;To work with the GUI you need a service principal (function account) with the permission to administrate your WVD tenant or tenants. I decide to use a service principal at this time to avoid confusion if my Azure Ad user is only a guest account in the WVD tenant I have to administrate.&lt;/p&gt;

&lt;p&gt;To create a service principal go to your Azure Ad -&amp;gt; App registration -&amp;gt; New registration and type a name for your principal like “ svc_WVDAdmin” and press “register”.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-001.png&quot; alt=&quot;documentation-001&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Click on “certificates &amp;amp; secrets”. Click “new client secret”, select a validity period and a description (like “Key01”). Press “add”.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-002.png&quot; alt=&quot;documentation-002&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Copy the generated key directly - it will never be displayed again. Note the key for later.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-003.png&quot; alt=&quot;documentation-003&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Go to “Overview”. Note the “Application (client) ID” and the “Directory (tenant) ID” as well.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-004.png&quot; alt=&quot;documentation-004&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You now have all data for your service principal:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Tenant id&lt;/li&gt;
  &lt;li&gt;Service principal id (application id)&lt;/li&gt;
  &lt;li&gt;Service principal key&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;wdv-permissions&quot;&gt;WDV permissions&lt;/h2&gt;

&lt;p&gt;To  use WVDAdmin you need at least an existing WVD tenant. If you new to WVD follow this article to create a WVD tenant:  &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/virtual-desktop/tenant-setup-azure-active-directory&quot;&gt;https://docs.microsoft.com/en-us/azure/virtual-desktop/tenant-setup-azure-active-directory&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You have to use PowerShell to give the WVD the appropriated permission:&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nf&quot;&gt;Import-Module&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Microsoft.RDInfra.RDPowerShell&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# log on with an administrative user account to your &lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Add-RdsAccount&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-DeploymentUrl&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://rdbroker.wvd.microsoft.com&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# give your service principal the right permission&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;New-RdsRoleAssignment&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-TenantName&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Builder City&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-RoleDefinitionName&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;RDS Owner&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-ApplicationId&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;89050a12-xxxx-xxxx-xxxx-000000000000&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-005.png&quot; alt=&quot;documentation-005&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;azure-resource-permissions&quot;&gt;Azure resource permissions&lt;/h2&gt;

&lt;p&gt;To image template VMs and to rollout new session hosts the service principal needs permission to the resource groups containing your session hosts (or are the target for these).&lt;/p&gt;

&lt;p&gt;Open the Azure portal and go to the resource groups. Go into each resource group, click “Access control (IAM)” -&amp;gt; select “Add” -&amp;gt; Add role assignment. Select “contributor” and search in “select” for your service principal name. Click the principal and save the settings.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-006.png&quot; alt=&quot;documentation-006&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Do the same for the other resource groups. It’s a good way to have several resource groups:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;For each tenant or host pool&lt;/li&gt;
  &lt;li&gt;For template VMs&lt;/li&gt;
  &lt;li&gt;For the created images&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The service principal must have permissions to your virtual network (vnet) to assign new VMs to the right subnet. Go to your vnet, click “Access control (IAM)” -&amp;gt; select “Add” -&amp;gt; Add role assignment. Select “contributor” and search in “select” for your service principal name. Click the principal and save the settings.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-007.png&quot; alt=&quot;documentation-007&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;prepare-your-normal-active-directory&quot;&gt;Prepare your “normal” Active Directory&lt;/h2&gt;

&lt;p&gt;Today each session host must be part of a “legacy” active directory domain (or have to use the domain services). To add new session hosts unattended we need two more things:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;An administrative user account with the permission to add a computer object to the active directory domain&lt;/li&gt;
  &lt;li&gt;A file share with a configuration script and the WVD agent software&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Create an administrative account to join computer objects to the domain&lt;/p&gt;

&lt;p&gt;Open “Active Directory Users and Computers” and create a user object with a complex password and set a password to “never expire” (if you fine with this). I added the user srv_WVD-Join@itprocloud.de.&lt;/p&gt;

&lt;p&gt;Open the menu “View” and select “Advanced Features”. Create or go to the OU where do you want to have your WVD session hosts in. Right-click the OU, select security and add your account with read/write/… permission.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-008.png&quot; alt=&quot;documentation-008&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Please note the OU canonical name. In my case: “OU=WVD,OU=Azure,OU=Site,OU=Servers,OU=Sys,OU=Organisation,DC=ITProCloud,DC=test”&lt;/p&gt;

&lt;h2 id=&quot;create-a-file-share&quot;&gt;Create a file share&lt;/h2&gt;

&lt;p&gt;Create a file share for the configuration script (which adds new session hosts to the domain and install the WVD agent). Give everyone at least read permissions. Set the NTFS permissions to everyone and read. This is necessary while during the first startup the VM extension tries to execute the script. In this process, the file share is accessed anonymously.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-009.png&quot; alt=&quot;documentation-009&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-010.png&quot; alt=&quot;documentation-010&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Place the following files in this share:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://blog.itprocloud.de/assets/files/AutoUpdate/Scripts/ITPC-WVD-Image-Processing.ps1.txt&quot;&gt;ITPC-WVD-Image-Processing.ps1&lt;/a&gt; (rename the download to .ps1)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RWrmXv&quot;&gt;Microsoft.RDInfra.RDAgent.msi&lt;/a&gt; (rename the file)&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://query.prod.cms.rt.microsoft.com/cms/api/am/binary/RWrxrH&quot;&gt;Microsoft.RDInfra.RDAgentBootLoader.msi&lt;/a&gt; (rename the file)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Make sure that you rename the files to fit the list above (without version numbers).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-011.png&quot; alt=&quot;documentation-011&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;configure-wvdadmin&quot;&gt;Configure WVDAdmin&lt;/h1&gt;

&lt;p&gt;Please start WVDAdmin. Before you load WVD and Azure data copy the Azure tenant id, service principal id and service principal key into the welcome tab. Press save and load the data by clicking “Reload all”.&lt;/p&gt;

&lt;p&gt;You are now able to administrate WVD, create images from template VMs and rollout new session hosts.&lt;/p&gt;

&lt;p&gt;The first time you want to rollout new session hosts you have to enter some information from your Active Directory and file share configuration from above:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-012.png&quot; alt=&quot;documentation-012&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Local Admin and local pw. are the local administrator account credentials which you can enter at this time.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/WVDAdmin/documentation-013.png&quot; alt=&quot;documentation-013&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Feel free to use it and download the 64-bit Windows application “WVD Admin” from here: &lt;a href=&quot;../assets/files/WVDAdmin.zip&quot;&gt;WVDAdmin.zip&lt;/a&gt; or  &lt;a href=&quot;../assets/files/WVDAdmin.msi&quot;&gt;WVDAdmin.msi&lt;/a&gt; (msi is preferred)&lt;/p&gt;

</description>
        <pubDate>Sat, 02 Nov 2019 00:00:00 +0100</pubDate>
        <link>/Windows-Virtual-Desktop-Admin/</link>
        <guid isPermaLink="true">/Windows-Virtual-Desktop-Admin/</guid>
        
        
        <category>Windows Virtual Desktop</category>
        
      </item>
    
      <item>
        <title>PolarConf 2019 - Building own solutions whit Azure Monitor </title>
        <description>&lt;p&gt;In October I visited Finland the very first time to speak at PolarConf and I have to say: It was amazing. A great single track event over two days. It was the first conference where I had a speak with only one track. And I have to say: It’s a really good concept. No half-full tracks and missing the feeling you miss a parallel track (or simple: you have not to decide between two or more tracks).&lt;/p&gt;

&lt;p&gt;What to say about Finland: It an amazing country in the north of Europe with some touch from the Swedish and Russian cultures. It looks very clear, focused and with a sustainable mindset on the subject of environmental protection. And finally: I love the sauna culture.&lt;/p&gt;

&lt;p&gt;But back to the conference: I had the chance to talk about building own solutions with Azure Monitor. Finalize the session I put the presentation I held here:  &lt;a href=&quot;../assets/files/PolarConf 2019 - Build your own Azure Monitor solution.pdf&quot;&gt;PolarConf 2019 - Build your own Azure Monitor solution.pdf&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Site information: One part of my presentation was to show the Tweet count with #PolarConf with Azure Monitor. Thanks to @techmike2kx&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../assets/images/PolarConf Tweets.png&quot; alt=&quot;PolarConf Tweets&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://polarconf.fi/&quot;&gt;https://polarconf.fi/&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 16 Oct 2019 00:00:00 +0200</pubDate>
        <link>/PolarConf-2019/</link>
        <guid isPermaLink="true">/PolarConf-2019/</guid>
        
        
        <category>Azure Monitor</category>
        
        <category>Log Analytics</category>
        
      </item>
    
      <item>
        <title>Announcing the community version of &quot;Project MySmartScale&quot;</title>
        <description>&lt;p&gt;Windows Virtual Desktop is released and gateways around the world are available - even in Europe which cause in a low latency - perfect.&lt;/p&gt;

&lt;p&gt;Windows Virtual Desktop supplement the current solutions on the virtualization market like Citrix Application Virtualization and VMware Horizon. It’s focused on running as-a-service in the Azure cloud and it’s very cost-efficient compared to the other vendors. Of course: The tools and the administrative capabilities for WVD differ from the others - till now.&lt;/p&gt;

&lt;p&gt;But there is still a niche that is not yet filled - until today. The VMs are running permanently even if no users using the environment which leads to avoidable costs. But there is a solution:&lt;/p&gt;

&lt;h2 id=&quot;announcement-of-the-community-version-of-project-mysmartscale&quot;&gt;Announcement of the community version of Project MySmartScale&lt;/h2&gt;

&lt;p&gt;“Project MySmartScale” starts and smartly deallocates session hosts for WVD. It learns about the user’s behavior and can actively logoff unused sessions at the right time to save compute power – and money. The solution is 100% based on Azure platform services and fits into the whole “as-a-service” story. But starting and stopping session hosts is not as easy as it sounds: To have the right amount of session hosts ready before users try to login in the morning you must predict the user behavior. And this is what “Project MySmartScale” does:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Predict the logon count over time based on historical data&lt;/li&gt;
  &lt;li&gt;Predict the logon count over time based on the acceleration of logons&lt;/li&gt;
  &lt;li&gt;Start the sessions hosts a few minutes before they are needed&lt;/li&gt;
  &lt;li&gt;Stop/deallocates unused session hosts if they are not needed&lt;/li&gt;
  &lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;..\assets\images\MySmartScale-01.png&quot; alt=&quot;MySmartScale-01&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Today I make this solution available via GitHub. You can easily deploy the solution into your Azure subscription and start to scale your VWD environment based on the usage. This can save up to 60-70% of the costs compared to a 24/7 pay-as-you-go model.&lt;/p&gt;

&lt;p&gt;Side-Note: It also scales a Citrix XenApp / Virtual Apps and Desktop environment in Azure without using Citrix Cloud (for IaaS).&lt;/p&gt;

&lt;p&gt;The free community version supports up to 5 VMs.&lt;/p&gt;

&lt;p&gt;Feel free to use it:&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/MarcelMeurer/Project-MySmartScale&quot;&gt;https://github.com/MarcelMeurer/Project-MySmartScale&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 09 Oct 2019 00:00:00 +0200</pubDate>
        <link>/Anouncing-Project-MySmartScale/</link>
        <guid isPermaLink="true">/Anouncing-Project-MySmartScale/</guid>
        
        
        <category>Windows Virtual Desktop</category>
        
        <category>Azure VM</category>
        
      </item>
    
      <item>
        <title>Workshop Azure Monitor - Lessons</title>
        <description>&lt;p&gt;To get practice in using Azure Monitor, I have prepared some examples. These examples can be recreated with a little PowerShell. I have prepared more complex program parts. These can be found in the “Tools” folder. Finished solutions are stored in the folder “Samples”.&lt;/p&gt;

&lt;p&gt;GitHub: &lt;a href=&quot;https://github.com/MarcelMeurer/Workshop-AzureMonitor&quot;&gt;https://github.com/MarcelMeurer/Workshop-AzureMonitor&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;in-the-tools-folder-there-are-the-following-scripts&quot;&gt;In the Tools folder there are the following scripts:&lt;/h3&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;/Add-AzureMonitorData.ps1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-WorpspaceId&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;WorkSpaceId&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-WorpspaceKey&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;WorpspaceKey&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-LogTypeName&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;LogTypeName&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-TimeStampField&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;TimeStampField&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-JsonData&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;JsonData&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Send jsonData to the Log Analytics workspace into the given LogTyeName. TimeStampField is not mandatory. If given, it must be the name of the field containing the timestamp of each data set.&lt;/p&gt;

&lt;h2 id=&quot;missions&quot;&gt;Missions&lt;/h2&gt;

&lt;h3 id=&quot;store-information-about-the-running-processes-from-your-computer&quot;&gt;Store information about the running processes from your computer&lt;/h3&gt;

&lt;p&gt;Collect the process information from your computer each 30 seconds and send these data to your Log Analytics workspace. Use PowerShell to automate this mission.&lt;/p&gt;

&lt;p&gt;Select an app and use this app  to “overload” your CPU.&lt;/p&gt;

&lt;p&gt;If data are visible in Log Analytics, build a custom dashboard by using “Log” to query the data.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Find out:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;Count of distinct processes&lt;/li&gt;
      &lt;li&gt;Average CPU load over time (all processes). Render a time chart&lt;/li&gt;
      &lt;li&gt;Render a time chart for the app you used to overload the CPU&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Some useful PowerShell commands:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;#Get cpu consumption by process&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Get-Counter&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;\process(*)\% Processor Time&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;CounterSamples&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#Convert objects to &lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$json&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ConvertTo-Json&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;store-temperature-data-for-multiple-cities&quot;&gt;Store temperature data for multiple cities&lt;/h3&gt;

&lt;p&gt;Collect data from OpenWeatherMap for three different cities each 30 seconds. Send the data to your Log Analytics workspace using Add-AzureMonitorData.ps1. Use PowerShell to automate this mission.&lt;/p&gt;

&lt;p&gt;If data are visible in Log Analytics, build a custom dashboard using the View Designer within Log Analytics. Build:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;One overview tile showing the number of the different cities&lt;/li&gt;
  &lt;li&gt;Two dashboards showing the temperature and humidity as a chart and as a list per city&lt;/li&gt;
  &lt;li&gt;Connect PowerBi Dekstop to your data: Display Line Charts and use a selector/filter for the cities (drop down field)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Hints:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Collect data from OpenWeatherMap&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;https://openweathermap.org/&lt;/li&gt;
      &lt;li&gt;Create an account and api key&lt;/li&gt;
      &lt;li&gt;Test your key (it can take some minutes):
 https://api.openweathermap.org/data/2.5/weather?q=Bonn&amp;amp;APIKEY=xxxxxxx&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Some useful PowerShell commands:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;#Endless-loop&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;   &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#Sleep $n seconds&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$n&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#make a http request&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Invoke-WebRequest&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Uri&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$uri&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Method&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-ContentType&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;application/json&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;build-your-own-log-writer-function&quot;&gt;Build your own log-writer function&lt;/h3&gt;

&lt;p&gt;Build a log-writer function for your own PowerShell scripts using Log Analytics. There are some request to your solution:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Have the following columns:
    &lt;ul&gt;
      &lt;li&gt;TimeStamp (as TimeGeneratedField)&lt;/li&gt;
      &lt;li&gt;
        &lt;table&gt;
          &lt;tbody&gt;
            &lt;tr&gt;
              &lt;td&gt;Serverity (Debug&lt;/td&gt;
              &lt;td&gt;Information&lt;/td&gt;
              &lt;td&gt;Warning&lt;/td&gt;
              &lt;td&gt;Error)&lt;/td&gt;
            &lt;/tr&gt;
          &lt;/tbody&gt;
        &lt;/table&gt;
      &lt;/li&gt;
      &lt;li&gt;Message (Text)&lt;/li&gt;
      &lt;li&gt;ScriptName (Name of the script using your function)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Sat, 21 Sep 2019 00:00:00 +0200</pubDate>
        <link>/Workshop-Azure-Monitor-Examples/</link>
        <guid isPermaLink="true">/Workshop-Azure-Monitor-Examples/</guid>
        
        
        <category>Azure Monitor</category>
        
        <category>Log Analytics</category>
        
      </item>
    
      <item>
        <title>On the road - My next speaking engagements</title>
        <description>&lt;p&gt;I’m happy to be a part of a great community.  On my journey, I have the possibility to speak at some conferences, meetups and other events. And I loved it. Especially, if I can talk about Azure, IoT, Machine Learning, AI, Azure Monitor, etc.&lt;/p&gt;

&lt;p&gt;Maybe we will meet personally at one of the next events:&lt;/p&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;https://sessionize.com/api/speaker/events/9c778515-935a-46b1-ad39-3740c5b0afcf/0x0x3fb393x&quot;&gt;&lt;/script&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

</description>
        <pubDate>Sat, 07 Sep 2019 00:00:00 +0200</pubDate>
        <link>/Speaking-update/</link>
        <guid isPermaLink="true">/Speaking-update/</guid>
        
        
        <category>Events</category>
        
        <category>Azure</category>
        
      </item>
    
      <item>
        <title>CDC Germany: RDS and Windows Virtual Desktop – Desktops in the year 2019 and beyond</title>
        <description>&lt;p&gt;From 21. to 22. April 2019 the annual Cloud and Datacenter Conference took place in Hanau/Frankfurt in Germany. It’s one of my favorite community events in Germany. This year I was allowed to contribute something to RDS in Windows Server 2019 and Windows Virtual Desktop – including Windows 10 Multi Session Host and FSLogix (an awesome combination).&lt;/p&gt;

&lt;p&gt;I published my slides to slideshare.net: 
&lt;a href=&quot;https://de.slideshare.net/MarcelMeurer/rds-windows-virtual-desktop-desktop-in-2019&quot;&gt;https://de.slideshare.net/MarcelMeurer/rds-windows-virtual-desktop-desktop-in-2019&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;the-demos-are-also-available-via-youtube&quot;&gt;The demos are also available via Youtube:&lt;/h2&gt;

&lt;h3 id=&quot;windows-virtual-desktop---login-to-a-shared-windows-10-multi-session-host&quot;&gt;Windows Virtual Desktop - Login to a shared Windows 10 Multi Session Host&lt;/h3&gt;

&lt;iframe width=&quot;1196&quot; height=&quot;673&quot; src=&quot;https://www.youtube.com/embed/rgsaQf3hmHw&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href=&quot;https://youtu.be/rgsaQf3hmHw&quot;&gt;https://youtu.be/rgsaQf3hmHw&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;windows-virtual-desktop---update-the-template-vm&quot;&gt;Windows Virtual Desktop - Update the template VM&lt;/h3&gt;

&lt;iframe width=&quot;1196&quot; height=&quot;673&quot; src=&quot;https://www.youtube.com/embed/YqrEm3EhbVY&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href=&quot;https://youtu.be/YqrEm3EhbVY&quot;&gt;https://youtu.be/YqrEm3EhbVY&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;windows-virtual-desktop---build-a-new-image-from-a-template-vm&quot;&gt;Windows Virtual Desktop - Build a new Image from a template VM&lt;/h3&gt;

&lt;iframe width=&quot;1196&quot; height=&quot;673&quot; src=&quot;https://www.youtube.com/embed/MOuH482A1co&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href=&quot;https://youtu.be/MOuH482A1co&quot;&gt;https://youtu.be/MOuH482A1co&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;windows-virtual-desktop---deploy-a-vm-from-a-template-via-powershell&quot;&gt;Windows Virtual Desktop - Deploy a VM from a template via PowerShell&lt;/h3&gt;

&lt;iframe width=&quot;1196&quot; height=&quot;673&quot; src=&quot;https://www.youtube.com/embed/U9zxyk_HuAM&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href=&quot;https://youtu.be/U9zxyk_HuAM&quot;&gt;https://youtu.be/U9zxyk_HuAM&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&quot;windows-virtual-desktop---deploy-a-scale-set-from-an-image-re-scale-azure-monitor&quot;&gt;Windows Virtual Desktop - Deploy a Scale Set from an image, re-scale, Azure Monitor&lt;/h3&gt;

&lt;iframe width=&quot;1196&quot; height=&quot;673&quot; src=&quot;https://www.youtube.com/embed/_l5P_JeQANM&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href=&quot;https://youtu.be/_l5P_JeQANM&quot;&gt;https://youtu.be/_l5P_JeQANM&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Fist published on: &lt;a href=&quot;https://www.sepago.de/blog/cdc-germany-rds-windows-virtual-desktop-desktops-in-2019/&quot;&gt;https://www.sepago.de/blog/cdc-germany-rds-windows-virtual-desktop-desktops-in-2019/&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Thu, 23 May 2019 00:00:00 +0200</pubDate>
        <link>/CDC-Germany-RDS-&-Windows-Virtual-Desktop-Desktops-in-2019/</link>
        <guid isPermaLink="true">/CDC-Germany-RDS-&-Windows-Virtual-Desktop-Desktops-in-2019/</guid>
        
        
        <category>Azure</category>
        
        <category>Windows Virtual Desktop</category>
        
        <category>Events</category>
        
        <category>PowerShell</category>
        
      </item>
    
      <item>
        <title>Publish your solution to the Azure Marketplace</title>
        <description>&lt;p&gt;Publishing own solutions to the Azure Marketplace seems to be very easy by using the documentation on &lt;a href=&quot;https://docs.microsoft.com/en-us/azure/marketplace/marketplace-publishers-guide&quot;&gt;https://docs.microsoft.com/en-us/azure/marketplace/marketplace-publishers-guide&lt;/a&gt;. To avoid any pitfalls I wrote down some insights about my first approach. In this blog, I will focus on “Azure Applications”&lt;/p&gt;

&lt;h2 id=&quot;the-cloud-partner-dashboard&quot;&gt;The Cloud Partner Dashboard&lt;/h2&gt;

&lt;p&gt;Make sure that you have access to the Cloud Partner Portal at &lt;a href=&quot;https://cloudpartner.azure.com&quot;&gt;https://cloudpartner.azure.com&lt;/a&gt;. In my case, I use my coopered credentials to log in.
Assign your Dev Center account details via Publisher Profile:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2019/03/PA01.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hint:&lt;/strong&gt;
I had some trouble doing this. My Dev Center account was not accepted. The reason was that my Dev Center account and my cooperated account names are/aren’t similar. A Dev Center account is always an MSA (former live id). So, I couldn’t invite this account into the Cloud Partner portal. My workaround:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create a new MSA, e.g. myname.dev@outlook.com&lt;/li&gt;
  &lt;li&gt;Create a new Dev Center account with the new MSA: &lt;a href=&quot;https://developer.microsoft.com&quot;&gt;https://developer.microsoft.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Add the new MSA into the Cloud Partner Portal
&lt;img src=&quot;/wp-content/uploads/2019/03/PA02.png&quot; alt=&quot;img&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;Assign your Dev Center account&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;prepare-your-publishing-package&quot;&gt;Prepare your publishing package&lt;/h2&gt;

&lt;p&gt;Publishing (-) Azure Applications means that you provide an ARM template and other resources, like:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;mainTemplate.json&lt;/li&gt;
  &lt;li&gt;createUiDefinition.json (&lt;a href=&quot;https://docs.microsoft.com/en-us/azure/managed-applications/create-uidefinition-overview&quot;&gt;https://docs.microsoft.com/en-us/azure/managed-applications/create-uidefinition-overview&lt;/a&gt;)&lt;/li&gt;
  &lt;li&gt;nestedtemplates.….json (for linked templates)&lt;/li&gt;
  &lt;li&gt;and maybe some other folders&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;All the files must be in a zip archive for (-) further upload. The folder structure is important and createUiDefinition.json and mainTemplate.json are mandatory.
The ARM templates and the create UI are checked by Microsoft before your offer is available to the public. To avoid some iterations, make sure that you have observed the following things:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ARM Templates
    &lt;ul&gt;
      &lt;li&gt;Do not reference external sources like nested templates on GitHub – everything must be in the package&lt;/li&gt;
      &lt;li&gt;maintemplate.json must have a “parameters” property&lt;/li&gt;
      &lt;li&gt;Parameters without defaultValue s. They must have a corresponding output in createUiDefinition.json&lt;/li&gt;
      &lt;li&gt;A parameter named “location” must exist and it must have a defaultValue of resourceGroup().location&lt;/li&gt;
      &lt;li&gt;Use the correct API versions#VM Image ref must not contain “-preview”&lt;/li&gt;
      &lt;li&gt;Do not concat Ids like:
&lt;em&gt;“[Concat(‘/subscriptions/’, parameters(‘subscriptionId’), ‘/resourceGroups/’, parameters(‘resourcegroup’), ‘/providers/Microsoft.OperationalInsights/workspaces/’, parameters(‘workspace’))]”&lt;/em&gt;
use resourceId:
&lt;em&gt;“[resourceId(‘Microsoft.OperationalInsights/workspaces’, parameters(‘workspace’))]&lt;/em&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;createUiDefinition.json
    &lt;ul&gt;
      &lt;li&gt;Must have a schema property&lt;/li&gt;
      &lt;li&gt;Handler property value should be ‘Microsoft.Compute.MultiVm’&lt;/li&gt;
      &lt;li&gt;Version property value must match schema version&lt;/li&gt;
      &lt;li&gt;Must have parameters and output(-) properties&lt;/li&gt;
      &lt;li&gt;Output location must be present in mainTemplate parameters&lt;/li&gt;
      &lt;li&gt;Output workspace must be present in mainTemplate parameters&lt;/li&gt;
      &lt;li&gt;Parameters should have basics and steps properties&lt;/li&gt;
      &lt;li&gt;Location must be in outputs and should match [location()]&lt;/li&gt;
      &lt;li&gt;Do not say that a user has to enter a unique name (e.g. for a web app) – generate a unique name with an appendix (use uniqueString()), e.g.:
&lt;em&gt;“[concat(parameters(‘resourcename’),’-‘, uniqueString(resourceGroup().id,subscription().subscriptionId))]”&lt;/em&gt;&lt;/li&gt;
      &lt;li&gt;Text boxes (for names) must have a regex constraint&lt;/li&gt;
      &lt;li&gt;Text boxes (for names) must have a validationMessage&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;publish-your-package-for-a-private-test&quot;&gt;Publish your package for a private test&lt;/h2&gt;

&lt;p&gt;After you have zipped your package, you can create a new “Azure Application” offer in the Cloud Partner portal. Select a new offer, Azure application and fill out the fields.
Publish it for your personal test (add your subscription id to make it visible).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2019/03/PA03.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;publish-your-package-to-the-public&quot;&gt;Publish your package to the public&lt;/h2&gt;

&lt;p&gt;After you have tested your package privately, you can apply to make it public to the world. This takes some time while automatism and a (human) reviewer check your templates. If something is invalid, you get a mail with a link to a pull request where you can check what’s wrong.&lt;/p&gt;

&lt;p&gt;Fist published on: &lt;a href=&quot;https://www.sepago.de/blog/publish-your-solution-to-the-azure-marketplace/&quot;&gt;https://www.sepago.de/blog/publish-your-solution-to-the-azure-marketplace/&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 25 Mar 2019 00:00:00 +0100</pubDate>
        <link>/Publish-your-solution-to-the-Azure-Marketplace/</link>
        <guid isPermaLink="true">/Publish-your-solution-to-the-Azure-Marketplace/</guid>
        
        
        <category>Azure Marketplace</category>
        
      </item>
    
      <item>
        <title>Why configuring Azure AD authentication with an Azure Web App fails</title>
        <description>&lt;p&gt;I spent hours today adding Azure AD authentication to an Azure MVC web application with Visual Studio. I always got the same error while adding the preconfigured AD application:&lt;/p&gt;

&lt;p&gt;“Error: Unable to query for Azure AD applications: An error occurred while processing this request.”&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2019/02/01-1024x703.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;My account has the right permission in Azure AD – I thought. After a while I found out: Visual Studio was connected to my Azure AD with three different accounts:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2019/02/02-1024x764.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Normally, that’s what I want, even if I have to publish some apps in other tenants/subscriptions. But in this special case two accounts are part of the Azure tenant where my Azure applications should be deployed:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2019/02/03-1024x364.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Visual Studio uses the first account (marked in red), which does not have the appropriate permissions.&lt;/p&gt;

&lt;p&gt;My “fast” resolution: I gave this account the right Azure AD role (Application Administrator) for 5 minutes and tried again with success:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2019/02/04-1024x703.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;First published on: &lt;a href=&quot;https://www.sepago.de/blog/why-configuring-azure-ad-authentication-with-an-azure-web-app-fails/&quot;&gt;https://www.sepago.de/blog/why-configuring-azure-ad-authentication-with-an-azure-web-app-fails/&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 09 Feb 2019 00:00:00 +0100</pubDate>
        <link>/Why-configuring-Azure-AD-authentication-with-an-Azure-Web-App-fails/</link>
        <guid isPermaLink="true">/Why-configuring-Azure-AD-authentication-with-an-Azure-Web-App-fails/</guid>
        
        
        <category>Azure AD</category>
        
        <category>Azure WebApp</category>
        
      </item>
    
      <item>
        <title>Deploy an Azure Functional App as an interface to Log Analytics / Azure Monitor</title>
        <description>&lt;h1 id=&quot;introduction&quot;&gt;Introduction&lt;/h1&gt;

&lt;p&gt;Microsoft offers with Log Analytics a cloud-based big data service. Log Analytics is used by several services (including Azure itself) to log and analyze data. It’s a core component of Azure Monitor and Application Insights.&lt;/p&gt;

&lt;p&gt;Log Analytics key facts:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Cloud-based&lt;/li&gt;
  &lt;li&gt;No data aggregation&lt;/li&gt;
  &lt;li&gt;Pay per upload and data retention&lt;/li&gt;
  &lt;li&gt;Powerful query language (kql: &amp;lt;&lt;a href=&quot;https://docs.microsoft.com/en-us/azure/kusto/&quot;&gt;https://docs.microsoft.com/en-us/azure/kusto/&lt;/a&gt;&amp;gt;)&lt;/li&gt;
  &lt;li&gt;Direct support for visualization on portal.azure.com&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I use Log Analytics for several projects where data aggregation and analyzation are main tasks. If I write code, I push data directly to Log Analytics – including generating a SAS signature for every single upload.&lt;/p&gt;

&lt;p&gt;The mandatory SAS signature avoids a simple upload via http-post to Log Analytics. But in some cases, it could be very helpful to work with a simple http-post command. For example: If you use Azure Stream Analytics, you cannot push data directly to Log Analytics.&lt;/p&gt;

&lt;p&gt;To allow pushing data via http-post I built this project. This project deploys an Azure function to your subscription. This function offers a simple http(s) interface (webhook) you can use to post JSON data to it. This data will be processed by the Azure Function and will be posted to your Log Analytics workspace.&lt;/p&gt;

&lt;h1 id=&quot;examples&quot;&gt;Examples:&lt;/h1&gt;

&lt;h2 id=&quot;with-postman&quot;&gt;With Postman&lt;/h2&gt;

&lt;h1&gt;&lt;img src=&quot;/wp-content/uploads/2019/01/Postman-1024x377.png&quot; alt=&quot;img&quot; /&gt;&lt;/h1&gt;

&lt;h2 id=&quot;with-powershell&quot;&gt;With PowerShell&lt;/h2&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'{
&quot;localTime&quot;:&quot;2019-01-02T11:11:12.013Z&quot;,
&quot;Humi&quot;:46.5,
&quot;Temp&quot;:14.2
}'&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Invoke-WebRequest&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Uri&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://testaf01xx8.azurewebsites.net/api/Send2LogAnalytics?code=xje5aQIMzPxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx==&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Method&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;POST&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Body&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2019/01/PowerShell-1024x656.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;with-stream-analytics&quot;&gt;With Stream Analytics&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Query:&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;To&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;From&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;IoT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Hub&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2019/01/StreamAnalytics-Query-1024x395.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Enter your Azure Function parameters&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2019/01/StreamAnalytics-Output-1024x377.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;results-in-log-analytics&quot;&gt;Results in Log Analytics&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2019/01/LA1-1024x697.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;For another data series&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2019/01/LA2-1024x665.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;deploying-and-configuration&quot;&gt;Deploying and configuration&lt;/h1&gt;

&lt;p&gt;Deploy your Azure Function using the deploy to Azure button.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://portal.azure.com/#create/Microsoft.Template/uri/https%3A%2F%2Fraw.githubusercontent.com%2FMarcelMeurer%2FFunctionApp-to-LogAnalytics%2Fmaster%2Ftemplate.json&quot;&gt;&lt;img src=&quot;http://azuredeploy.net/deploybutton.png&quot; alt=&quot;img&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Github: &lt;a href=&quot;https://github.com/MarcelMeurer/FunctionApp-to-LogAnalytics&quot;&gt;https://github.com/MarcelMeurer/FunctionApp-to-LogAnalytics&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;configuration&quot;&gt;Configuration&lt;/h2&gt;

&lt;p&gt;In the next step enter the following parameters:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Resource Group:
Select an existing or create a new resource group in a location of your choice (the function will be deployed in the Azure region of the resource group)&lt;/li&gt;
  &lt;li&gt;Site name:
A unique name of your function (unique means a worldwide unique hostname; the fqdn is: &lt;hostname&gt;.azurewebsites.com)&lt;/hostname&gt;&lt;/li&gt;
  &lt;li&gt;Workspace_Id:
The workspace id of your Log Analytics workspace (Log Analytics resource -&amp;gt; Advanced settings -&amp;gt; Workspace id)&lt;/li&gt;
  &lt;li&gt;Workspace_Key:
The workspace id of your Log Analytics workspace (Log Analytics resource -&amp;gt; Advanced settings -&amp;gt; Primary or secondary key)&lt;/li&gt;
  &lt;li&gt;LogType:
Name of your type (“table” name). You will see this name with an appended _CL (custom log) later in your workspace with your data&lt;/li&gt;
  &lt;li&gt;Time Field:
Optional. All data sets you send get a new field called “TimeGenerated”. TimeGenerated contains the time the data arrived at the workspace. If you set Time field to a custom field (like localTime from the example above), the time in this field is used as TimeGenerated.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Hint:&lt;/strong&gt; Workspace_Id, Workspace_Key, LogType, Time Field can be changed later in the function app:&lt;/p&gt;

&lt;p&gt;Your Function app -&amp;gt; Platform features -&amp;gt; Application settings&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2019/01/AppSettings-1024x264.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;resources&quot;&gt;Resources&lt;/h2&gt;

&lt;p&gt;After the deployment three resources are deployed and configured:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ServerFarmPlan:
A consumption-based pricing plan for the Azure Functional App. See &lt;a href=&quot;https://azure.microsoft.com/en-us/pricing/details/functions/&quot;&gt;https://azure.microsoft.com/en-us/pricing/details/functions/&lt;/a&gt; check the estimated costs billed to your subscription&lt;/li&gt;
  &lt;li&gt;Site name - Application Insights:
Application Insights to monitor the Azure Function itself&lt;/li&gt;
  &lt;li&gt;Site name - Azure Functional App:
The Azure Function containing the code&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;get-the-resource-url-of-the-azure-function&quot;&gt;Get the resource URL of the Azure Function&lt;/h2&gt;

&lt;p&gt;Open your Azure Function and navigate to Functions -&amp;gt; Send2LogAnalytics -&amp;gt; &amp;lt;/&amp;gt; Get function URL&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2019/01/FunctionURL-1024x377.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This URL contains your private key.&lt;/p&gt;

&lt;p&gt;First published on: &lt;a href=&quot;https://www.sepago.de/blog/deploy-an-azure-functional-app-as-an-interface-to-log-analytics-azure-monitor/&quot;&gt;https://www.sepago.de/blog/deploy-an-azure-functional-app-as-an-interface-to-log-analytics-azure-monitor/&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 13 Jan 2019 00:00:00 +0100</pubDate>
        <link>/Deploy-an-Azure-Functional-App-as-an-interface-to-Log-Analytics-Azure-Monitor/</link>
        <guid isPermaLink="true">/Deploy-an-Azure-Functional-App-as-an-interface-to-Log-Analytics-Azure-Monitor/</guid>
        
        
        <category>Azure Functions</category>
        
        <category>Azure Monitor</category>
        
        <category>Log Analytics</category>
        
      </item>
    
      <item>
        <title>Creating devices for Azure IoT Hub with SAS token automatically</title>
        <description>&lt;p&gt;A few weeks ago, I started an IoT project with a company responsible for a huge amount of different buildings around the world. We deployed several virtual and physical sensors in Azure IoT Hub. Doing this we had three challenges:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Deploy new IoT devices in Azure IoT hub in a batch&lt;/li&gt;
  &lt;li&gt;Generate SAS tokens for these IoT devices&lt;/li&gt;
  &lt;li&gt;Generate SAS tokens even if a device still exist in Azure IoT Hub&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The requirement of batch processing avoids the use of the Device Explorer to generate SAS token. Therefore, I wrote a short PowerShell script:&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
55
56
57
58
59
60
61
62
63
64
65
66
67
68
69
70
71
72
73
74
75
76
77
78
79
80
81
82
83
84
85
86
87
88
89
90
91
92
93
94
95
96
97
98
99
100
101
102
103
104
105
106
107
108
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;New-SASToken&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;PARAM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Parameter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Mandatory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ResourceUri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Parameter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Mandatory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$KeyName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$TokenTimeOut&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1800&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# in seconds&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Reflection.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Assembly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;LoadWithPartialName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;System.Web&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;out-null&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Expires&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;DateTimeOffset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Now.ToUnixTimeSeconds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$TokenTimeOut&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#Building Token&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$SignatureString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;System.Web.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;HttpUtility&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UrlEncode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ResourceUri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;`n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Expires&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HMAC&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;New-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;System.Security.Cryptography.HMACSHA256&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HMAC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;FromBase64String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Signature&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HMAC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ComputeHash&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Text.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ASCII.GetBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$SignatureString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Signature&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToBase64String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Signature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$SASToken&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;SharedAccessSignature sr=&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;System.Web.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;HttpUtility&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UrlEncode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ResourceUri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;amp;sig=&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;System.Web.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;HttpUtility&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UrlEncode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Signature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;amp;se=&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Expires&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$KeyName&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-ne&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$SASToken&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$SASToken&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;amp;skn=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$KeyName&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$SASToken&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;New-IoTDevice&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;PARAM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Parameter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Mandatory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$IoTHubConnectionString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Parameter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Mandatory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$DeviceId&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;Reflection.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;Assembly&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;LoadWithPartialName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;System.Web&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;out-null&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$strings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$IoTHubConnectionString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$keys&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;@{}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-lt&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$strings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$strings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;=&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$strings&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;=&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;SharedAccessKey&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;SharedAccessKey&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;=&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$body&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'{deviceId:&quot;'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$DeviceId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'&quot;}'&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$webRequest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Invoke-WebRequest&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Method&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PUT&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Uri&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;HostName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/devices/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;System.Web.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;HttpUtility&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UrlEncode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$DeviceId&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;)?api-version=2018-06-30&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-ContentType&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;application/json&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Header&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;@{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Authorization&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;New&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SASToken&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ResourceUri&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$keys&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;HostName&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Key&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$keys&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;SharedAccessKey&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;KeyName&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$keys&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;SharedAccessKeyName&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Body&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$body&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-UseBasicParsing&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;System.Net.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;WebException&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;StatusCode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;value__&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-eq&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;409&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;write-host&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Device exists. Getting data from IoT hub&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$webRequest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Invoke-WebRequest&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Method&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;GET&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Uri&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;HostName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/devices/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;System.Web.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;HttpUtility&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UrlEncode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$DeviceId&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;)?api-version=2018-06-30&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-ContentType&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;application/json&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Header&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;@{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Authorization&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;New&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SASToken&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ResourceUri&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$keys&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;HostName&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Key&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$keys&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;SharedAccessKey&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;KeyName&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$keys&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;SharedAccessKeyName&quot;&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;])&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-UseBasicParsing&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Write-Error&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;An exception was caught: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Message&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;
}
}
return ConvertFrom-Json &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$webRequest&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.Content
}
function Send-IoTDeviceTestString
{
PARAM(
[Parameter(Mandatory=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$True&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;)]
[string]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$sasToken&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;
)
[Reflection.Assembly]::LoadWithPartialName(&quot;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;System.Web&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;)| out-null
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$t1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;=[System.Web.HttpUtility]::UrlDecode(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$sasToken&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;)
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$t2&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$t1&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.Split(&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;)
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$t3&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$t2&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;[1].Split(&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;)[0]
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$deviceId&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$t3&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.Split(&quot;&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;)[2]
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$iotHubDeviceHost&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$t3&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$iotHubRestURI&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; = &quot;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;https://&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$iotHubDeviceHost&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/messages/events?api-version=2018-04-01&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#$iotHubRestURI&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Headers&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;@{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Authorization&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$sasToken&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;application/json&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# Message Payload&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$datetime&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get-date&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$body&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;@{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;datetime&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$datetime&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;deviceId&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$deviceId&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Message&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Sending data to iot hub&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$body&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$body&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ConvertTo-Json&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Invoke-RestMethod&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Uri&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$iotHubRestURI&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Headers&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Headers&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Method&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Post&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Body&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$body&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$iotHubName&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Workshop-IoT&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# host name of the iot hub&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$iotManagementConnectionString&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;HostName=Workshop-IoT.azure-devices.net;SharedAccessKeyName=iothubowner;SharedAccessKey=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# insert the connection string of your iot hub&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# name of the new devices&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$array&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;@(&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;TestDev1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;SEPAGO_HBS2.0_DE_Cologne_HQ_VDEV_ISP08-IO0&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;SEPAGO_HBS2.0_DE_Cologne_HQ_VDEV_ISP08-RTU&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$deviceId&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Write-Host&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;New device created: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$deviceId&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$device&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;New-IoTDevice&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-IoTHubConnectionString&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$iotManagementConnectionString&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-DeviceId&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$deviceId&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$sasToken&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;New-SASToken&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-ResourceUri&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$iotHubName&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.azure-devices.net/devices/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;System.Web.&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;HttpUtility&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UrlEncode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$device&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;deviceId&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Key&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$device&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;authentication&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;symmetricKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;primaryKey&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;write-host&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;DeviceId:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$device&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;deviceId&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;write-host&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;SASToken:&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$sasToken&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$deviceConfig&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Send-IoTDeviceTestString&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-sasToken&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$sasToken&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;write-host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;--------------------------&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Feel free to use it in your projects.&lt;/p&gt;

&lt;p&gt;Feedback welcome&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/wp-content/uploads/2018/11/IOT-1024x410.png&quot; alt=&quot;img&quot; /&gt;&lt;/p&gt;

&lt;p&gt;First published on: &lt;a href=&quot;https://www.sepago.de/blog/creating-devices-for-azure-iot-hub-with-sas-token-automatically/&quot;&gt;https://www.sepago.de/blog/creating-devices-for-azure-iot-hub-with-sas-token-automatically/&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 23 Nov 2018 00:00:00 +0100</pubDate>
        <link>/Creating-devices-for-Azure-IoT-Hub-with-SAS-token-automatically/</link>
        <guid isPermaLink="true">/Creating-devices-for-Azure-IoT-Hub-with-SAS-token-automatically/</guid>
        
        
        <category>Azure IoT</category>
        
        <category>PowerShell</category>
        
      </item>
    
  </channel>
</rss>
